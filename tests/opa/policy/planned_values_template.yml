child_modules:
  - resources:
      - address: module.test_root_id_1.azurerm_management_group.level_1["/providers/Microsoft.Management/managementGroups/myorg-1"]
        mode: managed
        type: azurerm_management_group
        name: level_1
        index: /providers/Microsoft.Management/managementGroups/myorg-1
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          display_name: My Organization-1
          name: myorg-1
          parent_management_group_id: /providers/Microsoft.Management/managementGroups/dac8feee-8768-4fbd-9cf9-9d96d4718018
          timeouts: null
      - address: module.test_root_id_1.azurerm_management_group.level_2["/providers/Microsoft.Management/managementGroups/myorg-1-decommissioned"]
        mode: managed
        type: azurerm_management_group
        name: level_2
        index: /providers/Microsoft.Management/managementGroups/myorg-1-decommissioned
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          display_name: Decommissioned
          name: myorg-1-decommissioned
          parent_management_group_id: /providers/Microsoft.Management/managementGroups/myorg-1
          timeouts: null
      - address: module.test_root_id_1.azurerm_management_group.level_2["/providers/Microsoft.Management/managementGroups/myorg-1-landing-zones"]
        mode: managed
        type: azurerm_management_group
        name: level_2
        index: /providers/Microsoft.Management/managementGroups/myorg-1-landing-zones
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          display_name: Landing Zones
          name: myorg-1-landing-zones
          parent_management_group_id: /providers/Microsoft.Management/managementGroups/myorg-1
          timeouts: null
      - address: module.test_root_id_1.azurerm_management_group.level_2["/providers/Microsoft.Management/managementGroups/myorg-1-platform"]
        mode: managed
        type: azurerm_management_group
        name: level_2
        index: /providers/Microsoft.Management/managementGroups/myorg-1-platform
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          display_name: Platform
          name: myorg-1-platform
          parent_management_group_id: /providers/Microsoft.Management/managementGroups/myorg-1
          timeouts: null
      - address: module.test_root_id_1.azurerm_management_group.level_2["/providers/Microsoft.Management/managementGroups/myorg-1-sandboxes"]
        mode: managed
        type: azurerm_management_group
        name: level_2
        index: /providers/Microsoft.Management/managementGroups/myorg-1-sandboxes
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          display_name: Sandboxes
          name: myorg-1-sandboxes
          parent_management_group_id: /providers/Microsoft.Management/managementGroups/myorg-1
          timeouts: null
      - address: module.test_root_id_1.azurerm_management_group.level_3["/providers/Microsoft.Management/managementGroups/myorg-1-connectivity"]
        mode: managed
        type: azurerm_management_group
        name: level_3
        index: /providers/Microsoft.Management/managementGroups/myorg-1-connectivity
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          display_name: Connectivity
          name: myorg-1-connectivity
          parent_management_group_id: /providers/Microsoft.Management/managementGroups/myorg-1-platform
          timeouts: null
      - address: module.test_root_id_1.azurerm_management_group.level_3["/providers/Microsoft.Management/managementGroups/myorg-1-identity"]
        mode: managed
        type: azurerm_management_group
        name: level_3
        index: /providers/Microsoft.Management/managementGroups/myorg-1-identity
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          display_name: Identity
          name: myorg-1-identity
          parent_management_group_id: /providers/Microsoft.Management/managementGroups/myorg-1-platform
          timeouts: null
      - address: module.test_root_id_1.azurerm_management_group.level_3["/providers/Microsoft.Management/managementGroups/myorg-1-management"]
        mode: managed
        type: azurerm_management_group
        name: level_3
        index: /providers/Microsoft.Management/managementGroups/myorg-1-management
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          display_name: Management
          name: myorg-1-management
          parent_management_group_id: /providers/Microsoft.Management/managementGroups/myorg-1-platform
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-IP-Forwarding"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-IP-Forwarding
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Network interfaces should disable IP forwarding.
          display_name: Deny-IP-Forwarding
          enforcement_mode: true
          identity:
            - type: None
          location: eastus
          name: Deny-IP-Forwarding
          not_scopes: []
          parameters: null
          policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/88c0b9da-ce96-4b03-9635-f29a937e2900
          scope: /providers/Microsoft.Management/managementGroups/myorg-1-landing-zones
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Priv-Containers-AKS"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Priv-Containers-AKS
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deny-Privileged-Containers-AKS.
          display_name: Deny-Privileged-Containers-AKS
          enforcement_mode: true
          identity:
            - type: None
          location: eastus
          name: Deny-Priv-Containers-AKS
          not_scopes: []
          parameters: '{"effect":{"value":"deny"}}'
          policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/95edb821-ddaf-4404-9732-666045e056b4
          scope: /providers/Microsoft.Management/managementGroups/myorg-1-landing-zones
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Priv-Escalation-AKS"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Priv-Escalation-AKS
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deny-Privileged-Escalations-AKS.
          display_name: Deny-Privileged-Escalations-AKS
          enforcement_mode: true
          identity:
            - type: None
          location: eastus
          name: Deny-Priv-Escalation-AKS
          not_scopes: []
          parameters: '{"effect":{"value":"deny"}}'
          policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/1c6e92c9-99f0-4e55-9cf2-0c234dc48f99
          scope: /providers/Microsoft.Management/managementGroups/myorg-1-landing-zones
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-RDP-From-Internet"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-RDP-From-Internet
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deny RDP access from the Internet.
          display_name: Deny-RDP-From-Internet
          enforcement_mode: true
          identity:
            - type: None
          location: eastus
          name: Deny-RDP-From-Internet
          not_scopes: []
          parameters: null
          policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-RDP-From-Internet
          scope: /providers/Microsoft.Management/managementGroups/myorg-1-landing-zones
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Storage-http"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Storage-http
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Enforce-Secure-Storage.
          display_name: Enforce-Secure-Storage
          enforcement_mode: true
          identity:
            - type: None
          location: eastus
          name: Deny-Storage-http
          not_scopes: []
          parameters: null
          policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/404c3081-a854-4457-ae30-26a93ef643f9
          scope: /providers/Microsoft.Management/managementGroups/myorg-1-landing-zones
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Subnet-Without-Nsg"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Subnet-Without-Nsg
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deny provisioning of subnet without NSG attached.
          display_name: Deny-Subnet-Without-Nsg
          enforcement_mode: true
          identity:
            - type: None
          location: eastus
          name: Deny-Subnet-Without-Nsg
          not_scopes: []
          parameters: null
          policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Nsg
          scope: /providers/Microsoft.Management/managementGroups/myorg-1-landing-zones
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-http-Ingress-AKS"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-http-Ingress-AKS
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Enforce-Https-Ingress-AKS.
          display_name: Enforce-Https-Ingress-AKS
          enforcement_mode: true
          identity:
            - type: None
          location: eastus
          name: Deny-http-Ingress-AKS
          not_scopes: []
          parameters: '{"effect":{"value":"deny"}}'
          policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/1a5b4dca-0b6f-4cf5-907c-56316bc1bf3d
          scope: /providers/Microsoft.Management/managementGroups/myorg-1-landing-zones
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-AKS-Policy"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-AKS-Policy
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy-AKS-Policy.
          display_name: Deploy-AKS-Policy
          enforcement_mode: true
          identity:
            - type: SystemAssigned
          location: eastus
          name: Deploy-AKS-Policy
          not_scopes: []
          parameters: null
          policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/a8eff44f-8c92-45c3-a3fb-9880802d67a7
          scope: /providers/Microsoft.Management/managementGroups/myorg-1-landing-zones
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-DB-Auditing"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-DB-Auditing
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy-SQL-Audit.
          display_name: Deploy-SQL-Audit
          enforcement_mode: true
          identity:
            - type: SystemAssigned
          location: eastus
          name: Deploy-SQL-DB-Auditing
          not_scopes: []
          parameters: null
          policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/a6fb4358-5bf4-4ad7-ba82-2cd2f41ce5e9
          scope: /providers/Microsoft.Management/managementGroups/myorg-1-landing-zones
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-Security"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-Security
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy-SQL-Security.
          display_name: Deploy-SQL-Security
          enforcement_mode: true
          identity:
            - type: SystemAssigned
          location: eastus
          name: Deploy-SQL-Security
          not_scopes: []
          parameters: null
          policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/86a912f6-9a06-4e26-b447-11b16ba8659f
          scope: /providers/Microsoft.Management/managementGroups/myorg-1-landing-zones
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Backup"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Backup
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Ensures that Azure Backup is configured for Virtual Machines.
          display_name: Deploy-VM-Backup
          enforcement_mode: true
          identity:
            - type: SystemAssigned
          location: eastus
          name: Deploy-VM-Backup
          not_scopes: []
          parameters: null
          policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/98d0b9f8-fd90-49c9-88e2-d3baf3b0dd86
          scope: /providers/Microsoft.Management/managementGroups/myorg-1-landing-zones
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1-management/providers/Microsoft.Authorization/policyAssignments/Deploy-Log-Analytics"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1-management/providers/Microsoft.Authorization/policyAssignments/Deploy-Log-Analytics
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy-Log-Analytics.
          display_name: Deploy-Log-Analytics
          enforcement_mode: true
          identity:
            - type: SystemAssigned
          location: eastus
          name: Deploy-Log-Analytics
          not_scopes: []
          parameters: '{"automationAccountName":{"value":"myorg-1-automation"},"automationRegion":{"value":"eastus"},"effect":{"value":"DeployIfNotExists"},"retentionInDays":{"value":"30"},"rgName":{"value":"myorg-1-mgmt"},"workspaceName":{"value":"myorg-1-la"},"workspaceRegion":{"value":"eastus"}}'
          policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Log-Analytics
          scope: /providers/Microsoft.Management/managementGroups/myorg-1-management
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyAssignments/Deploy-ASC-Defender"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyAssignments/Deploy-ASC-Defender
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy-ASC-Defender.
          display_name: Deploy-ASC-Defender
          enforcement_mode: true
          identity:
            - type: SystemAssigned
          location: eastus
          name: Deploy-ASC-Defender
          not_scopes: []
          parameters: '{"ascExportResourceGroupLocation":{"value":"eastus"},"ascExportResourceGroupName":{"value":"myorg-1-asc-export"},"emailSecurityContact":{"value":"security_contact@replace_me"},"logAnalytics":{"value":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myorg-1-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-1-la"},"pricingTierAppServices":{"value":"Standard"},"pricingTierArm":{"value":"Standard"},"pricingTierContainerRegistry":{"value":"Standard"},"pricingTierDns":{"value":"Standard"},"pricingTierKeyVaults":{"value":"Standard"},"pricingTierKubernetesService":{"value":"Standard"},"pricingTierSqlServerVirtualMachines":{"value":"Standard"},"pricingTierSqlServers":{"value":"Standard"},"pricingTierStorageAccounts":{"value":"Standard"},"pricingTierVMs":{"value":"Standard"}}'
          policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policySetDefinitions/Deploy-ASC-Config
          scope: /providers/Microsoft.Management/managementGroups/myorg-1
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyAssignments/Deploy-ASC-Monitoring"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyAssignments/Deploy-ASC-Monitoring
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Enable Monitoring in Azure Security Center.
          display_name: Enable Monitoring in Azure Security Center
          enforcement_mode: true
          identity:
            - type: None
          location: eastus
          name: Deploy-ASC-Monitoring
          not_scopes: []
          parameters: '{"aadAuthenticationInSqlServerMonitoringEffect":{"value":"Disabled"},"diskEncryptionMonitoringEffect":{"value":"Disabled"},"encryptionOfAutomationAccountMonitoringEffect":{"value":"Disabled"},"identityDesignateLessThanOwnersMonitoringEffect":{"value":"Disabled"},"identityDesignateMoreThanOneOwnerMonitoringEffect":{"value":"Disabled"},"identityEnableMFAForWritePermissionsMonitoringEffect":{"value":"Disabled"},"identityRemoveDeprecatedAccountMonitoringEffect":{"value":"Disabled"},"identityRemoveDeprecatedAccountWithOwnerPermissionsMonitoringEffect":{"value":"Disabled"},"identityRemoveExternalAccountWithOwnerPermissionsMonitoringEffect":{"value":"Disabled"},"identityRemoveExternalAccountWithReadPermissionsMonitoringEffect":{"value":"Disabled"},"identityRemoveExternalAccountWithWritePermissionsMonitoringEffect":{"value":"Disabled"},"jitNetworkAccessMonitoringEffect":{"value":"Disabled"},"networkSecurityGroupsOnSubnetsMonitoringEffect":{"value":"AuditIfNotExists"},"sqlDbEncryptionMonitoringEffect":{"value":"Disabled"},"sqlManagedInstanceAdvancedDataSecurityEmailAdminsMonitoringEffect":{"value":"Disabled"},"sqlManagedInstanceAdvancedDataSecurityEmailsMonitoringEffect":{"value":"Disabled"},"sqlServerAdvancedDataSecurityEmailAdminsMonitoringEffect":{"value":"Disabled"},"sqlServerAdvancedDataSecurityMonitoringEffect":{"value":"Disabled"},"systemUpdatesMonitoringEffect":{"value":"Disabled"},"useRbacRulesMonitoringEffect":{"value":"Disabled"},"vmssSystemUpdatesMonitoringEffect":{"value":"Disabled"},"windowsDefenderExploitGuardMonitoringEffect":{"value":"Disabled"}}'
          policy_definition_id: /providers/Microsoft.Authorization/policySetDefinitions/1f3afdf9-d0c9-4c3d-847f-89da613e70a8
          scope: /providers/Microsoft.Management/managementGroups/myorg-1
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyAssignments/Deploy-AzActivity-Log"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyAssignments/Deploy-AzActivity-Log
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Ensures that Activity Log Diagnostics settings are set to push logs into Log Analytics workspace.
          display_name: Deploy Diagnostic Settings for Activity Log to Log Analytics workspace
          enforcement_mode: true
          identity:
            - type: SystemAssigned
          location: eastus
          name: Deploy-AzActivity-Log
          not_scopes: []
          parameters: '{"logAnalytics":{"value":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myorg-1-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-1-la"}}'
          policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ActivityLog
          scope: /providers/Microsoft.Management/managementGroups/myorg-1
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyAssignments/Deploy-LX-Arc-Monitoring"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyAssignments/Deploy-LX-Arc-Monitoring
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy-Linux-Arc-Monitoring.
          display_name: Deploy-Linux-Arc-Monitoring
          enforcement_mode: true
          identity:
            - type: SystemAssigned
          location: eastus
          name: Deploy-LX-Arc-Monitoring
          not_scopes: []
          parameters: '{"logAnalytics":{"value":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myorg-1-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-1-la"}}'
          policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/9d2b61b4-1d14-4a63-be30-d4498e7ad2cf
          scope: /providers/Microsoft.Management/managementGroups/myorg-1
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyAssignments/Deploy-Resource-Diag"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyAssignments/Deploy-Resource-Diag
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Ensures that Azure resources are configured to forward diagnostic logs and metrics to an Azure Log Analytics workspace.
          display_name: Deploy-Resource-Diag
          enforcement_mode: true
          identity:
            - type: SystemAssigned
          location: eastus
          name: Deploy-Resource-Diag
          not_scopes: []
          parameters: '{"logAnalytics":{"value":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myorg-1-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-1-la"}}'
          policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Diag-LogAnalytics
          scope: /providers/Microsoft.Management/managementGroups/myorg-1
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Monitoring"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Monitoring
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Ensures that Azure Monitor is configured for Virtual Machines.
          display_name: Deploy-VM-Monitoring
          enforcement_mode: true
          identity:
            - type: SystemAssigned
          location: eastus
          name: Deploy-VM-Monitoring
          not_scopes: []
          parameters: '{"logAnalytics_1":{"value":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myorg-1-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-1-la"}}'
          policy_definition_id: /providers/Microsoft.Authorization/policySetDefinitions/55f3eceb-5573-4f18-9695-226972c6d74a
          scope: /providers/Microsoft.Management/managementGroups/myorg-1
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyAssignments/Deploy-VMSS-Monitoring"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyAssignments/Deploy-VMSS-Monitoring
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Ensures that Azure Monitor is configured for Virtual Machine Scale Sets.
          display_name: Deploy-VMSS-Monitoring
          enforcement_mode: true
          identity:
            - type: SystemAssigned
          location: eastus
          name: Deploy-VMSS-Monitoring
          not_scopes: []
          parameters: '{"logAnalytics_1":{"value":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myorg-1-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-1-la"}}'
          policy_definition_id: /providers/Microsoft.Authorization/policySetDefinitions/75714362-cae7-409e-9b99-a8e5075b7fad
          scope: /providers/Microsoft.Management/managementGroups/myorg-1
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyAssignments/Deploy-WS-Arc-Monitoring"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyAssignments/Deploy-WS-Arc-Monitoring
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the Log Analytics agent to Windows Azure Arc machines if the agent isn't installed.
          display_name: Deploy-Windows-Arc-Monitoring
          enforcement_mode: true
          identity:
            - type: SystemAssigned
          location: eastus
          name: Deploy-WS-Arc-Monitoring
          not_scopes: []
          parameters: '{"logAnalytics":{"value":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myorg-1-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-1-la"}}'
          policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/69af7d4a-7b18-4044-93a9-2651498ef203
          scope: /providers/Microsoft.Management/managementGroups/myorg-1
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-httpsonly"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-httpsonly
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Appends the AppService sites object to ensure that  HTTPS only is enabled for  server/service authentication and protects data in transit from network layer eavesdropping attacks. Please note Append does not enforce compliance use then deny.
          display_name: AppService append enable https only setting to enforce https setting.
          management_group_name: myorg-1
          metadata: '{"category":"App Service","version":"1.0.0"}'
          mode: All
          name: Append-AppService-httpsonly
          parameters: '{"effect":{"allowedValues":["Append","Disabled"],"defaultValue":"Append","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Web/sites","field":"type"},{"field":"Microsoft.Web/sites/httpsOnly","notequals":true}]},"then":{"details":[{"field":"Microsoft.Web/sites/httpsOnly","value":true}],"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-latestTLS"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-latestTLS
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Append the AppService sites object to ensure that min Tls version is set to required minimum TLS version. Please note Append does not enforce compliance use then deny.
          display_name: AppService append sites with minimum TLS version to enforce.
          management_group_name: myorg-1
          metadata: '{"category":"App Service","version":"1.0.0"}'
          mode: Indexed
          name: Append-AppService-latestTLS
          parameters: '{"effect":{"allowedValues":["Append","Disabled"],"defaultValue":"Append","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"minTlsVersion":{"allowedValues":["1.2","1.0","1.1"],"defaultValue":"1.2","metadata":{"description":"Select version  minimum TLS version for a  Web App config to enforce","displayName":"Select version minimum TLS Web App config"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Web/sites/config","field":"type"},{"field":"Microsoft.Web/sites/config/minTlsVersion","notEquals":"[parameters(''minTlsVersion'')]"}]},"then":{"details":[{"field":"Microsoft.Web/sites/config/minTlsVersion","value":"[parameters(''minTlsVersion'')]"}],"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Append-KV-SoftDelete"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Append-KV-SoftDelete
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy enables you to ensure when a Key Vault is created with out soft delete enabled it will be added.
          display_name: KeyVault SoftDelete should be enabled
          management_group_name: myorg-1
          metadata: '{"category":"Key Vault","version":"1.0.0"}'
          mode: Indexed
          name: Append-KV-SoftDelete
          parameters: null
          policy_rule: '{"if":{"anyOf":[{"allOf":[{"equals":"Microsoft.KeyVault/vaults","field":"type"},{"field":"Microsoft.KeyVault/vaults/enableSoftDelete","notEquals":true}]}]},"then":{"details":[{"field":"Microsoft.KeyVault/vaults/enableSoftDelete","value":true}],"effect":"append"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-disableNonSslPort"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-disableNonSslPort
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Azure Cache for Redis Append and the enforcement that enableNonSslPort is disabled. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.
          display_name: Azure Cache for Redis Append and the enforcement that enableNonSslPort is disabled.
          management_group_name: myorg-1
          metadata: '{"category":"Cache","version":"1.0.0"}'
          mode: Indexed
          name: Append-Redis-disableNonSslPort
          parameters: '{"effect":{"allowedValues":["Append","Disabled","Modify"],"defaultValue":"Append","metadata":{"description":"Enable or disable the execution of the policy minimum TLS version Azure Cache for Redis","displayName":"Effect Azure Cache for Redis"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Cache/redis","field":"type"},{"anyOf":[{"equals":"true","field":"Microsoft.Cache/Redis/enableNonSslPort"}]}]},"then":{"details":[{"field":"Microsoft.Cache/Redis/enableNonSslPort","value":false}],"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-sslEnforcement"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-sslEnforcement
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Append a specific min TLS version requirement and enforce SSL on Azure Cache for Redis. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.
          display_name: Azure Cache for Redis Append a specific min TLS version requirement and enforce TLS.
          management_group_name: myorg-1
          metadata: '{"category":"Cache","version":"1.0.0"}'
          mode: Indexed
          name: Append-Redis-sslEnforcement
          parameters: '{"effect":{"allowedValues":["Append","Disabled"],"defaultValue":"Append","metadata":{"description":"Enable or disable the execution of the policy minimum TLS version Azure Cache for Redis","displayName":"Effect Azure Cache for Redis"},"type":"String"},"minimumTlsVersion":{"allowedValues":["1.2","1.1","1.0"],"defaultValue":"1.2","metadata":{"description":"Select version minimum TLS version Azure Cache for Redis to enforce","displayName":"Select version for Redis server"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Cache/redis","field":"type"},{"anyOf":[{"field":"Microsoft.Cache/Redis/minimumTlsVersion","notequals":"[parameters(''minimumTlsVersion'')]"}]}]},"then":{"details":[{"field":"Microsoft.Cache/Redis/minimumTlsVersion","value":"[parameters(''minimumTlsVersion'')]"}],"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-AA-child-resources"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-AA-child-resources
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy denies the creation of child resources on the Automation Account
          display_name: No child resources in Automation Account
          management_group_name: myorg-1
          metadata: '{"category":"Automation","version":"1.0.0"}'
          mode: Indexed
          name: Deny-AA-child-resources
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"field":"type","in":["Microsoft.Automation/automationAccounts/runbooks","Microsoft.Automation/automationAccounts/variables","Microsoft.Automation/automationAccounts/modules","Microsoft.Automation/automationAccounts/credentials","Microsoft.Automation/automationAccounts/connections","Microsoft.Automation/automationAccounts/certificates"]}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-AppGW-Without-WAF"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-AppGW-Without-WAF
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy enables you to restrict that Application Gateways is always deployed with WAF enabled
          display_name: Application Gateway should be deployed with WAF enabled
          management_group_name: myorg-1
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: Indexed
          name: Deny-AppGW-Without-WAF
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Network/applicationGateways","field":"type"},{"field":"Microsoft.Network/applicationGateways/sku.name","notequals":"WAF_v2"}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceApiApp-http"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceApiApp-http
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks.
          display_name: API App should only be accessible over HTTPS
          management_group_name: myorg-1
          metadata: '{"category":"App Service","version":"1.0.0"}'
          mode: Indexed
          name: Deny-AppServiceApiApp-http
          parameters: '{"effect":{"allowedValues":["Audit","Disabled","Deny"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Web/sites","field":"type"},{"field":"kind","like":"*api"},{"equals":"false","field":"Microsoft.Web/sites/httpsOnly"}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceFunctionApp-http"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceFunctionApp-http
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks.
          display_name: Function App should only be accessible over HTTPS
          management_group_name: myorg-1
          metadata: '{"category":"App Service","version":"1.0.0"}'
          mode: Indexed
          name: Deny-AppServiceFunctionApp-http
          parameters: '{"effect":{"allowedValues":["Audit","Disabled","Deny"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Web/sites","field":"type"},{"field":"kind","like":"functionapp*"},{"equals":"false","field":"Microsoft.Web/sites/httpsOnly"}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceWebApp-http"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceWebApp-http
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks.
          display_name: Web Application should only be accessible over HTTPS
          management_group_name: myorg-1
          metadata: '{"category":"App Service","version":"1.0.0"}'
          mode: Indexed
          name: Deny-AppServiceWebApp-http
          parameters: '{"effect":{"allowedValues":["Audit","Disabled","Deny"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Web/sites","field":"type"},{"field":"kind","like":"app*"},{"equals":"false","field":"Microsoft.Web/sites/httpsOnly"}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-MySql-http"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-MySql-http
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Azure Database for MySQL supports connecting your Azure Database for MySQL server to client applications using Secure Sockets Layer (SSL). Enforcing SSL connections between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.
          display_name: MySQL database servers enforce SSL connections.
          management_group_name: myorg-1
          metadata: '{"category":"SQL","version":"1.0.0"}'
          mode: Indexed
          name: Deny-MySql-http
          parameters: '{"effect":{"allowedValues":["Audit","Disabled","Deny"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"minimalTlsVersion":{"allowedValues":["TLS1_2","TLS1_0","TLS1_1","TLSEnforcementDisabled"],"defaultValue":"TLS1_2","metadata":{"description":"Select version  minimum TLS version Azure Database for MySQL server to enforce","displayName":"Select version minimum TLS for MySQL server"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.DBforMySQL/servers","field":"type"},{"anyOf":[{"exists":"false","field":"Microsoft.DBforMySQL/servers/sslEnforcement"},{"field":"Microsoft.DBforMySQL/servers/sslEnforcement","notEquals":"Enabled"},{"field":"Microsoft.DBforMySQL/servers/minimalTlsVersion","notequals":"[parameters(''minimalTlsVersion'')]"}]}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-PostgreSql-http"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-PostgreSql-http
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Azure Database for PostgreSQL supports connecting your Azure Database for PostgreSQL server to client applications using Secure Sockets Layer (SSL). Enforcing SSL connections between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.
          display_name: PostgreSQL database servers enforce SSL connection.
          management_group_name: myorg-1
          metadata: '{"category":"SQL","version":"1.0.1"}'
          mode: Indexed
          name: Deny-PostgreSql-http
          parameters: '{"effect":{"allowedValues":["Audit","Disabled","Deny"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"minimalTlsVersion":{"allowedValues":["TLS1_2","TLS1_0","TLS1_1","TLSEnforcementDisabled"],"defaultValue":"TLS1_2","metadata":{"description":"Select version  minimum TLS version Azure Database for MySQL server to enforce","displayName":"Select version minimum TLS for MySQL server"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.DBforPostgreSQL/servers","field":"type"},{"anyOf":[{"exists":"false","field":"Microsoft.DBforPostgreSQL/servers/sslEnforcement"},{"field":"Microsoft.DBforPostgreSQL/servers/sslEnforcement","notEquals":"Enabled"},{"field":"Microsoft.DBforPostgreSQL/servers/minimalTlsVersion","notequals":"[parameters(''minimalTlsVersion'')]"}]}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-Private-DNS-Zones"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-Private-DNS-Zones
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy denies the creation of a private DNS in the current scope, used in combination with policies that create centralized private DNS in connectivity subscription
          display_name: Deny the creation of private DNS
          management_group_name: myorg-1
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: Indexed
          name: Deny-Private-DNS-Zones
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Network/privateDnsZones","field":"type"},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-Aks"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-Aks
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy denies  the creation of  Azure Kubernetes Service non-private clusters
          display_name: Public network access on AKS API should be disabled
          management_group_name: myorg-1
          metadata: '{"category":"Kubernetes","version":"1.0.0"}'
          mode: Indexed
          name: Deny-PublicEndpoint-Aks
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.ContainerService/managedClusters","field":"type"},{"field":"Microsoft.ContainerService/managedClusters/apiServerAccessProfile.enablePrivateCluster","notequals":"true"}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-CosmosDB"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-CosmosDB
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy denies that  Cosmos database accounts  are created with out public network access is disabled.
          display_name: Public network access should be disabled for CosmosDB
          management_group_name: myorg-1
          metadata: '{"category":"SQL","version":"1.0.0"}'
          mode: Indexed
          name: Deny-PublicEndpoint-CosmosDB
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.DocumentDB/databaseAccounts","field":"type"},{"field":"Microsoft.DocumentDB/databaseAccounts/publicNetworkAccess","notequals":"Disabled"}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-KeyVault"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-KeyVault
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy denies creation of Key Vaults with IP Firewall exposed to all public endpoints
          display_name: Public network access should be disabled for KeyVault
          management_group_name: myorg-1
          metadata: '{"category":"Key Vault","version":"1.0.0"}'
          mode: Indexed
          name: Deny-PublicEndpoint-KeyVault
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.KeyVault/vaults","field":"type"},{"field":"Microsoft.KeyVault/vaults/networkAcls.defaultAction","notequals":"Deny"}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-MariaDB"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-MariaDB
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy denies the creation of Maria DB accounts with exposed public endpoints
          display_name: Public network access should be disabled for MariaDB
          management_group_name: myorg-1
          metadata: '{"category":"SQL","version":"1.0.0"}'
          mode: Indexed
          name: Deny-PublicEndpoint-MariaDB
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.DBforMariaDB/servers","field":"type"},{"field":"Microsoft.DBforMariaDB/servers/publicNetworkAccess","notequals":"Disabled"}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-MySQL"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-MySQL
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy denies creation of MySql DB accounts with exposed public endpoints
          display_name: Public network access should be disabled for MySQL
          management_group_name: myorg-1
          metadata: '{"category":"SQL","version":"1.0.0"}'
          mode: Indexed
          name: Deny-PublicEndpoint-MySQL
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.DBforMySQL/servers","field":"type"},{"field":"Microsoft.DBforMySQL/servers/publicNetworkAccess","notequals":"Disabled"}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-PostgreSql"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-PostgreSql
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy denies creation of Postgre SQL DB accounts with exposed public endpoints
          display_name: Public network access should be disabled for PostgreSql
          management_group_name: myorg-1
          metadata: '{"category":"SQL","version":"1.0.0"}'
          mode: Indexed
          name: Deny-PublicEndpoint-PostgreSql
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.DBforPostgreSQL/servers","field":"type"},{"field":"Microsoft.DBforPostgreSQL/servers/publicNetworkAccess","notequals":"Disabled"}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-Sql"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-Sql
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy denies creation of Sql servers with exposed public endpoints
          display_name: Public network access on Azure SQL Database should be disabled
          management_group_name: myorg-1
          metadata: '{"category":"SQL","version":"1.0.0"}'
          mode: Indexed
          name: Deny-PublicEndpoint-Sql
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Sql/servers","field":"type"},{"field":"Microsoft.Sql/servers/publicNetworkAccess","notequals":"Disabled"}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-Storage"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-Storage
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy denies creation of storage accounts with IP Firewall exposed to all public endpoints
          display_name: Public network access onStorage accounts should be disabled
          management_group_name: myorg-1
          metadata: '{"category":"Storage","version":"1.0.0"}'
          mode: Indexed
          name: Deny-PublicEndpoint-Storage
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Storage/storageAccounts","field":"type"},{"field":"Microsoft.Storage/storageAccounts/networkAcls.defaultAction","notequals":"Deny"}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicIP"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicIP
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy denies creation of Public IPs under the assigned scope.
          display_name: Deny the creation of public IP
          management_group_name: myorg-1
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: Indexed
          name: Deny-PublicIP
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Network/publicIPAddresses","field":"type"},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-RDP-From-Internet"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-RDP-From-Internet
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy denies any network security rule that allows RDP access from Internet
          display_name: RDP access from the Internet should be blocked
          management_group_name: myorg-1
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: All
          name: Deny-RDP-From-Internet
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Network/networkSecurityGroups/securityRules","field":"type"},{"allOf":[{"equals":"Allow","field":"Microsoft.Network/networkSecurityGroups/securityRules/access"},{"equals":"Inbound","field":"Microsoft.Network/networkSecurityGroups/securityRules/direction"},{"anyOf":[{"equals":"*","field":"Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange"},{"equals":"3389","field":"Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange"},{"equals":"true","value":"[if(and(not(empty(field(''Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange''))), contains(field(''Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange''),''-'')), and(lessOrEquals(int(first(split(field(''Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange''), ''-''))),3389),greaterOrEquals(int(last(split(field(''Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange''), ''-''))),3389)), ''false'')]"},{"count":{"field":"Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]","where":{"equals":"true","value":"[if(and(not(empty(first(field(''Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]'')))), contains(first(field(''Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]'')),''-'')), and(lessOrEquals(int(first(split(first(field(''Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]'')), ''-''))),3389),greaterOrEquals(int(last(split(first(field(''Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]'')), ''-''))),3389)) , ''false'')]"}},"greater":0},{"not":{"field":"Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]","notEquals":"*"}},{"not":{"field":"Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]","notEquals":"3389"}}]},{"anyOf":[{"equals":"*","field":"Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix"},{"equals":"Internet","field":"Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix"},{"not":{"field":"Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefixes[*]","notEquals":"*"}},{"not":{"field":"Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefixes[*]","notEquals":"Internet"}}]}]}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-Redis-http"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-Redis-http
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Audit enabling of only connections via SSL to Azure Cache for Redis. Validate both minimum TLS version and enableNonSslPort is disabled. Use of secure connections ensures authentication between the server and the service and protects data in transit from network layer attacks such as man-in-the-middle, eavesdropping, and session-hijacking
          display_name: Azure Cache for Redis only secure connections should be enabled
          management_group_name: myorg-1
          metadata: '{"category":"Cache","version":"1.0.0"}'
          mode: Indexed
          name: Deny-Redis-http
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"The effect determines what happens when the policy rule is evaluated to match","displayName":"Effect"},"type":"String"},"minimumTlsVersion":{"allowedValues":["1.2","1.1","1.0"],"defaultValue":"1.2","metadata":{"description":"Select minimum TLS version for Azure Cache for Redis.","displayName":"Select minumum TLS version for Azure Cache for Redis."},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Cache/redis","field":"type"},{"anyOf":[{"equals":"true","field":"Microsoft.Cache/Redis/enableNonSslPort"},{"field":"Microsoft.Cache/Redis/minimumTlsVersion","notequals":"[parameters(''minimumTlsVersion'')]"}]}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-Sql-minTLS"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-Sql-minTLS
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Setting minimal TLS version to 1.2 improves security by ensuring your Azure SQL Database can only be accessed from clients using TLS 1.2. Using versions of TLS less than 1.2 is not reccomended since they have well documented security vunerabilities.
          display_name: Azure SQL Database should have the minimal TLS version set to the highest version
          management_group_name: myorg-1
          metadata: '{"category":"SQL","version":"1.0.0"}'
          mode: Indexed
          name: Deny-Sql-minTLS
          parameters: '{"effect":{"allowedValues":["Audit","Disabled","Deny"],"defaultValue":"Audit","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"minimalTlsVersion":{"allowedValues":["1.2","1.1","1.0"],"defaultValue":"1.2","metadata":{"description":"Select version minimum TLS version SQL servers to enforce","displayName":"Select version for SQL server"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Sql/servers","field":"type"},{"anyOf":[{"exists":"false","field":"Microsoft.Sql/servers/minimalTlsVersion"},{"field":"Microsoft.Sql/servers/minimalTlsVersion","notequals":"[parameters(''minimalTlsVersion'')]"}]}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-SqlMi-minTLS"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-SqlMi-minTLS
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Setting minimal TLS version to 1.2 improves security by ensuring your SQL Managed Instance can only be accessed from clients using TLS 1.2. Using versions of TLS less than 1.2 is not reccomended since they have well documented security vunerabilities.
          display_name: SQL Managed Instance should have the minimal TLS version set to the highest version
          management_group_name: myorg-1
          metadata: '{"category":"SQL","version":"1.0.0"}'
          mode: Indexed
          name: Deny-SqlMi-minTLS
          parameters: '{"effect":{"allowedValues":["Audit","Disabled","Deny"],"defaultValue":"Audit","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"minimalTlsVersion":{"allowedValues":["1.2","1.1","1.0"],"defaultValue":"1.2","metadata":{"description":"Select version minimum TLS version SQL servers to enforce","displayName":"Select version for SQL server"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Sql/managedInstances","field":"type"},{"anyOf":[{"exists":"false","field":"Microsoft.Sql/managedInstances/minimalTlsVersion"},{"field":"Microsoft.Sql/managedInstances/minimalTlsVersion","notequals":"[parameters(''minimalTlsVersion'')]"}]}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-Storage-minTLS"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-Storage-minTLS
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Audit requirement of Secure transfer in your storage account. Secure transfer is an option that forces your storage account to accept requests only from secure connections (HTTPS). Use of HTTPS ensures authentication between the server and the service and protects data in transit from network layer attacks such as man-in-the-middle, eavesdropping, and session-hijacking
          display_name: Storage Account set to minumum TLS and Secure transfer should be enabled
          management_group_name: myorg-1
          metadata: '{"category":"Storage","version":"1.0.0"}'
          mode: Indexed
          name: Deny-Storage-minTLS
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"The effect determines what happens when the policy rule is evaluated to match","displayName":"Effect"},"type":"String"},"minimumTlsVersion":{"allowedValues":["TLS1_2","TLS1_1","TLS1_0"],"defaultValue":"TLS1_2","metadata":{"description":"Select version  minimum TLS version on Azure Storage Account to enforce","displayName":"Storage Account select minimum TLS version"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Storage/storageAccounts","field":"type"},{"anyOf":[{"allOf":[{"less":"2019-04-01","value":"[requestContext().apiVersion]"},{"exists":"false","field":"Microsoft.Storage/storageAccounts/supportsHttpsTrafficOnly"}]},{"equals":"false","field":"Microsoft.Storage/storageAccounts/supportsHttpsTrafficOnly"},{"field":"Microsoft.Storage/storageAccounts/minimumTlsVersion","notequals":"[parameters(''minimumTlsVersion'')]"},{"exists":"false","field":"Microsoft.Storage/storageAccounts/minimumTlsVersion"}]}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Nsg"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Nsg
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy denies the creation of a subsnet with out an Network Security Group. NSG help to protect traffic across subnet-level.
          display_name: 'Subnets should have a Network Security Group '
          management_group_name: myorg-1
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: All
          name: Deny-Subnet-Without-Nsg
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Network/virtualNetworks/subnets","field":"type"},{"exists":"false","field":"Microsoft.Network/virtualNetworks/subnets/networkSecurityGroup.id"}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Udr"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Udr
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy denies the creation of a subsnet with out a User Defined Route.
          display_name: Subnets should have a User Defined Route
          management_group_name: myorg-1
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: All
          name: Deny-Subnet-Without-Udr
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Network/virtualNetworks/subnets","field":"type"},{"exists":"false","field":"Microsoft.Network/virtualNetworks/subnets/routeTable.id"}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-VNET-Peer-Cross-Sub"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-VNET-Peer-Cross-Sub
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy denies the creation of vNet Peerings outside of the same subscriptions under the assigned scope.
          display_name: Deny vNet peering cross subscription.
          management_group_name: myorg-1
          metadata: '{"category":"Network","version":"1.0.0.0"}'
          mode: Indexed
          name: Deny-VNET-Peer-Cross-Sub
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Network/virtualNetworks/virtualNetworkPeerings","field":"type"},{"field":"Microsoft.Network/virtualNetworks/virtualNetworkPeerings/remoteVirtualNetwork.id","notcontains":"[subscription().id]"}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-VNet-Peering"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-VNet-Peering
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy denies the creation of vNet Peerings under the assigned scope.
          display_name: 'Deny vNet peering '
          management_group_name: myorg-1
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: Indexed
          name: Deny-VNet-Peering
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Network/virtualNetworks/virtualNetworkPeerings","field":"type"},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-ACR"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-ACR
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy the Azure Defender settings for Azure Container Registry
          display_name: Deploy Azure Defender for ACR
          management_group_name: myorg-1
          metadata: '{"category":"Security Center","version":"1.0.0"}'
          mode: All
          name: Deploy-ASC-Defender-ACR
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"string"},"pricingTier":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier","displayName":"Azure Defender pricing tier"},"type":"string"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"incremental","parameters":{"pricingTier":{"value":"[parameters(''pricingTier'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"pricingTier":{"metadata":{"description":"Azure Defender pricing tier"},"type":"string"}},"resources":[{"apiVersion":"2018-06-01","name":"ContainerRegistry","properties":{"pricingTier":"[parameters(''pricingTier'')]"},"type":"Microsoft.Security/pricings"}],"variables":{}}}},"deploymentScope":"Subscription","existenceCondition":{"allOf":[{"equals":"[parameters(''pricingTier'')]","field":"Microsoft.Security/pricings/pricingTier"},{"equals":"Microsoft.Security/pricings","field":"type"}]},"existenceScope":"Subscription","name":"ContainerRegistry","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"],"type":"Microsoft.Security/pricings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-AKS"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-AKS
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy the Azure Defender settings for AKS
          display_name: Deploy Azure Defender for AKS
          management_group_name: myorg-1
          metadata: '{"category":"Security Center","version":"1.0.0"}'
          mode: All
          name: Deploy-ASC-Defender-AKS
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"string"},"pricingTier":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier","displayName":"Azure Defender pricing tier"},"type":"string"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"incremental","parameters":{"pricingTier":{"value":"[parameters(''pricingTier'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"pricingTier":{"metadata":{"description":"Azure Defender pricing tier"},"type":"string"}},"resources":[{"apiVersion":"2018-06-01","name":"KubernetesService","properties":{"pricingTier":"[parameters(''pricingTier'')]"},"type":"Microsoft.Security/pricings"}],"variables":{}}}},"deploymentScope":"Subscription","existenceCondition":{"allOf":[{"equals":"[parameters(''pricingTier'')]","field":"Microsoft.Security/pricings/pricingTier"},{"equals":"Microsoft.Security/pricings","field":"type"}]},"existenceScope":"Subscription","name":"KubernetesService","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"],"type":"Microsoft.Security/pricings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-AKV"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-AKV
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy the Azure Defender settings for Azure Key Vault
          display_name: Deploy Azure Defender for AKV
          management_group_name: myorg-1
          metadata: '{"category":"Security Center","version":"1.0.0"}'
          mode: All
          name: Deploy-ASC-Defender-AKV
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"string"},"pricingTier":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier","displayName":"Azure Defender pricing tier"},"type":"string"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"incremental","parameters":{"pricingTier":{"value":"[parameters(''pricingTier'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"pricingTier":{"metadata":{"description":"Azure Defender pricing tier"},"type":"string"}},"resources":[{"apiVersion":"2018-06-01","name":"KeyVaults","properties":{"pricingTier":"[parameters(''pricingTier'')]"},"type":"Microsoft.Security/pricings"}],"variables":{}}}},"deploymentScope":"Subscription","existenceCondition":{"allOf":[{"equals":"[parameters(''pricingTier'')]","field":"Microsoft.Security/pricings/pricingTier"},{"equals":"Microsoft.Security/pricings","field":"type"}]},"existenceScope":"Subscription","name":"KeyVaults","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"],"type":"Microsoft.Security/pricings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-ARM"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-ARM
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy the Azure Defender settings for Azure Resource Manager
          display_name: Deploy Azure Defender for ARM
          management_group_name: myorg-1
          metadata: '{"category":"Security Center","version":"1.0.0"}'
          mode: All
          name: Deploy-ASC-Defender-ARM
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"string"},"pricingTier":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier","displayName":"Azure Defender pricing tier"},"type":"string"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"incremental","parameters":{"pricingTier":{"value":"[parameters(''pricingTier'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"pricingTier":{"metadata":{"description":"Azure Defender pricing tier"},"type":"string"}},"resources":[{"apiVersion":"2018-06-01","name":"Arm","properties":{"pricingTier":"[parameters(''pricingTier'')]"},"type":"Microsoft.Security/pricings"}],"variables":{}}}},"deploymentScope":"Subscription","existenceCondition":{"allOf":[{"equals":"[parameters(''pricingTier'')]","field":"Microsoft.Security/pricings/pricingTier"},{"equals":"Microsoft.Security/pricings","field":"type"}]},"existenceScope":"Subscription","name":"Arm","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"],"type":"Microsoft.Security/pricings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-AppSrv"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-AppSrv
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy the Azure Defender settings in Azure Security Center for Azure App Services
          display_name: Deploy Azure Defender for Azure App Services
          management_group_name: myorg-1
          metadata: '{"category":"Security Center","version":"1.0.0"}'
          mode: All
          name: Deploy-ASC-Defender-AppSrv
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"string"},"pricingTier":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier","displayName":"Azure Defender pricing tier"},"type":"string"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"incremental","parameters":{"pricingTier":{"value":"[parameters(''pricingTier'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"pricingTier":{"metadata":{"description":"Azure Defender pricing tier"},"type":"string"}},"resources":[{"apiVersion":"2018-06-01","name":"AppServices","properties":{"pricingTier":"[parameters(''pricingTier'')]"},"type":"Microsoft.Security/pricings"}],"variables":{}}}},"deploymentScope":"Subscription","existenceCondition":{"allOf":[{"equals":"[parameters(''pricingTier'')]","field":"Microsoft.Security/pricings/pricingTier"},{"equals":"Microsoft.Security/pricings","field":"type"}]},"existenceScope":"Subscription","name":"AppServices","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"],"type":"Microsoft.Security/pricings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-DNS"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-DNS
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy the Azure Defender settings for DNS
          display_name: Deploy Azure Defender for DNS
          management_group_name: myorg-1
          metadata: '{"category":"Security Center","version":"1.0.0"}'
          mode: All
          name: Deploy-ASC-Defender-DNS
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"string"},"pricingTier":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier","displayName":"Azure Defender pricing tier"},"type":"string"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"incremental","parameters":{"pricingTier":{"value":"[parameters(''pricingTier'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"pricingTier":{"metadata":{"description":"Azure Defender pricing tier"},"type":"string"}},"resources":[{"apiVersion":"2018-06-01","name":"Dns","properties":{"pricingTier":"[parameters(''pricingTier'')]"},"type":"Microsoft.Security/pricings"}],"variables":{}}}},"deploymentScope":"Subscription","existenceCondition":{"allOf":[{"equals":"[parameters(''pricingTier'')]","field":"Microsoft.Security/pricings/pricingTier"},{"equals":"Microsoft.Security/pricings","field":"type"}]},"existenceScope":"Subscription","name":"Dns","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"],"type":"Microsoft.Security/pricings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-SA"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-SA
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy the Azure Defender settings in Azure Security Center for Storage Accounts
          display_name: Deploy Azure Defender for Storage Accounts
          management_group_name: myorg-1
          metadata: '{"category":"Security Center","version":"1.0.0"}'
          mode: All
          name: Deploy-ASC-Defender-SA
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"string"},"pricingTier":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier","displayName":"Azure Defender pricing tier"},"type":"string"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"incremental","parameters":{"pricingTier":{"value":"[parameters(''pricingTier'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"pricingTier":{"metadata":{"description":"Azure Defender pricing tier"},"type":"string"}},"resources":[{"apiVersion":"2018-06-01","name":"StorageAccounts","properties":{"pricingTier":"[parameters(''pricingTier'')]"},"type":"Microsoft.Security/pricings"}],"variables":{}}}},"deploymentScope":"Subscription","existenceCondition":{"allOf":[{"equals":"[parameters(''pricingTier'')]","field":"Microsoft.Security/pricings/pricingTier"},{"equals":"Microsoft.Security/pricings","field":"type"}]},"existenceScope":"Subscription","name":"StorageAccounts","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"],"type":"Microsoft.Security/pricings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-SQLVM"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-SQLVM
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy the Azure Defender settings in Sql Server on Virtual Machines
          display_name: Deploy Azure Defender for Sql on Virtual Machines
          management_group_name: myorg-1
          metadata: '{"category":"Security Center","version":"1.0.0"}'
          mode: All
          name: Deploy-ASC-Defender-SQLVM
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"string"},"pricingTier":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier","displayName":"Azure Defender pricing tier"},"type":"string"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"incremental","parameters":{"pricingTier":{"value":"[parameters(''pricingTier'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"pricingTier":{"metadata":{"description":"Azure Defender pricing tier"},"type":"string"}},"resources":[{"apiVersion":"2018-06-01","name":"SqlServerVirtualMachines","properties":{"pricingTier":"[parameters(''pricingTier'')]"},"type":"Microsoft.Security/pricings"}],"variables":{}}}},"deploymentScope":"Subscription","existenceCondition":{"allOf":[{"equals":"[parameters(''pricingTier'')]","field":"Microsoft.Security/pricings/pricingTier"},{"equals":"Microsoft.Security/pricings","field":"type"}]},"existenceScope":"Subscription","name":"SqlServerVirtualMachines","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"],"type":"Microsoft.Security/pricings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-Sql"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-Sql
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy the Azure Defender settings in Azure Security Center for Azure Sql Databases
          display_name: Deploy Azure Defender for Azure Sql Databases
          management_group_name: myorg-1
          metadata: '{"category":"Security Center","version":"1.0.0"}'
          mode: All
          name: Deploy-ASC-Defender-Sql
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"string"},"pricingTier":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier","displayName":"Azure Defender pricing tier"},"type":"string"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"incremental","parameters":{"pricingTier":{"value":"[parameters(''pricingTier'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"pricingTier":{"metadata":{"description":"Azure Defender pricing tier"},"type":"string"}},"resources":[{"apiVersion":"2018-06-01","name":"SqlServers","properties":{"pricingTier":"[parameters(''pricingTier'')]"},"type":"Microsoft.Security/pricings"}],"variables":{}}}},"deploymentScope":"Subscription","existenceCondition":{"allOf":[{"equals":"[parameters(''pricingTier'')]","field":"Microsoft.Security/pricings/pricingTier"},{"equals":"Microsoft.Security/pricings","field":"type"}]},"existenceScope":"Subscription","name":"SqlServers","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"],"type":"Microsoft.Security/pricings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-VMs"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-VMs
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy the Azure Defender settings in Azure Security Center for Virtual Machines
          display_name: Deploy Azure Defender for Virtual Machines
          management_group_name: myorg-1
          metadata: '{"category":"Security Center","version":"1.0.0"}'
          mode: All
          name: Deploy-ASC-Defender-VMs
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"string"},"pricingTier":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier","displayName":"Azure Defender pricing tier"},"type":"string"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"incremental","parameters":{"pricingTier":{"value":"[parameters(''pricingTier'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"pricingTier":{"metadata":{"description":"Azure Defender pricing tier"},"type":"string"}},"resources":[{"apiVersion":"2018-06-01","name":"VirtualMachines","properties":{"pricingTier":"[parameters(''pricingTier'')]"},"type":"Microsoft.Security/pricings"}],"variables":{}}}},"deploymentScope":"Subscription","existenceCondition":{"allOf":[{"equals":"[parameters(''pricingTier'')]","field":"Microsoft.Security/pricings/pricingTier"},{"equals":"Microsoft.Security/pricings","field":"type"}]},"existenceScope":"Subscription","name":"VirtualMachines","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"],"type":"Microsoft.Security/pricings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-SecurityContacts"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-SecurityContacts
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy Azure Security Center Security Contacts
          display_name: Deploy Azure Security Center Security Contacts
          management_group_name: myorg-1
          metadata: '{"category":"Security Center","version":"1.0.0"}'
          mode: All
          name: Deploy-ASC-SecurityContacts
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"string"},"emailSecurityContact":{"metadata":{"description":"Provide email address for Azure Security Center contact details","displayName":"Security contacts email address"},"type":"string"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"incremental","parameters":{"emailSecurityContact":{"value":"[parameters(''emailSecurityContact'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"emailSecurityContact":{"metadata":{"description":"Security contacts email address"},"type":"string"}},"resources":[{"apiVersion":"2020-01-01-preview","name":"default","properties":{"alertNotifications":{"minimalSeverity":"High","state":"On"},"emails":"[parameters(''emailSecurityContact'')]","notificationsByRole":{"roles":["Owner"],"state":"On"}},"type":"Microsoft.Security/securityContacts"}],"variables":{}}}},"deploymentScope":"Subscription","existenceCondition":{"allOf":[{"contains":"[parameters(''emailSecurityContact'')]","field":"Microsoft.Security/securityContacts/email"},{"equals":"Microsoft.Security/securityContacts","field":"type"},{"equals":"On","field":"Microsoft.Security/securityContacts/alertNotifications"},{"equals":"On","field":"Microsoft.Security/securityContacts/alertsToAdmins"}]},"existenceScope":"Subscription","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"],"type":"Microsoft.Security/securityContacts"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Budget"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Budget
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy a default budget on all subscriptions under the assigned scope
          display_name: Deploy a default budget on all subscriptions under the assigned scope
          management_group_name: myorg-1
          metadata: '{"category":"Budget","version":"1.0.0"}'
          mode: All
          name: Deploy-Budget
          parameters: '{"amount":{"defaultValue":"1000","metadata":{"description":"The total amount of cost or usage to track with the budget"},"type":"String"},"contactEmails":{"defaultValue":[],"metadata":{"description":"The list of email addresses, in an array, to send the budget notification to when the threshold is exceeded."},"type":"Array"},"contactGroups":{"defaultValue":[],"metadata":{"description":"The list of action groups, in an array, to send the budget notification to when the threshold is exceeded. It accepts array of strings."},"type":"Array"},"contactRoles":{"defaultValue":["Owner","Contributor"],"metadata":{"description":"The list of contact RBAC roles, in an array, to send the budget notification to when the threshold is exceeded."},"type":"Array"},"firstThreshold":{"defaultValue":"90","metadata":{"description":"Threshold value associated with a notification. Notification is sent when the cost exceeded the threshold. It is always percent and has to be between 0 and 1000."},"type":"String"},"secondThreshold":{"defaultValue":"100","metadata":{"description":"Threshold value associated with a notification. Notification is sent when the cost exceeded the threshold. It is always percent and has to be between 0 and 1000."},"type":"String"},"timeGrain":{"allowedValues":["Monthly","Quarterly","Annually","BillingMonth","BillingQuarter","BillingAnnual"],"defaultValue":"Monthly","metadata":{"description":"The time covered by a budget. Tracking of the amount will be reset based on the time grain."},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"Incremental","parameters":{"amount":{"value":"[parameters(''amount'')]"},"contactEmails":{"value":"[parameters(''contactEmails'')]"},"contactGroups":{"value":"[parameters(''contactGroups'')]"},"contactRoles":{"value":"[parameters(''contactRoles'')]"},"firstThreshold":{"value":"[parameters(''firstThreshold'')]"},"secondThreshold":{"value":"[parameters(''secondThreshold'')]"},"timeGrain":{"value":"[parameters(''timeGrain'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json","contentVersion":"1.0.0.0","parameters":{"amount":{"type":"String"},"contactEmails":{"type":"Array"},"contactGroups":{"type":"Array"},"contactRoles":{"type":"Array"},"firstThreshold":{"type":"String"},"secondThreshold":{"type":"String"},"startDate":{"defaultValue":"[concat(utcNow(''MM''), ''/01/'', utcNow(''yyyy''))]","type":"String"},"timeGrain":{"type":"String"}},"resources":[{"apiVersion":"2019-10-01","name":"default-sandbox-budget","properties":{"amount":"[parameters(''amount'')]","category":"Cost","notifications":{"NotificationForExceededBudget1":{"contactEmails":"[parameters(''contactEmails'')]","contactGroups":"[parameters(''contactGroups'')]","contactRoles":"[parameters(''contactRoles'')]","enabled":true,"operator":"GreaterThan","threshold":"[parameters(''firstThreshold'')]"},"NotificationForExceededBudget2":{"contactEmails":"[parameters(''contactEmails'')]","contactGroups":"[parameters(''contactGroups'')]","contactRoles":"[parameters(''contactRoles'')]","enabled":true,"operator":"GreaterThan","threshold":"[parameters(''secondThreshold'')]"}},"timeGrain":"[parameters(''timeGrain'')]","timePeriod":{"startDate":"[parameters(''startDate'')]"}},"type":"Microsoft.Consumption/budgets"}]}}},"deploymentScope":"Subscription","existenceCondition":{"allOf":[{"equals":"[parameters(''amount'')]","field":"Microsoft.Consumption/budgets/amount"},{"equals":"[parameters(''timeGrain'')]","field":"Microsoft.Consumption/budgets/timeGrain"},{"equals":"Cost","field":"Microsoft.Consumption/budgets/category"}]},"existenceScope":"Subscription","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"],"type":"Microsoft.Consumption/budgets"},"effect":"DeployIfNotExists"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-DDoSProtection"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-DDoSProtection
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys an Azure DDoS Protection Standard plan
          display_name: Deploy an Azure DDoS Protection Standard plan
          management_group_name: myorg-1
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: All
          name: Deploy-DDoSProtection
          parameters: '{"ddosName":{"metadata":{"description":"DDoSVnet","displayName":"ddosName"},"type":"String"},"ddosRegion":{"metadata":{"description":"DDoSVnet location","displayName":"ddosRegion","strongType":"location"},"type":"String"},"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"rgName":{"metadata":{"description":"Provide name for resource group.","displayName":"rgName"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"Incremental","parameters":{"ddosname":{"value":"[parameters(''ddosname'')]"},"ddosregion":{"value":"[parameters(''ddosRegion'')]"},"rgName":{"value":"[parameters(''rgName'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json","contentVersion":"1.0.0.0","outputs":{},"parameters":{"ddosRegion":{"type":"String"},"ddosname":{"type":"String"},"rgName":{"type":"String"}},"resources":[{"apiVersion":"2018-05-01","location":"[deployment().location]","name":"[parameters(''rgName'')]","properties":{},"type":"Microsoft.Resources/resourceGroups"},{"apiVersion":"2018-05-01","dependsOn":["[resourceId(''Microsoft.Resources/resourceGroups/'', parameters(''rgName''))]"],"name":"ddosprotection","properties":{"mode":"Incremental","template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json","contentVersion":"1.0.0.0","outputs":{},"parameters":{},"resources":[{"apiVersion":"2019-12-01","location":"[parameters(''ddosRegion'')]","name":"[parameters(''ddosName'')]","properties":{},"type":"Microsoft.Network/ddosProtectionPlans"}]}},"resourceGroup":"[parameters(''rgName'')]","type":"Microsoft.Resources/deployments"}]}}},"deploymentScope":"Subscription","existenceScope":"ResourceGroup","name":"[parameters(''ddosName'')]","resourceGroupName":"[parameters(''rgName'')]","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"],"type":"Microsoft.Network/ddosProtectionPlans"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-Blob-PrivateEndpoint"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-Blob-PrivateEndpoint
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: 'Deploys the configurations of a Private DNS Zone Group by a parameter for Storage-Blob Private Endpoint. Used enforce the configuration to a single Private DNS Zone. '
          display_name: Deploy DNS Zone Group for Storage-Blob Private Endpoint
          management_group_name: myorg-1
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-DNSZoneGroup-For-Blob-PrivateEndpoint
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"privateDnsZoneId":{"metadata":{"displayName":"privateDnsZoneId","strongType":"Microsoft.Network/privateDnsZones"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Network/privateEndpoints","field":"type"},{"count":{"field":"Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]","where":{"equals":"blob","field":"Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]"}},"greaterOrEquals":1}]},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"privateDnsZoneId":{"value":"[parameters(''privateDnsZoneId'')]"},"privateEndpointName":{"value":"[field(''name'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","parameters":{"location":{"type":"String"},"privateDnsZoneId":{"type":"String"},"privateEndpointName":{"type":"String"}},"resources":[{"apiVersion":"2020-03-01","location":"[parameters(''location'')]","name":"[concat(parameters(''privateEndpointName''), ''/deployedByPolicy'')]","properties":{"privateDnsZoneConfigs":[{"name":"storageBlob-privateDnsZone","properties":{"privateDnsZoneId":"[parameters(''privateDnsZoneId'')]"}}]},"type":"Microsoft.Network/privateEndpoints/privateDnsZoneGroups"}]}}},"roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"],"type":"Microsoft.Network/privateEndpoints/privateDnsZoneGroups"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-File-PrivateEndpoint"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-File-PrivateEndpoint
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: 'Deploys the configurations of a Private DNS Zone Group by a parameter for Storage-File Private Endpoint. Used enforce the configuration to a single Private DNS Zone. '
          display_name: Deploy DNS  Zone Group for Storage-File Private Endpoint
          management_group_name: myorg-1
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-DNSZoneGroup-For-File-PrivateEndpoint
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"privateDnsZoneId":{"metadata":{"displayName":"privateDnsZoneId","strongType":"Microsoft.Network/privateDnsZones"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Network/privateEndpoints","field":"type"},{"count":{"field":"Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]","where":{"equals":"file","field":"Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]"}},"greaterOrEquals":1}]},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"privateDnsZoneId":{"value":"[parameters(''privateDnsZoneId'')]"},"privateEndpointName":{"value":"[field(''name'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","parameters":{"location":{"type":"String"},"privateDnsZoneId":{"type":"String"},"privateEndpointName":{"type":"String"}},"resources":[{"apiVersion":"2020-03-01","location":"[parameters(''location'')]","name":"[concat(parameters(''privateEndpointName''), ''/deployedByPolicy'')]","properties":{"privateDnsZoneConfigs":[{"name":"storageFile-privateDnsZone","properties":{"privateDnsZoneId":"[parameters(''privateDnsZoneId'')]"}}]},"type":"Microsoft.Network/privateEndpoints/privateDnsZoneGroups"}]}}},"roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"],"type":"Microsoft.Network/privateEndpoints/privateDnsZoneGroups"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-KeyVault-PrivateEndpoint"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-KeyVault-PrivateEndpoint
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: 'Deploys the configurations of a Private DNS Zone Group by a parameter for Key Vault Private Endpoint. Used enforce the configuration to a single Private DNS Zone. '
          display_name: Deploy DNS  Zone Group for Key Vault Private Endpoint
          management_group_name: myorg-1
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-DNSZoneGroup-For-KeyVault-PrivateEndpoint
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"privateDnsZoneId":{"metadata":{"displayName":"privateDnsZoneId","strongType":"Microsoft.Network/privateDnsZones"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Network/privateEndpoints","field":"type"},{"count":{"field":"Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]","where":{"equals":"vault","field":"Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]"}},"greaterOrEquals":1}]},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"privateDnsZoneId":{"value":"[parameters(''privateDnsZoneId'')]"},"privateEndpointName":{"value":"[field(''name'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","parameters":{"location":{"type":"String"},"privateDnsZoneId":{"type":"String"},"privateEndpointName":{"type":"String"}},"resources":[{"apiVersion":"2020-03-01","location":"[parameters(''location'')]","name":"[concat(parameters(''privateEndpointName''), ''/deployedByPolicy'')]","properties":{"privateDnsZoneConfigs":[{"name":"keyVault-privateDnsZone","properties":{"privateDnsZoneId":"[parameters(''privateDnsZoneId'')]"}}]},"type":"Microsoft.Network/privateEndpoints/privateDnsZoneGroups"}]}}},"roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"],"type":"Microsoft.Network/privateEndpoints/privateDnsZoneGroups"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-Queue-PrivateEndpoint"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-Queue-PrivateEndpoint
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: 'Deploys the configurations of a Private DNS Zone Group by a parameter for Storage-Queue Private Endpoint. Used enforce the configuration to a single Private DNS Zone. '
          display_name: Deploy DNS  Zone Group for Storage-Queue Private Endpoint
          management_group_name: myorg-1
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-DNSZoneGroup-For-Queue-PrivateEndpoint
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"privateDnsZoneId":{"metadata":{"displayName":"privateDnsZoneId","strongType":"Microsoft.Network/privateDnsZones"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Network/privateEndpoints","field":"type"},{"count":{"field":"Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]","where":{"equals":"queue","field":"Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]"}},"greaterOrEquals":1}]},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"privateDnsZoneId":{"value":"[parameters(''privateDnsZoneId'')]"},"privateEndpointName":{"value":"[field(''name'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","parameters":{"location":{"type":"String"},"privateDnsZoneId":{"type":"String"},"privateEndpointName":{"type":"String"}},"resources":[{"apiVersion":"2020-03-01","location":"[parameters(''location'')]","name":"[concat(parameters(''privateEndpointName''), ''/deployedByPolicy'')]","properties":{"privateDnsZoneConfigs":[{"name":"storageQueue-privateDnsZone","properties":{"privateDnsZoneId":"[parameters(''privateDnsZoneId'')]"}}]},"type":"Microsoft.Network/privateEndpoints/privateDnsZoneGroups"}]}}},"roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"],"type":"Microsoft.Network/privateEndpoints/privateDnsZoneGroups"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-Sql-PrivateEndpoint"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-Sql-PrivateEndpoint
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: 'Deploys the configurations of a Private DNS Zone Group by a parameter for SQL Private Private Endpoint. Used enforce the configuration to a single Private DNS Zone. '
          display_name: Deploy DNS  Zone Group for SQL Private Endpoint
          management_group_name: myorg-1
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-DNSZoneGroup-For-Sql-PrivateEndpoint
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"privateDnsZoneId":{"metadata":{"displayName":"privateDnsZoneId","strongType":"Microsoft.Network/privateDnsZones"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Network/privateEndpoints","field":"type"},{"count":{"field":"Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]","where":{"equals":"sqlServer","field":"Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]"}},"greaterOrEquals":1}]},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"privateDnsZoneId":{"value":"[parameters(''privateDnsZoneId'')]"},"privateEndpointName":{"value":"[field(''name'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","parameters":{"location":{"type":"String"},"privateDnsZoneId":{"type":"String"},"privateEndpointName":{"type":"String"}},"resources":[{"apiVersion":"2020-03-01","location":"[parameters(''location'')]","name":"[concat(parameters(''privateEndpointName''), ''/deployedByPolicy'')]","properties":{"privateDnsZoneConfigs":[{"name":"sqlServer-privateDnsZone","properties":{"privateDnsZoneId":"[parameters(''privateDnsZoneId'')]"}}]},"type":"Microsoft.Network/privateEndpoints/privateDnsZoneGroups"}]}}},"roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"],"type":"Microsoft.Network/privateEndpoints/privateDnsZoneGroups"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-Table-PrivateEndpoint"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-Table-PrivateEndpoint
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: 'Deploys the configurations of a Private DNS Zone Group by a parameter for Storage-Table Private Endpoint. Used enforce the configuration to a single Private DNS Zone. '
          display_name: Deploy DNS  Zone Group for Storage-Table Private Endpoint
          management_group_name: myorg-1
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-DNSZoneGroup-For-Table-PrivateEndpoint
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"privateDnsZoneId":{"metadata":{"displayName":"privateDnsZoneId","strongType":"Microsoft.Network/privateDnsZones"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Network/privateEndpoints","field":"type"},{"count":{"field":"Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]","where":{"equals":"table","field":"Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]"}},"greaterOrEquals":1}]},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"privateDnsZoneId":{"value":"[parameters(''privateDnsZoneId'')]"},"privateEndpointName":{"value":"[field(''name'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","parameters":{"location":{"type":"String"},"privateDnsZoneId":{"type":"String"},"privateEndpointName":{"type":"String"}},"resources":[{"apiVersion":"2020-03-01","location":"[parameters(''location'')]","name":"[concat(parameters(''privateEndpointName''), ''/deployedByPolicy'')]","properties":{"privateDnsZoneConfigs":[{"name":"storageTable-privateDnsZone","properties":{"privateDnsZoneId":"[parameters(''privateDnsZoneId'')]"}}]},"type":"Microsoft.Network/privateEndpoints/privateDnsZoneGroups"}]}}},"roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"],"type":"Microsoft.Network/privateEndpoints/privateDnsZoneGroups"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AA"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AA
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Automation to stream to a Log Analytics workspace when any Automation which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Automation to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-AA
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Automation/automationAccounts","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"JobLogs","enabled":"[parameters(''logsEnabled'')]"},{"category":"JobStreams","enabled":"[parameters(''logsEnabled'')]"},{"category":"DscNodeStatus","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Automation/automationAccounts/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACI"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACI
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Container Instances to stream to a Log Analytics workspace when any ACR which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics enabled.
          display_name: Deploy Diagnostic Settings for Container Instances to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-ACI
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.ContainerInstance/containerGroups","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.ContainerInstance/containerGroups/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACR"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACR
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Container Registry to stream to a Log Analytics workspace when any ACR which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics  enabled.
          display_name: Deploy Diagnostic Settings for Container Registry to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-ACR
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.ContainerRegistry/registries","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"ContainerRegistryLoginEvents","enabled":"[parameters(''logsEnabled'')]"},{"category":"ContainerRegistryRepositoryEvents","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.ContainerRegistry/registries/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AKS"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AKS
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Kubernetes Service to stream to a Log Analytics workspace when any Kubernetes Service which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled.
          display_name: Deploy Diagnostic Settings for Kubernetes Service to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-AKS
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.ContainerService/managedClusters","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"kube-audit","enabled":"[parameters(''logsEnabled'')]"},{"category":"kube-apiserver","enabled":"[parameters(''logsEnabled'')]"},{"category":"kube-controller-manager","enabled":"[parameters(''logsEnabled'')]"},{"category":"kube-scheduler","enabled":"[parameters(''logsEnabled'')]"},{"category":"cluster-autoscaler","enabled":"[parameters(''logsEnabled'')]"},{"category":"guard","enabled":"[parameters(''logsEnabled'')]"},{"category":"kube-audit-admin","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.ContainerService/managedClusters/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-APIMgmt"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-APIMgmt
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for API Management to stream to a Log Analytics workspace when any API Management which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for API Management to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-APIMgmt
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.ApiManagement/service","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"GatewayLogs","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.ApiManagement/service/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ActivityLog"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ActivityLog
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Activity Log to stream to a Log Analytics workspace when any Activity Log which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with category enabled.
          display_name: Deploy Diagnostic Settings for Activity Log to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: All
          name: Deploy-Diagnostics-ActivityLog
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Primary Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"Incremental","parameters":{"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","location":"Global","name":"subscriptionToLa","properties":{"logs":[{"category":"Administrative","enabled":"[parameters(''logsEnabled'')]"},{"category":"Security","enabled":"[parameters(''logsEnabled'')]"},{"category":"ServiceHealth","enabled":"[parameters(''logsEnabled'')]"},{"category":"Alert","enabled":"[parameters(''logsEnabled'')]"},{"category":"Recommendation","enabled":"[parameters(''logsEnabled'')]"},{"category":"Policy","enabled":"[parameters(''logsEnabled'')]"},{"category":"Autoscale","enabled":"[parameters(''logsEnabled'')]"},{"category":"ResourceHealth","enabled":"[parameters(''logsEnabled'')]"}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Insights/diagnosticSettings"}],"variables":{}}}},"deploymentScope":"Subscription","existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"existenceScope":"Subscription","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AnalysisService"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AnalysisService
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Analysis Services to stream to a Log Analytics workspace when any Analysis Services which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Analysis Services to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-AnalysisService
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.AnalysisServices/servers","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"Engine","enabled":"[parameters(''logsEnabled'')]"},{"category":"Service","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.AnalysisServices/servers/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApiForFHIR"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApiForFHIR
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Azure API for FHIR to stream to a Log Analytics workspace when any Azure API for FHIR which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Azure API for FHIR to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-ApiForFHIR
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.HealthcareApis/services","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"AuditLogs","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.HealthcareApis/services/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApplicationGateway"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApplicationGateway
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Application Gateway to stream to a Log Analytics workspace when any Application Gateway which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Application Gateway to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-ApplicationGateway
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Network/applicationGateways","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"ApplicationGatewayAccessLog","enabled":"[parameters(''logsEnabled'')]"},{"category":"ApplicationGatewayPerformanceLog","enabled":"[parameters(''logsEnabled'')]"},{"category":"ApplicationGatewayFirewallLog","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Network/applicationGateways/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Batch"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Batch
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Batch to stream to a Log Analytics workspace when any Batch which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Batch to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-Batch
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Batch/batchAccounts","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"ServiceLog","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Batch/batchAccounts/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CDNEndpoints"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CDNEndpoints
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for CDN Endpoint to stream to a Log Analytics workspace when any CDN Endpoint which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for CDN Endpoint to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-CDNEndpoints
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Cdn/profiles/endpoints","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''fullName'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"CoreAnalytics","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Cdn/profiles/endpoints/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CognitiveServices"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CognitiveServices
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Cognitive Services to stream to a Log Analytics workspace when any Cognitive Services which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Cognitive Services to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-CognitiveServices
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.CognitiveServices/accounts","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"Audit","enabled":"[parameters(''logsEnabled'')]"},{"category":"RequestResponse","enabled":"[parameters(''logsEnabled'')]"},{"category":"Trace","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.CognitiveServices/accounts/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CosmosDB"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CosmosDB
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Cosmos DB to stream to a Log Analytics workspace when any Cosmos DB which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Cosmos DB to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-CosmosDB
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.DocumentDB/databaseAccounts","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"DataPlaneRequests","enabled":"[parameters(''logsEnabled'')]"},{"category":"MongoRequests","enabled":"[parameters(''logsEnabled'')]"},{"category":"QueryRuntimeStatistics","enabled":"[parameters(''logsEnabled'')]"},{"category":"PartitionKeyStatistics","enabled":"[parameters(''logsEnabled'')]"},{"category":"PartitionKeyRUConsumption","enabled":"[parameters(''logsEnabled'')]"},{"category":"ControlPlaneRequests","enabled":"[parameters(''logsEnabled'')]"},{"category":"CassandraRequests","enabled":"[parameters(''logsEnabled'')]"},{"category":"GremlinRequests","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"Requests","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.DocumentDB/databaseAccounts/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DLAnalytics"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DLAnalytics
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Data Lake Analytics to stream to a Log Analytics workspace when any Data Lake Analytics which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Data Lake Analytics to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-DLAnalytics
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.DataLakeAnalytics/accounts","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"Audit","enabled":"[parameters(''logsEnabled'')]"},{"category":"Requests","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.DataLakeAnalytics/accounts/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataExplorerCluster"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataExplorerCluster
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Azure Data Explorer Cluster to stream to a Log Analytics workspace when any Azure Data Explorer Cluster which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Azure Data Explorer Cluster to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-DataExplorerCluster
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Kusto/Clusters","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"SucceededIngestion","enabled":"[parameters(''logsEnabled'')]"},{"category":"FailedIngestion","enabled":"[parameters(''logsEnabled'')]"},{"category":"IngestionBatching","enabled":"[parameters(''logsEnabled'')]"},{"category":"Command","enabled":"[parameters(''logsEnabled'')]"},{"category":"Query","enabled":"[parameters(''logsEnabled'')]"},{"category":"TableUsageStatistics","enabled":"[parameters(''logsEnabled'')]"},{"category":"TableDetails","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Kusto/Clusters/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataFactory"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataFactory
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Data Factory to stream to a Log Analytics workspace when any Data Factory which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Data Factory to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-DataFactory
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.DataFactory/factories","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"ActivityRuns","enabled":"[parameters(''logsEnabled'')]"},{"category":"PipelineRuns","enabled":"[parameters(''logsEnabled'')]"},{"category":"TriggerRuns","enabled":"[parameters(''logsEnabled'')]"},{"category":"SSISPackageEventMessages","enabled":"[parameters(''logsEnabled'')]"},{"category":"SSISPackageExecutableStatistics","enabled":"[parameters(''logsEnabled'')]"},{"category":"SSISPackageEventMessageContext","enabled":"[parameters(''logsEnabled'')]"},{"category":"SSISPackageExecutionComponentPhases","enabled":"[parameters(''logsEnabled'')]"},{"category":"SSISPackageExecutionDataStatistics","enabled":"[parameters(''logsEnabled'')]"},{"category":"SSISIntegrationRuntimeLogs","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.DataFactory/factories/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataLakeStore"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataLakeStore
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Azure Data Lake Store to stream to a Log Analytics workspace when anyAzure Data Lake Store which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Azure Data Lake Store to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-DataLakeStore
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.DataLakeStore/accounts","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"Audit","enabled":"[parameters(''logsEnabled'')]"},{"category":"Requests","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.DataLakeStore/accounts/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Databricks"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Databricks
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Databricks to stream to a Log Analytics workspace when any Databricks which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Databricks to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-Databricks
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Databricks/workspaces","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"dbfs","enabled":"[parameters(''logsEnabled'')]"},{"category":"clusters","enabled":"[parameters(''logsEnabled'')]"},{"category":"accounts","enabled":"[parameters(''logsEnabled'')]"},{"category":"jobs","enabled":"[parameters(''logsEnabled'')]"},{"category":"notebook","enabled":"[parameters(''logsEnabled'')]"},{"category":"ssh","enabled":"[parameters(''logsEnabled'')]"},{"category":"workspace","enabled":"[parameters(''logsEnabled'')]"},{"category":"secrets","enabled":"[parameters(''logsEnabled'')]"},{"category":"sqlPermissions","enabled":"[parameters(''logsEnabled'')]"},{"category":"instancePools","enabled":"[parameters(''logsEnabled'')]"}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Databricks/workspaces/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSub"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSub
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Event Grid subscriptions to stream to a Log Analytics workspace when any Event Grid subscriptions which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Event Grid subscriptions to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-EventGridSub
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.EventGrid/eventSubscriptions","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.EventGrid/eventSubscriptions/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSystemTopic"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSystemTopic
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Event Grid System Topic to stream to a Log Analytics workspace when any Event Grid System Topic which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Event Grid System Topic to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-EventGridSystemTopic
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.EventGrid/systemTopics","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"DeliveryFailures","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.EventGrid/systemTopics/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridTopic"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridTopic
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Event Grid Topic to stream to a Log Analytics workspace when any Event Grid Topic which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Event Grid Topic to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-EventGridTopic
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.EventGrid/topics","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"DeliveryFailures","enabled":"[parameters(''logsEnabled'')]"},{"category":"PublishFailures","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.EventGrid/topics/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventHub"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventHub
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Event Hubs to stream to a Log Analytics workspace when any Event Hubs which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Event Hubs to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-EventHub
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.EventHub/namespaces","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"ArchiveLogs","enabled":"[parameters(''logsEnabled'')]"},{"category":"OperationalLogs","enabled":"[parameters(''logsEnabled'')]"},{"category":"AutoScaleLogs","enabled":"[parameters(''logsEnabled'')]"},{"category":"KafkaCoordinatorLogs","enabled":"[parameters(''logsEnabled'')]"},{"category":"KafkaUserErrorLogs","enabled":"[parameters(''logsEnabled'')]"},{"category":"EventHubVNetConnectionEvent","enabled":"[parameters(''logsEnabled'')]"},{"category":"CustomerManagedKeyUserLogs","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.EventHub/namespaces/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ExpressRoute"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ExpressRoute
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for ExpressRoute to stream to a Log Analytics workspace when any ExpressRoute which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for ExpressRoute to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-ExpressRoute
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Network/expressRouteCircuits","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"PeeringRouteLog","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Network/expressRouteCircuits/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Firewall"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Firewall
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Firewall to stream to a Log Analytics workspace when any Firewall which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Firewall to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-Firewall
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Network/azureFirewalls","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"AzureFirewallApplicationRule","enabled":"[parameters(''logsEnabled'')]"},{"category":"AzureFirewallNetworkRule","enabled":"[parameters(''logsEnabled'')]"},{"category":"AzureFirewallDnsProxy","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Network/azureFirewalls/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-FrontDoor"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-FrontDoor
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Front Door to stream to a Log Analytics workspace when any Front Door which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Front Door to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-FrontDoor
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Network/frontDoors","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"FrontdoorAccessLog","enabled":"[parameters(''logsEnabled'')]"},{"category":"FrontdoorWebApplicationFirewallLog","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Network/frontDoors/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Function"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Function
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Azure Function App to stream to a Log Analytics workspace when any function app which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Azure Function App to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-Function
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Web/sites","field":"type"},{"contains":"functionapp","value":"[field(''kind'')]"}]},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"FunctionAppLogs","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Web/sites/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-HDInsight"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-HDInsight
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for HDInsight to stream to a Log Analytics workspace when any HDInsight which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for HDInsight to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-HDInsight
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.HDInsight/clusters","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.HDInsight/clusters/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-KeyVault"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-KeyVault
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Key Vault to stream to a Log Analytics workspace when any Key Vault which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Key Vault to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-KeyVault
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.KeyVault/vaults","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"AuditEvent","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.KeyVault/vaults/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LoadBalancer"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LoadBalancer
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Load Balancer to stream to a Log Analytics workspace when any Load Balancer which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Load Balancer to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-LoadBalancer
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Network/loadBalancers","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"LoadBalancerAlertEvent","enabled":"[parameters(''logsEnabled'')]"},{"category":"LoadBalancerProbeHealthStatus","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Network/loadBalancers/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogicAppsISE"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogicAppsISE
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Logic Apps integration service environment to stream to a Log Analytics workspace when any Logic Apps integration service environment which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Logic Apps integration service environment to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-LogicAppsISE
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Logic/integrationAccounts","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"IntegrationAccountTrackingEvents","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Logic/integrationAccounts/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogicAppsWF"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogicAppsWF
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Logic Apps Workflow runtimeto stream to a Log Analytics workspace when any Logic Apps Workflow runtime which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Logic Apps Workflow runtime to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-LogicAppsWF
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Logic/workflows","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"WorkflowRuntime","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Logic/workflows/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MariaDB"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MariaDB
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for MariaDB to stream to a Log Analytics workspace when any MariaDB  which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for MariaDB to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-MariaDB
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.DBforMariaDB/servers","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"MySqlSlowLogs","enabled":"[parameters(''logsEnabled'')]"},{"category":"MySqlAuditLogs","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.DBforMariaDB/servers/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MediaService"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MediaService
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Azure Media Service to stream to a Log Analytics workspace when any Azure Media Service which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Azure Media Service to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-MediaService
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Media/mediaServices","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"KeyDeliveryRequests","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Media/mediaServices/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MlWorkspace"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MlWorkspace
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Machine Learning workspace to stream to a Log Analytics workspace when any Machine Learning workspace which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Machine Learning workspace to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-MlWorkspace
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.MachineLearningServices/workspaces","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"AmlComputeClusterEvent","enabled":"[parameters(''logsEnabled'')]"},{"category":"AmlComputeClusterNodeEvent","enabled":"[parameters(''logsEnabled'')]"},{"category":"AmlComputeJobEvent","enabled":"[parameters(''logsEnabled'')]"},{"category":"AmlComputeCpuGpuUtilization","enabled":"[parameters(''logsEnabled'')]"},{"category":"AmlRunStatusChangedEvent","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"Run","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null},{"category":"Model","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":true}},{"category":"Quota","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null},{"category":"Resource","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.MachineLearningServices/workspaces/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MySQL"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MySQL
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Database for MySQL to stream to a Log Analytics workspace when any Database for MySQL which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Database for MySQL to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-MySQL
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.DBforMySQL/servers","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"MySqlSlowLogs","enabled":"[parameters(''logsEnabled'')]"},{"category":"MySqlAuditLogs","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.DBforMySQL/servers/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NIC"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NIC
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Network Interfaces to stream to a Log Analytics workspace when any Network Interfaces which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Network Interfaces to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-NIC
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Network/networkInterfaces","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Network/networkInterfaces/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NetworkSecurityGroups"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NetworkSecurityGroups
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Network Security Groups to stream to a Log Analytics workspace when any Network Security Groups which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Network Security Groups to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-NetworkSecurityGroups
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Network/networkSecurityGroups","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"NetworkSecurityGroupEvent","enabled":"[parameters(''logsEnabled'')]"},{"category":"NetworkSecurityGroupRuleCounter","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Network/networkSecurityGroups/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PostgreSQL"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PostgreSQL
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Database for PostgreSQL to stream to a Log Analytics workspace when any Database for PostgreSQL which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Database for PostgreSQL to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-PostgreSQL
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.DBforPostgreSQL/servers","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"PostgreSQLLogs","enabled":"[parameters(''logsEnabled'')]"},{"category":"QueryStoreRuntimeStatistics","enabled":"[parameters(''logsEnabled'')]"},{"category":"QueryStoreWaitStatistics","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.DBforPostgreSQL/servers/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PowerBIEmbedded"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PowerBIEmbedded
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Power BI Embedded to stream to a Log Analytics workspace when any Power BI Embedded which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Power BI Embedded to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-PowerBIEmbedded
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.PowerBIDedicated/capacities","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"Engine","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.PowerBIDedicated/capacities/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-RecoveryVault"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-RecoveryVault
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Recovery Services vaults to stream to a Log Analytics workspace when any Recovery Services vaults which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Recovery Services vaults to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-RecoveryVault
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.RecoveryServices/vaults","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logAnalyticsDestinationType":"Dedicated","logs":[{"category":"CoreAzureBackup","enabled":"[parameters(''logsEnabled'')]"},{"category":"AddonAzureBackupAlerts","enabled":"[parameters(''logsEnabled'')]"},{"category":"AddonAzureBackupJobs","enabled":"[parameters(''logsEnabled'')]"},{"category":"AddonAzureBackupPolicy","enabled":"[parameters(''logsEnabled'')]"},{"category":"AddonAzureBackupProtectedInstance","enabled":"[parameters(''logsEnabled'')]"},{"category":"AddonAzureBackupStorage","enabled":"[parameters(''logsEnabled'')]"},{"category":"AzureBackupReport","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.RecoveryServices/vaults/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"count":{"field":"Microsoft.Insights/diagnosticSettings/logs[*]","where":{"allOf":[{"field":"Microsoft.Insights/diagnosticSettings/logs[*].Category","in":["CoreAzureBackup","AddonAzureBackupJobs","AddonAzureBackupAlerts","AddonAzureBackupPolicy","AddonAzureBackupStorage","AddonAzureBackupProtectedInstance","AzureBackupReport"]},{"equals":"True","field":"Microsoft.Insights/diagnosticSettings/logs[*].Enabled"}]}},"equals":7},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"},{"equals":"Dedicated","field":"Microsoft.Insights/diagnosticSettings/logAnalyticsDestinationType"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-RedisCache"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-RedisCache
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Redis Cache to stream to a Log Analytics workspace when any Redis Cache which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Redis Cache to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-RedisCache
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Cache/redis","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Cache/redis/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Relay"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Relay
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Relay to stream to a Log Analytics workspace when any Relay which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Relay to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-Relay
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Relay/namespaces","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"HybridConnectionsEvent","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Relay/namespaces/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLDBs"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLDBs
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for SQL Databases to stream to a Log Analytics workspace when any SQL Databases  which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for SQL Databases  to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-SQLDBs
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Sql/servers/databases","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''fullName'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"SQLInsights","enabled":"[parameters(''logsEnabled'')]"},{"category":"AutomaticTuning","enabled":"[parameters(''logsEnabled'')]"},{"category":"DevOpsOperationsAudit","enabled":"[parameters(''logsEnabled'')]"},{"category":"QueryStoreRuntimeStatistics","enabled":"[parameters(''logsEnabled'')]"},{"category":"QueryStoreWaitStatistics","enabled":"[parameters(''logsEnabled'')]"},{"category":"Errors","enabled":"[parameters(''logsEnabled'')]"},{"category":"DatabaseWaitStatistics","enabled":"[parameters(''logsEnabled'')]"},{"category":"Timeouts","enabled":"[parameters(''logsEnabled'')]"},{"category":"Blocks","enabled":"[parameters(''logsEnabled'')]"},{"category":"Deadlocks","enabled":"[parameters(''logsEnabled'')]"},{"category":"SQLSecurityAuditEvents","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Sql/servers/databases/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLElasticPools"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLElasticPools
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for SQL Elastic Pools to stream to a Log Analytics workspace when any SQL Elastic Pools which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for SQL Elastic Pools to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-SQLElasticPools
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Sql/servers/elasticPools","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''fullName'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Sql/servers/elasticPools/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLMI"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLMI
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for SQL Managed Instances to stream to a Log Analytics workspace when any SQL Managed Instances which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for SQL Managed Instances to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-SQLMI
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Sql/managedInstances","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"ResourceUsageStats","enabled":"[parameters(''logsEnabled'')]"},{"category":"SQLSecurityAuditEvents","enabled":"[parameters(''logsEnabled'')]"},{"category":"DevOpsOperationsAudit","enabled":"[parameters(''logsEnabled'')]"}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Sql/managedInstances/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SearchServices"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SearchServices
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Search Services to stream to a Log Analytics workspace when any Search Services which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Search Services to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-SearchServices
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Search/searchServices","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"OperationLogs","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Search/searchServices/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ServiceBus"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ServiceBus
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for ServiceBus to stream to a Log Analytics workspace when any ServiceBus which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Service Bus namespaces  to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-ServiceBus
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.ServiceBus/namespaces","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"OperationalLogs","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.ServiceBus/namespaces/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SignalR"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SignalR
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for SignalR to stream to a Log Analytics workspace when any SignalR which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for SignalR to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-SignalR
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.SignalRService/SignalR","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"AllLogs","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.SignalRService/SignalR/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-StreamAnalytics"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-StreamAnalytics
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Stream Analytics to stream to a Log Analytics workspace when any Stream Analytics which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Stream Analytics to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-StreamAnalytics
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.StreamAnalytics/streamingjobs","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"Execution","enabled":"[parameters(''logsEnabled'')]"},{"category":"Authoring","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.StreamAnalytics/streamingjobs/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TimeSeriesInsights"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TimeSeriesInsights
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Time Series Insights to stream to a Log Analytics workspace when any Time Series Insights which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Time Series Insights to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-TimeSeriesInsights
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.TimeSeriesInsights/environments","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"Ingress","enabled":"[parameters(''logsEnabled'')]"},{"category":"Management","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.TimeSeriesInsights/environments/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TrafficManager"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TrafficManager
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Traffic Manager to stream to a Log Analytics workspace when any Traffic Manager which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Traffic Manager to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-TrafficManager
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Network/trafficManagerProfiles","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"ProbeHealthStatusEvents","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Network/trafficManagerProfiles/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VM"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VM
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Virtual Machines to stream to a Log Analytics workspace when any Virtual Machines which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Virtual Machines to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-VM
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Compute/virtualMachines","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false}}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Compute/virtualMachines/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VMSS"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VMSS
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Virtual Machine Scale Sets  to stream to a Log Analytics workspace when any Virtual Machine Scale Sets  which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Virtual Machine Scale Sets to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-VMSS
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Compute/virtualMachineScaleSets","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false}}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Compute/virtualMachineScaleSets/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VNetGW"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VNetGW
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for VPN Gateway to stream to a Log Analytics workspace when any VPN Gateway which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled.
          display_name: Deploy Diagnostic Settings for VPN Gateway to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-VNetGW
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Network/virtualNetworkGateways","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"GatewayDiagnosticLog","enabled":"[parameters(''logsEnabled'')]"},{"category":"IKEDiagnosticLog","enabled":"[parameters(''logsEnabled'')]"},{"category":"P2SDiagnosticLog","enabled":"[parameters(''logsEnabled'')]"},{"category":"RouteDiagnosticLog","enabled":"[parameters(''logsEnabled'')]"},{"category":"RouteDiagnosticLog","enabled":"[parameters(''logsEnabled'')]"},{"category":"TunnelDiagnosticLog","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Network/virtualNetworkGateways/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VirtualNetwork"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VirtualNetwork
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Virtual Network to stream to a Log Analytics workspace when any Virtual Network which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Virtual Network to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-VirtualNetwork
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Network/virtualNetworks","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"VMProtectionAlerts","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false}}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Network/virtualNetworks/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDAppGroup"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDAppGroup
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for WVD Application group to stream to a Log Analytics workspace when any application group which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all and categorys enabled.
          display_name: Deploy Diagnostic Settings for WVD Application group to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-WVDAppGroup
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.DesktopVirtualization/applicationGroups","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"Checkpoint","enabled":"[parameters(''logsEnabled'')]"},{"category":"Error","enabled":"[parameters(''logsEnabled'')]"},{"category":"Management","enabled":"[parameters(''logsEnabled'')]"}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.DesktopVirtualization/applicationGroups/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDHostPools"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDHostPools
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for WVD Host Pools to stream to a Log Analytics workspace when any Host Pools which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all and categorys enabled.
          display_name: Deploy Diagnostic Settings for WVD Host Pools to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-WVDHostPools
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.DesktopVirtualization/hostpools","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"Checkpoint","enabled":"[parameters(''logsEnabled'')]"},{"category":"Error","enabled":"[parameters(''logsEnabled'')]"},{"category":"Management","enabled":"[parameters(''logsEnabled'')]"},{"category":"Connection","enabled":"[parameters(''logsEnabled'')]"},{"category":"HostRegistration","enabled":"[parameters(''logsEnabled'')]"},{"category":"AgentHealthStatus","enabled":"[parameters(''logsEnabled'')]"}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.DesktopVirtualization/hostpools/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDWorkspace"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDWorkspace
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for WVD Workspace to stream to a Log Analytics workspace when any Workspace which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all and categorys enabled.
          display_name: Deploy Diagnostic Settings for WVD Workspace to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-WVDWorkspace
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.DesktopVirtualization/workspaces","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"Checkpoint","enabled":"[parameters(''logsEnabled'')]"},{"category":"Error","enabled":"[parameters(''logsEnabled'')]"},{"category":"Management","enabled":"[parameters(''logsEnabled'')]"},{"category":"Feed","enabled":"[parameters(''logsEnabled'')]"}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.DesktopVirtualization/workspaces/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WebServerFarm"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WebServerFarm
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for App Service Plan to stream to a Log Analytics workspace when any App Service Plan which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for App Service Plan to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-WebServerFarm
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Web/serverfarms","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Web/serverfarms/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Website"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Website
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Web App to stream to a Log Analytics workspace when any Web App which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for App Service to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-Website
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Web/sites","field":"type"},{"notContains":"functionapp","value":"[field(''kind'')]"}]},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"AppServiceAntivirusScanAuditLogs","enabled":"[parameters(''logsEnabled'')]"},{"category":"AppServiceHTTPLogs","enabled":"[parameters(''logsEnabled'')]"},{"category":"AppServiceConsoleLogs","enabled":"[parameters(''logsEnabled'')]"},{"category":"AppServiceHTTPLogs","enabled":"[parameters(''logsEnabled'')]"},{"category":"AppServiceAppLogs","enabled":"[parameters(''logsEnabled'')]"},{"category":"AppServiceFileAuditLogs","enabled":"[parameters(''logsEnabled'')]"},{"category":"AppServiceAuditLogs","enabled":"[parameters(''logsEnabled'')]"},{"category":"AppServiceIPSecAuditLogs","enabled":"[parameters(''logsEnabled'')]"},{"category":"AppServicePlatformLogs","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Web/sites/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-iotHub"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-iotHub
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for IoT Hub to stream to a Log Analytics workspace when any IoT Hub which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for IoT Hub to Log Analytics workspace
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-iotHub
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Devices/IotHubs","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"Connections","enabled":"[parameters(''logsEnabled'')]"},{"category":"DeviceTelemetry","enabled":"[parameters(''logsEnabled'')]"},{"category":"C2DCommands","enabled":"[parameters(''logsEnabled'')]"},{"category":"DeviceIdentityOperations","enabled":"[parameters(''logsEnabled'')]"},{"category":"FileUploadOperations","enabled":"[parameters(''logsEnabled'')]"},{"category":"Routes","enabled":"[parameters(''logsEnabled'')]"},{"category":"D2CTwinOperations","enabled":"[parameters(''logsEnabled'')]"},{"category":"C2DTwinOperations","enabled":"[parameters(''logsEnabled'')]"},{"category":"TwinQueries","enabled":"[parameters(''logsEnabled'')]"},{"category":"JobsOperations","enabled":"[parameters(''logsEnabled'')]"},{"category":"DirectMethods","enabled":"[parameters(''logsEnabled'')]"},{"category":"DistributedTracing","enabled":"[parameters(''logsEnabled'')]"},{"category":"Configurations","enabled":"[parameters(''logsEnabled'')]"},{"category":"DeviceStreams","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Devices/IotHubs/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-FirewallPolicy"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-FirewallPolicy
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys Azure Firewall Manager policy in subscription where the policy is assigned.
          display_name: Deploy Azure Firewall Manager policy in the subscription
          management_group_name: myorg-1
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: All
          name: Deploy-FirewallPolicy
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"fwPolicyRegion":{"metadata":{"description":"Select Azure region for Azure Firewall Policy","displayName":"fwPolicyRegion","strongType":"location"},"type":"String"},"fwpolicy":{"defaultValue":{},"metadata":{"description":"Object describing Azure Firewall Policy","displayName":"fwpolicy"},"type":"Object"},"rgName":{"metadata":{"description":"Provide name for resource group.","displayName":"rgName"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"Incremental","parameters":{"fwPolicy":{"value":"[parameters(''fwPolicy'')]"},"fwPolicyRegion":{"value":"[parameters(''fwPolicyRegion'')]"},"rgName":{"value":"[parameters(''rgName'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json","contentVersion":"1.0.0.0","outputs":{},"parameters":{"fwPolicy":{"type":"object"},"fwPolicyRegion":{"type":"String"},"rgName":{"type":"String"}},"resources":[{"apiVersion":"2018-05-01","location":"[deployment().location]","name":"[parameters(''rgName'')]","properties":{},"type":"Microsoft.Resources/resourceGroups"},{"apiVersion":"2018-05-01","dependsOn":["[resourceId(''Microsoft.Resources/resourceGroups/'', parameters(''rgName''))]"],"name":"fwpolicies","properties":{"mode":"Incremental","template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json","contentVersion":"1.0.0.0","outputs":{},"parameters":{},"resources":[{"apiVersion":"2019-09-01","dependsOn":[],"location":"[parameters(''fwpolicy'').location]","name":"[parameters(''fwpolicy'').firewallPolicyName]","properties":{},"resources":[{"apiVersion":"2019-09-01","dependsOn":["[resourceId(''Microsoft.Network/firewallPolicies'',parameters(''fwpolicy'').firewallPolicyName)]"],"name":"[parameters(''fwpolicy'').ruleGroups.name]","properties":{"priority":"[parameters(''fwpolicy'').ruleGroups.properties.priority]","rules":"[parameters(''fwpolicy'').ruleGroups.properties.rules]"},"type":"ruleGroups"}],"tags":{},"type":"Microsoft.Network/firewallPolicies"}],"variables":{}}},"resourceGroup":"[parameters(''rgName'')]","type":"Microsoft.Resources/deployments"}]}}},"deploymentScope":"Subscription","existenceScope":"ResourceGroup","resourceGroupName":"[parameters(''rgName'')]","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"],"type":"Microsoft.Network/firewallPolicies"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-HUB"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-HUB
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys Virtual Network to be used as hub virtual network in desired region in the subscription where this policy is assigned.
          display_name: Deploy Virtual Network to be used as hub virtual network in desired region
          management_group_name: myorg-1
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: All
          name: Deploy-HUB
          parameters: '{"HUB":{"metadata":{"description":"Object describing HUB","displayName":"HUB"},"type":"Object"},"azfw":{"defaultValue":{},"metadata":{"description":"Object describing Azure Firewall","displayName":"azfw"},"type":"Object"},"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"ergw":{"defaultValue":{},"metadata":{"description":"Object describing ExpressRoute gateway","displayName":"ergw"},"type":"Object"},"hubName":{"metadata":{"description":"Name of the Hub","displayName":"hubName"},"type":"String"},"rgName":{"metadata":{"description":"Provide name for resource group.","displayName":"rgName"},"type":"String"},"vpngw":{"defaultValue":{},"metadata":{"description":"Object describing VPN gateway","displayName":"vpngw"},"type":"Object"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"Incremental","parameters":{"HUB":{"value":"[parameters(''HUB'')]"},"azfw":{"value":"[parameters(''azfw'')]"},"ergw":{"value":"[parameters(''ergw'')]"},"hubName":{"value":"[parameters(''hubName'')]"},"rgName":{"value":"[parameters(''rgName'')]"},"vpngw":{"value":"[parameters(''vpngw'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json","contentVersion":"1.0.0.0","parameters":{"HUB":{"metadata":{"description":"Object describing HUB"},"type":"object"},"azfw":{"defaultValue":{},"metadata":{"description":"Object describing the Azure Firewall"},"type":"object"},"ergw":{"defaultValue":{},"metadata":{"description":"Object describing ExpressRoute gateway"},"type":"object"},"hubName":{"metadata":{"description":"Name of the HUB"},"type":"String"},"rgName":{"metadata":{"description":"Provide name for resource group.","displayName":"rgName"},"type":"String"},"vpngw":{"defaultValue":{},"metadata":{"description":"Object describing VPN gateway"},"type":"object"}},"resources":[{"apiVersion":"2020-06-01","location":"[deployment().location]","name":"[parameters(''rgName'')]","properties":{},"type":"Microsoft.Resources/resourceGroups"},{"apiVersion":"2020-06-01","dependsOn":["[resourceId(''Microsoft.Resources/resourceGroups/'', parameters(''rgName''))]"],"name":"[concat(parameters(''hubName''),''-'', parameters(''HUB'').location)]","properties":{"mode":"Incremental","template":{"$schema":"https: //schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","parameters":{},"resources":[{"apiVersion":"2020-04-01","location":"[parameters(''HUB'').location]","name":"[parameters(''hubName'')]","properties":{"addressSpace":{"addressPrefixes":["[parameters(''HUB'').addressPrefix]"]},"subnets":[{"name":"Infrastructure","properties":{"addressPrefix":"[if(not(empty(parameters(''HUB'').subnets.infra)),parameters(''HUB'').subnets.infra, json(''null''))]"}},{"name":"AzureFirewallSubnet","properties":{"addressPrefix":"[if(not(empty(parameters(''HUB'').subnets.azfw)),parameters(''HUB'').subnets.azfw, json(''null''))]"}},{"name":"GatewaySubnet","properties":{"addressPrefix":"[if(not(empty(parameters(''HUB'').subnets.gw)),parameters(''HUB'').subnets.gw, json(''null''))]"}}]},"type":"Microsoft.Network/virtualNetworks"}],"variables":{}}},"resourceGroup":"[parameters(''rgName'')]","type":"Microsoft.Resources/deployments"},{"apiVersion":"2020-06-01","condition":"[greater(length(parameters(''vpngw'')),0)]","dependsOn":["[concat(parameters(''hubName''),''-'', parameters(''HUB'').location)]"],"name":"[concat(parameters(''hubName''),''-vpngw'')]","properties":{"mode":"Incremental","template":{"$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","parameters":{},"resources":[{"apiVersion":"2020-05-01","location":"[parameters(''HUB'').location]","name":"[concat(parameters(''vpngw'').name,''-pip'')]","properties":{"publicIPAllocationMethod":"Dynamic"},"tags":{},"type":"Microsoft.Network/publicIpAddresses"},{"apiVersion":"2020-05-01","dependsOn":["[concat(''Microsoft.Network/publicIPAddresses/'', parameters(''vpngw'').name,''-pip'')]"],"location":"[parameters(''HUB'').location]","name":"[parameters(''vpngw'').name]","properties":{"gatewayType":"Vpn","ipConfigurations":[{"name":"default","properties":{"privateIPAllocationMethod":"Dynamic","publicIpAddress":{"id":"[concat(subscription().id,''/resourceGroups/'',parameters(''rgName''), ''/providers'',''/Microsoft.Network/publicIPAddresses/'', parameters(''vpngw'').name,''-pip'')]"},"subnet":{"id":"[concat(subscription().id,''/resourceGroups/'',parameters(''rgName''), ''/providers'',''/Microsoft.Network/virtualNetworks/'', parameters(''hubName''),''/subnets/GatewaySubnet'')]"}}}],"sku":{"name":"[parameters(''vpngw'').sku]","tier":"[parameters(''vpngw'').sku]"},"vpnType":"[parameters(''vpngw'').vpnType]"},"tags":{},"type":"Microsoft.Network/virtualNetworkGateways"}],"variables":{}}},"resourceGroup":"[parameters(''rgName'')]","type":"Microsoft.Resources/deployments"},{"apiVersion":"2020-06-01","condition":"[greater(length(parameters(''ergw'')),0)]","dependsOn":["[concat(parameters(''hubName''),''-'', parameters(''HUB'').location)]"],"name":"[concat(parameters(''hubName''),''-ergw'')]","properties":{"mode":"Incremental","template":{"$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","parameters":{},"resources":[{"apiVersion":"2020-05-01","location":"[parameters(''HUB'').location]","name":"[concat(parameters(''ergw'').name,''-pip'')]","properties":{"publicIPAllocationMethod":"Dynamic"},"tags":{},"type":"Microsoft.Network/publicIpAddresses"},{"apiVersion":"2020-05-01","dependsOn":["[concat(''Microsoft.Network/publicIPAddresses/'', parameters(''ergw'').name,''-pip'')]"],"location":"[parameters(''HUB'').location]","name":"[parameters(''ergw'').name]","properties":{"gatewayType":"ExpressRoute","ipConfigurations":[{"name":"default","properties":{"privateIPAllocationMethod":"Dynamic","publicIpAddress":{"id":"[concat(subscription().id,''/resourceGroups/'',parameters(''rgName''), ''/providers'',''/Microsoft.Network/publicIPAddresses/'', parameters(''ergw'').name,''-pip'')]"},"subnet":{"id":"[concat(subscription().id,''/resourceGroups/'',parameters(''rgName''), ''/providers'',''/Microsoft.Network/virtualNetworks/'', parameters(''hubName''),''/subnets/GatewaySubnet'')]"}}}],"sku":{"name":"[parameters(''ergw'').sku]","tier":"[parameters(''ergw'').sku]"}},"tags":{},"type":"Microsoft.Network/virtualNetworkGateways"}],"variables":{}}},"resourceGroup":"[parameters(''rgName'')]","type":"Microsoft.Resources/deployments"},{"apiVersion":"2020-06-01","condition":"[greater(length(parameters(''azfw'')),0)]","dependsOn":["[concat(parameters(''hubName''),''-'', parameters(''HUB'').location)]"],"name":"[concat(parameters(''hubName''),''-azfw'')]","properties":{"mode":"Incremental","template":{"$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","parameters":{},"resources":[{"apiVersion":"2020-05-01","location":"[parameters(''azfw'').location]","name":"[concat(parameters(''azfw'').name,''-pip'')]","properties":{"publicIPAllocationMethod":"Static"},"sku":{"name":"Standard"},"tags":{},"type":"Microsoft.Network/publicIpAddresses","zones":"[if(contains(parameters(''azfw''),''pipZones''),parameters(''azfw'').pipZones,json(''null''))]"},{"apiVersion":"2020-05-01","dependsOn":["[concat(parameters(''azfw'').name,''-pip'')]"],"location":"[parameters(''azfw'').location]","name":"[parameters(''azfw'').name]","properties":{"additionalProperties":"[if(contains(parameters(''azfw''),''additionalProperties''),parameters(''azfw'').additionalProperties,json(''null''))]","firewallPolicy":"[if(contains(parameters(''azfw''),''firewallPolicy''),parameters(''azfw'').firewallPolicy,json(''null''))]","ipConfigurations":[{"name":"[concat(parameters(''azfw'').name,''-pip'')]","properties":{"publicIPAddress":{"id":"[concat(subscription().id,''/resourceGroups/'',parameters(''rgName''), ''/providers'',''/Microsoft.Network/publicIPAddresses/'', parameters(''azfw'').name,''-pip'')]"},"subnet":{"id":"[concat(subscription().id,''/resourceGroups/'',parameters(''rgName''), ''/providers'',''/Microsoft.Network/virtualNetworks/'', parameters(''hubName''),''/subnets/AzureFirewallSubnet'')]"}}}],"sku":"[if(contains(parameters(''azfw''),''sku''),parameters(''azfw'').sku,json(''null''))]","threatIntelMode":"[parameters(''azfw'').threatIntelMode]"},"tags":{},"type":"Microsoft.Network/azureFirewalls","zones":"[if(contains(parameters(''azfw''),''fwZones''),parameters(''azfw'').fwZones,json(''null''))]"}],"variables":{}}},"resourceGroup":"[parameters(''rgName'')]","type":"Microsoft.Resources/deployments"}],"variables":{}}}},"deploymentScope":"Subscription","existenceScope":"ResourceGroup","name":"[parameters(''hubName'')]","resourceGroupName":"[parameters(''rgName'')]","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"],"type":"Microsoft.Network/virtualNetworks"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-LA-Config"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-LA-Config
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: 'Deploy the configurations to the Log Analytics in the subscription. This includes a list of solutions like update, automation etc and  enables the vminsight counters. '
          display_name: Deploy the configurations to the Log Analytics in the subscription
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-LA-Config
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"workspaceName":{"metadata":{"description":"Provide name of existing Log Analytics workspace","displayName":"workspaceName"},"type":"String"},"workspaceRegion":{"metadata":{"description":"Select region of existing Log Analytics workspace","displayName":"workspaceRegion"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.OperationalInsights/workspaces","field":"type"}]},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"workspaceName":{"value":"[parameters(''workspaceName'')]"},"workspaceRegion":{"value":"[parameters(''workspaceRegion'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"workspaceName":{"type":"String"},"workspaceRegion":{"type":"String"}},"resources":[{"apiVersion":"2015-11-01-preview","kind":"LinuxPerformanceCollection","name":"[concat(parameters(''workspaceName''), ''/LinuxPerfCollection'')]","properties":{"state":"Enabled"},"type":"Microsoft.OperationalInsights/workspaces/datasources"},{"apiVersion":"2015-11-01-preview","kind":"LinuxPerformanceObject","name":"[concat(parameters(''workspaceName''), ''/'', variables(''vmInsightsPerfCounters'').linuxDiskObject.armResourceName)]","properties":{"instanceName":"[variables(''vmInsightsPerfCounters'').linuxDiskObject.instanceName]","intervalSeconds":"[variables(''vmInsightsPerfCounters'').linuxDiskObject.intervalSeconds]","objectName":"[variables(''vmInsightsPerfCounters'').linuxDiskObject.objectName]","performanceCounters":"[variables(''vmInsightsPerfCounters'').linuxDiskArray]"},"type":"Microsoft.OperationalInsights/workspaces/dataSources"},{"apiVersion":"2015-11-01-preview","kind":"LinuxPerformanceObject","name":"[concat(parameters(''workspaceName''), ''/'', variables(''vmInsightsPerfCounters'').linuxMemoryObject.armResourceName)]","properties":{"instanceName":"[variables(''vmInsightsPerfCounters'').linuxMemoryObject.instanceName]","intervalSeconds":"[variables(''vmInsightsPerfCounters'').linuxMemoryObject.intervalSeconds]","objectName":"[variables(''vmInsightsPerfCounters'').linuxMemoryObject.objectName]","performanceCounters":"[variables(''vmInsightsPerfCounters'').linuxMemoryArray]"},"type":"Microsoft.OperationalInsights/workspaces/dataSources"},{"apiVersion":"2015-11-01-preview","kind":"LinuxPerformanceObject","name":"[concat(parameters(''workspaceName''), ''/'', variables(''vmInsightsPerfCounters'').linuxCpuObject.armResourceName)]","properties":{"instanceName":"[variables(''vmInsightsPerfCounters'').linuxCpuObject.instanceName]","intervalSeconds":"[variables(''vmInsightsPerfCounters'').linuxCpuObject.intervalSeconds]","objectName":"[variables(''vmInsightsPerfCounters'').linuxCpuObject.objectName]","performanceCounters":"[variables(''vmInsightsPerfCounters'').linuxCpuArray]"},"type":"Microsoft.OperationalInsights/workspaces/dataSources"},{"apiVersion":"2015-11-01-preview","kind":"LinuxPerformanceObject","name":"[concat(parameters(''workspaceName''), ''/'', variables(''vmInsightsPerfCounters'').linuxNetworkObject.armResourceName)]","properties":{"instanceName":"[variables(''vmInsightsPerfCounters'').linuxNetworkObject.instanceName]","intervalSeconds":"[variables(''vmInsightsPerfCounters'').linuxNetworkObject.intervalSeconds]","objectName":"[variables(''vmInsightsPerfCounters'').linuxNetworkObject.objectName]","performanceCounters":"[variables(''vmInsightsPerfCounters'').linuxNetworkArray]"},"type":"Microsoft.OperationalInsights/workspaces/dataSources"},{"apiVersion":"2015-11-01-preview","copy":{"count":"[length(variables(''vmInsightsPerfCounters'').windowsArray)]","name":"counterCopy"},"kind":"WindowsPerformanceCounter","name":"[concat(parameters(''workspaceName''), ''/'', variables(''vmInsightsPerfCounters'').windowsArray[copyIndex()].armName)]","properties":{"counterName":"[variables(''vmInsightsPerfCounters'').windowsArray[copyIndex()].counterName]","instanceName":"[variables(''vmInsightsPerfCounters'').windowsArray[copyIndex()].instanceName]","intervalSeconds":"[variables(''vmInsightsPerfCounters'').windowsArray[copyIndex()].intervalSeconds]","objectName":"[variables(''vmInsightsPerfCounters'').windowsArray[copyIndex()].objectName]"},"type":"Microsoft.OperationalInsights/workspaces/dataSources"},{"apiVersion":"2015-11-01-preview","copy":{"count":"[length(variables(''batch1'').solutions)]","name":"solutionCopy"},"location":"[parameters(''workspaceRegion'')]","name":"[concat(variables(''batch1'').solutions[copyIndex()].Name)]","plan":{"name":"[variables(''batch1'').solutions[copyIndex()].name]","product":"[concat(''OMSGallery/'', variables(''batch1'').solutions[copyIndex()].marketplaceName)]","promotionCode":"","publisher":"Microsoft"},"properties":{"workspaceResourceId":"[resourceId(''Microsoft.OperationalInsights/workspaces/'', parameters(''workspaceName''))]"},"type":"Microsoft.OperationsManagement/solutions"}],"variables":{"batch1":{"solutions":[{"marketplaceName":"Security","name":"[concat(''Security'', ''('', parameters(''workspaceName''), '')'')]"},{"marketplaceName":"AgentHealthAssessment","name":"[concat(''AgentHealthAssessment'', ''('', parameters(''workspaceName''), '')'')]"},{"marketplaceName":"ChangeTracking","name":"[concat(''ChangeTracking'', ''('', parameters(''workspaceName''), '')'')]"},{"marketplaceName":"Updates","name":"[concat(''Updates'', ''('', parameters(''workspaceName''), '')'')]"},{"marketplaceName":"AzureActivity","name":"[concat(''AzureActivity'', ''('', parameters(''workspaceName''), '')'')]"},{"marketplaceName":"AzureAutomation","name":"[concat(''AzureAutomation'', ''('', parameters(''workspaceName''), '')'')]"},{"marketplaceName":"ADAssessment","name":"[concat(''ADAssessment'', ''('', parameters(''workspaceName''), '')'')]"},{"marketplaceName":"SQLAssessment","name":"[concat(''SQLAssessment'', ''('', parameters(''workspaceName''), '')'')]"},{"marketplaceName":"VMInsights","name":"[concat(''VMInsights'', ''('', parameters(''workspaceName''), '')'')]"},{"marketplaceName":"ServiceMap","name":"[concat(''ServiceMap'', ''('', parameters(''workspaceName''), '')'')]"},{"marketplaceName":"SecurityInsights","name":"[concat(''SecurityInsights'', ''('', parameters(''workspaceName''), '')'')]"}]},"vmInsightsPerfCounters":{"linuxCpuArray":[{"counterName":"% Processor Time"}],"linuxCpuObject":{"armResourceName":"Processor","instanceName":"*","intervalSeconds":10,"objectName":"Processor"},"linuxDiskArray":[{"counterName":"% Used Inodes"},{"counterName":"Free Megabytes"},{"counterName":"% Used Space"},{"counterName":"Disk Transfers/sec"},{"counterName":"Disk Reads/sec"},{"counterName":"Disk writes/sec"}],"linuxDiskObject":{"armResourceName":"Disk","instanceName":"*","intervalSeconds":10,"objectName":"Logical Disk"},"linuxMemoryArray":[{"counterName":"Available MBytes Memory"}],"linuxMemoryObject":{"armResourceName":"Memory","instanceName":"*","intervalSeconds":10,"objectName":"Memory"},"linuxNetworkArray":[{"counterName":"Total Bytes Received"},{"counterName":"Total Bytes Transmitted"}],"linuxNetworkObject":{"armResourceName":"Network","instanceName":"*","intervalSeconds":10,"objectName":"Network"},"windowsArray":[{"armName":"counter1","counterName":"% Free Space","instanceName":"*","intervalSeconds":10,"objectName":"LogicalDisk"},{"armName":"counter2","counterName":"Avg. Disk sec/Read","instanceName":"*","intervalSeconds":10,"objectName":"LogicalDisk"},{"armName":"counter3","counterName":"Avg. Disk sec/Transfer","instanceName":"*","intervalSeconds":10,"objectName":"LogicalDisk"},{"armName":"counter4","counterName":"Avg. Disk sec/Write","instanceName":"*","intervalSeconds":10,"objectName":"LogicalDisk"},{"armName":"counter5","counterName":"Disk Read Bytes/sec","instanceName":"*","intervalSeconds":10,"objectName":"LogicalDisk"},{"armName":"counter6","counterName":"Disk Reads/sec","instanceName":"*","intervalSeconds":10,"objectName":"LogicalDisk"},{"armName":"counter7","counterName":"Disk Transfers/sec","instanceName":"*","intervalSeconds":10,"objectName":"LogicalDisk"},{"armName":"counter8","counterName":"Disk Write Bytes/sec","instanceName":"*","intervalSeconds":10,"objectName":"LogicalDisk"},{"armName":"counter9","counterName":"Disk Writes/sec","instanceName":"*","intervalSeconds":10,"objectName":"LogicalDisk"},{"armName":"counter10","counterName":"Free Megabytes","instanceName":"*","intervalSeconds":10,"objectName":"LogicalDisk"},{"armName":"counter11","counterName":"Available MBytes","instanceName":"*","intervalSeconds":10,"objectName":"Memory"},{"armName":"counter12","counterName":"Bytes Received/sec","instanceName":"*","intervalSeconds":10,"objectName":"Network Adapter"},{"armName":"counter13","counterName":"Bytes Sent/sec","instanceName":"*","intervalSeconds":10,"objectName":"Network Adapter"},{"armName":"counter14","counterName":"% Processor Time","instanceName":"*","intervalSeconds":10,"objectName":"Processor"}]}}}}},"deploymentScope":"resourceGroup","existenceCondition":{"allOf":[{"field":"name","like":"[parameters(''workspaceName'')]"},{"equals":"[parameters(''workspaceRegion'')]","field":"location"}]},"existenceScope":"Subscription","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.OperationalInsights/workspaces"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Log-Analytics"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Log-Analytics
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys Log Analytics and Automation account to the subscription where the policy is assigned.
          display_name: Deploy the Log Analytics in the subscription
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: All
          name: Deploy-Log-Analytics
          parameters: '{"automationAccountName":{"metadata":{"description":"Provide name for automation account","displayName":"automationAccountName"},"type":"String"},"automationRegion":{"metadata":{"description":"Select Azure region for Automation account","displayName":"automationRegion"},"type":"String"},"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"retentionInDays":{"defaultValue":"30","metadata":{"description":"Select data retention (days) for Log Analytics.","displayName":"Data retention"},"type":"String"},"rgName":{"metadata":{"description":"Provide name for resource group.","displayName":"rgName"},"type":"String"},"workspaceName":{"metadata":{"description":"Provide name for log analytics workspace","displayName":"workspaceName"},"type":"String"},"workspaceRegion":{"metadata":{"description":"Select Azure region for Log Analytics","displayName":"workspaceRegion"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"Incremental","parameters":{"automationAccountName":{"value":"[parameters(''automationAccountName'')]"},"automationRegion":{"value":"[parameters(''automationRegion'')]"},"retentionInDays":{"value":"[parameters(''retentionInDays'')]"},"rgName":{"value":"[parameters(''rgName'')]"},"workspaceName":{"value":"[parameters(''workspaceName'')]"},"workspaceRegion":{"value":"[parameters(''workspaceRegion'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json","contentVersion":"1.0.0.0","outputs":{},"parameters":{"automationAccountName":{"type":"String"},"automationRegion":{"type":"String"},"retentionInDays":{"type":"String"},"rgName":{"type":"String"},"workspaceName":{"type":"String"},"workspaceRegion":{"type":"String"}},"resources":[{"apiVersion":"2018-05-01","location":"[deployment().location]","name":"[parameters(''rgName'')]","properties":{},"type":"Microsoft.Resources/resourceGroups"},{"apiVersion":"2018-05-01","dependsOn":["[resourceId(''Microsoft.Resources/resourceGroups/'', parameters(''rgName''))]"],"name":"log-analytics","properties":{"mode":"Incremental","template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json","contentVersion":"1.0.0.0","outputs":{},"parameters":{},"resources":[{"apiVersion":"2015-10-31","comments":"Automation account for ","location":"[parameters(''AutomationRegion'')]","name":"[parameters(''AutomationAccountName'')]","properties":{"sku":{"name":"Basic"}},"type":"Microsoft.Automation/automationAccounts"},{"apiVersion":"2020-08-01","location":"[parameters(''workspaceRegion'')]","name":"[parameters(''workspaceName'')]","properties":{"enableLogAccessUsingOnlyResourcePermissions":true,"retentionInDays":"[int(parameters(''retentionInDays''))]","sku":{"name":"PerGB2018"}},"resources":[{"apiVersion":"2020-08-01","dependsOn":["[resourceId(''Microsoft.OperationalInsights/workspaces/'', parameters(''workspaceName''))]","[resourceId(''Microsoft.Automation/automationAccounts/'', parameters(''AutomationAccountName''))]"],"name":"Automation","properties":{"resourceId":"[concat(subscription().id, ''/resourceGroups/'', parameters(''rgName''), ''/providers/Microsoft.Automation/automationAccounts/'', parameters(''AutomationAccountName''))]"},"type":"linkedServices"}],"type":"Microsoft.OperationalInsights/workspaces"}],"variables":{}}},"resourceGroup":"[parameters(''rgName'')]","type":"Microsoft.Resources/deployments"}],"variables":{}}}},"deploymentScope":"Subscription","existenceCondition":{"allOf":[{"field":"name","like":"[parameters(''workspaceName'')]"}]},"existenceScope":"Subscription","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.OperationalInsights/workspaces"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-MySQL-sslEnforcement"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-MySQL-sslEnforcement
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy a specific min TLS version requirement and enforce SSL on Azure Database for MySQL server. Enforce the Server to client applications using minimum version of Tls to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.
          display_name: Azure Database for MySQL server deploy a specific min TLS version and enforce SSL.
          management_group_name: myorg-1
          metadata: '{"category":"SQL","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-MySQL-sslEnforcement
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy minimum TLS version Azure Database for MySQL server","displayName":"Effect minimum TLS version Azure Database for MySQL server"},"type":"String"},"minimalTlsVersion":{"allowedValues":["TLS1_2","TLS1_0","TLS1_1","TLSEnforcementDisabled"],"defaultValue":"TLS1_2","metadata":{"description":"Select version  minimum TLS version Azure Database for MySQL server to enforce","displayName":"Select version minimum TLS for MySQL server"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.DBforMySQL/servers","field":"type"},{"anyOf":[{"field":"Microsoft.DBforMySQL/servers/sslEnforcement","notEquals":"Enabled"},{"field":"Microsoft.DBforMySQL/servers/minimalTlsVersion","notequals":"[parameters(''minimalTlsVersion'')]"}]}]},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"minimalTlsVersion":{"value":"[parameters(''minimalTlsVersion'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"minimalTlsVersion":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-12-01","location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''))]","properties":{"minimalTlsVersion":"[parameters(''minimalTlsVersion'')]","sslEnforcement":"[if(equals(parameters(''minimalTlsVersion''), ''TLSEnforcementDisabled''),''Disabled'', ''Enabled'')]"},"type":"Microsoft.DBforMySQL/servers"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"Enabled","field":"Microsoft.DBforMySQL/servers/sslEnforcement"},{"equals":"[parameters(''minimalTlsVersion'')]","field":"Microsoft.DBforMySQL/servers/minimalTlsVersion"}]},"roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/8e3af657-a8ff-443c-a75c-2fe8c4bcb635"],"type":"Microsoft.DBforMySQL/servers"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys NSG flow logs and traffic analytics to a storageaccountid with a specfied retention period.
          display_name: Deploys NSG flow logs and traffic analytics
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Nsg-FlowLogs
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"flowAnalyticsEnabled":{"defaultValue":false,"metadata":{"displayName":"Enable Traffic Analytics"},"type":"Boolean"},"logAnalytics":{"defaultValue":"","metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Resource ID of Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"retention":{"defaultValue":5,"metadata":{"displayName":"Retention"},"type":"Integer"},"storageAccountResourceId":{"metadata":{"displayName":"Storage Account Resource Id","strongType":"Microsoft.Storage/storageAccounts"},"type":"String"},"trafficAnalyticsInterval":{"defaultValue":60,"metadata":{"displayName":"Traffic Analytics processing interval mins (10/60)"},"type":"Integer"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Network/networkSecurityGroups","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"flowAnalyticsEnabled":{"value":"[parameters(''flowAnalyticsEnabled'')]"},"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"networkSecurityGroupName":{"value":"[field(''name'')]"},"resourceGroupName":{"value":"[resourceGroup().name]"},"retention":{"value":"[parameters(''retention'')]"},"storageAccountResourceId":{"value":"[parameters(''storageAccountResourceId'')]"},"trafficAnalyticsInterval":{"value":"[parameters(''trafficAnalyticsInterval'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"flowAnalyticsEnabled":{"type":"bool"},"location":{"type":"String"},"logAnalytics":{"type":"String"},"networkSecurityGroupName":{"type":"String"},"resourceGroupName":{"type":"String"},"retention":{"type":"int"},"storageAccountResourceId":{"type":"String"},"trafficAnalyticsInterval":{"type":"int"}},"resources":[{"apiVersion":"2020-05-01","location":"[parameters(''location'')]","name":"[take(concat(''NetworkWatcher_'', toLower(parameters(''location'')),  ''/'', parameters(''networkSecurityGroupName''), ''-'', parameters(''resourceGroupName''), ''-flowlog'' ), 80)]","properties":{"enabled":true,"flowAnalyticsConfiguration":{"networkWatcherFlowAnalyticsConfiguration":{"enabled":"[bool(parameters(''flowAnalyticsEnabled''))]","trafficAnalyticsInterval":"[parameters(''trafficAnalyticsInterval'')]","workspaceId":"[if(not(empty(parameters(''logAnalytics''))), reference(parameters(''logAnalytics''), ''2020-03-01-preview'', ''Full'').properties.customerId, json(''null'')) ]","workspaceRegion":"[if(not(empty(parameters(''logAnalytics''))), reference(parameters(''logAnalytics''), ''2020-03-01-preview'', ''Full'').location, json(''null'')) ]","workspaceResourceId":"[if(not(empty(parameters(''logAnalytics''))), parameters(''logAnalytics''), json(''null''))]"}},"format":{"type":"JSON","version":2},"retentionPolicy":{"days":"[parameters(''retention'')]","enabled":true},"storageId":"[parameters(''storageAccountResourceId'')]","targetResourceId":"[resourceId(parameters(''resourceGroupName''), ''Microsoft.Network/networkSecurityGroups'', parameters(''networkSecurityGroupName''))]"},"type":"Microsoft.Network/networkWatchers/flowLogs"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Network/networkWatchers/flowLogs/enabled"},{"equals":"[parameters(''flowAnalyticsEnabled'')]","field":"Microsoft.Network/networkWatchers/flowLogs/flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.enabled"}]},"resourceGroupName":"NetworkWatcherRG","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Network/networkWatchers/flowLogs"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs-to-LA"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs-to-LA
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys NSG flow logs and traffic analytics to Log Analytics with a specfied retention period.
          display_name: Deploys NSG flow logs and traffic analytics to Log Analytics
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.1.0"}'
          mode: Indexed
          name: Deploy-Nsg-FlowLogs-to-LA
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"interval":{"defaultValue":60,"metadata":{"displayName":"Traffic Analytics processing interval mins (10/60)"},"type":"Integer"},"retention":{"defaultValue":5,"metadata":{"displayName":"Retention"},"type":"Integer"},"workspace":{"defaultValue":"","metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Resource ID of Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Network/networkSecurityGroups","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"Incremental","parameters":{"interval":{"value":"[parameters(''interval'')]"},"location":{"value":"[field(''location'')]"},"networkSecurityGroup":{"value":"[field(''id'')]"},"retention":{"value":"[parameters(''retention'')]"},"workspace":{"value":"[parameters(''workspace'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"interval":{"type":"int"},"location":{"type":"String"},"networkSecurityGroup":{"type":"String"},"retention":{"type":"int"},"time":{"defaultValue":"[utcNow()]","type":"String"},"workspace":{"type":"String"}},"resources":[{"apiVersion":"2019-10-01","name":"[concat(variables(''resourceGroupName''), ''.'', variables(''securityGroupName''))]","properties":{"mode":"Incremental","template":{"$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","resources":[{"apiVersion":"2019-06-01","kind":"StorageV2","location":"[parameters(''location'')]","name":"[variables(''storageAccountName'')]","properties":{},"sku":{"name":"Standard_LRS","tier":"Standard"},"type":"Microsoft.Storage/storageAccounts"}]}},"resourceGroup":"[variables(''resourceGroupName'')]","type":"Microsoft.Resources/deployments"},{"apiVersion":"2019-10-01","dependsOn":["[concat(variables(''resourceGroupName''), ''.'', variables(''securityGroupName''))]"],"name":"[concat(''NetworkWatcherRG'', ''.'', variables(''securityGroupName''))]","properties":{"mode":"Incremental","template":{"$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","resources":[{"apiVersion":"2020-05-01","location":"[parameters(''location'')]","name":"[concat(''NetworkWatcher_'', toLower(parameters(''location'')))]","properties":{},"resources":[{"apiVersion":"2019-11-01","dependsOn":["[concat(''NetworkWatcher_'', toLower(parameters(''location'')))]"],"location":"[parameters(''location'')]","name":"[concat(variables(''securityGroupName''), ''-Network-flowlog'')]","properties":{"enabled":true,"flowAnalyticsConfiguration":{"networkWatcherFlowAnalyticsConfiguration":{"enabled":true,"trafficAnalyticsInterval":"[parameters(''interval'')]","workspaceResourceId":"[parameters(''workspace'')]"}},"format":{"type":"JSON","version":2},"retentionPolicy":{"days":"[parameters(''retention'')]","enabled":true},"storageId":"[concat(subscription().id, ''/resourceGroups/'', variables(''resourceGroupName''), ''/providers/Microsoft.Storage/storageAccounts/'', variables(''storageAccountName''))]","targetResourceId":"[parameters(''networkSecurityGroup'')]"},"type":"flowLogs"}],"type":"Microsoft.Network/networkWatchers"}]}},"resourceGroup":"NetworkWatcherRG","type":"Microsoft.Resources/deployments"}],"variables":{"resourceGroupName":"[split(parameters(''networkSecurityGroup''), ''/'')[4]]","securityGroupName":"[split(parameters(''networkSecurityGroup''), ''/'')[8]]","storageAccountName":"[concat(''es'', uniqueString(variables(''securityGroupName''), parameters(''time'')))]"}}}},"deploymentScope":"subscription","existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Network/networkWatchers/flowLogs/enabled"}]},"existenceScope":"resourceGroup","name":"[if(empty(coalesce(field(''Microsoft.Network/networkSecurityGroups/flowLogs[*].id''))), ''null/null'', concat(split(first(field(''Microsoft.Network/networkSecurityGroups/flowLogs[*].id'')), ''/'')[8], ''/'', split(first(field(''Microsoft.Network/networkSecurityGroups/flowLogs[*].id'')), ''/'')[10]))]","resourceGroupName":"[if(empty(coalesce(field(''Microsoft.Network/networkSecurityGroups/flowLogs''))), ''NetworkWatcherRG'', split(first(field(''Microsoft.Network/networkSecurityGroups/flowLogs[*].id'')), ''/'')[4])]","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7","/providers/Microsoft.Authorization/roleDefinitions/81a9662b-bebf-436f-a333-f67b29880f12","/providers/Microsoft.Authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293","/providers/Microsoft.Authorization/roleDefinitions/17d1049b-9a84-46fb-8f53-869881c3d3ab","/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"],"type":"Microsoft.Network/networkWatchers/flowlogs"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-PostgreSQL-sslEnforcement"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-PostgreSQL-sslEnforcement
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy a specific min TLS version requirement and enforce SSL on Azure Database for PostgreSQL server. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.
          display_name: 'Azure Database for PostgreSQL server deploy a specific min TLS version requirement and enforce SSL '
          management_group_name: myorg-1
          metadata: '{"category":"SQL","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-PostgreSQL-sslEnforcement
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy minimum TLS version Azure Database for PostgreSQL server","displayName":"Effect Azure Database for PostgreSQL server"},"type":"String"},"minimalTlsVersion":{"allowedValues":["TLS1_2","TLS1_0","TLS1_1","TLSEnforcementDisabled"],"defaultValue":"TLS1_2","metadata":{"description":"Select version minimum TLS version Azure Database for PostgreSQL server to enforce","displayName":"Select version for PostgreSQL server"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.DBforPostgreSQL/servers","field":"type"},{"anyOf":[{"field":"Microsoft.DBforPostgreSQL/servers/sslEnforcement","notEquals":"Enabled"},{"field":"Microsoft.DBforPostgreSQL/servers/minimalTlsVersion","notEquals":"[parameters(''minimalTlsVersion'')]"}]}]},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"minimalTlsVersion":{"value":"[parameters(''minimalTlsVersion'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"minimalTlsVersion":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-12-01","location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''))]","properties":{"minimalTlsVersion":"[parameters(''minimalTlsVersion'')]","sslEnforcement":"[if(equals(parameters(''minimalTlsVersion''), ''TLSEnforcementDisabled''),''Disabled'', ''Enabled'')]"},"type":"Microsoft.DBforPostgreSQL/servers"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"Enabled","field":"Microsoft.DBforPostgreSQL/servers/sslEnforcement"},{"equals":"[parameters(''minimalTlsVersion'')]","field":"Microsoft.DBforPostgreSQL/servers/minimalTlsVersion"}]},"name":"current","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/8e3af657-a8ff-443c-a75c-2fe8c4bcb635"],"type":"Microsoft.DBforPostgreSQL/servers"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-SQL-minTLS"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-SQL-minTLS
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys a specific min TLS version requirement and enforce SSL on SQL servers. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.
          display_name: SQL servers deploys a specific min TLS version requirement.
          management_group_name: myorg-1
          metadata: '{"category":"SQL","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-SQL-minTLS
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy minimum TLS version SQL servers","displayName":"Effect SQL servers"},"type":"String"},"minimalTlsVersion":{"allowedValues":["1.2","1.1","1.0"],"defaultValue":"1.2","metadata":{"description":"Select version minimum TLS version SQL servers to enforce","displayName":"Select version for SQL server"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Sql/servers","field":"type"},{"field":"Microsoft.Sql/servers/minimalTlsVersion","notequals":"[parameters(''minimalTlsVersion'')]"}]},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"minimalTlsVersion":{"value":"[parameters(''minimalTlsVersion'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"minimalTlsVersion":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2019-06-01-preview","location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''))]","properties":{"minimalTlsVersion":"[parameters(''minimalTlsVersion'')]"},"type":"Microsoft.Sql/servers"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"[parameters(''minimalTlsVersion'')]","field":"Microsoft.Sql/servers/minimalTlsVersion"}]},"name":"current","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/8e3af657-a8ff-443c-a75c-2fe8c4bcb635"],"type":"Microsoft.Sql/servers"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-AuditingSettings"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-AuditingSettings
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy auditing settings to SQL Database when it not exist in the deployment
          display_name: Deploy SQL database auditing settings
          management_group_name: myorg-1
          metadata: '{"category":"SQL","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Sql-AuditingSettings
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Sql/servers/databases","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"sqlServerDataBaseName":{"value":"[field(''name'')]"},"sqlServerName":{"value":"[first(split(field(''fullname''),''/''))]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"sqlServerDataBaseName":{"type":"String"},"sqlServerName":{"type":"String"}},"resources":[{"apiVersion":"2017-03-01-preview","name":"[concat( parameters(''sqlServerName''),''/'',parameters(''sqlServerDataBaseName''),''/default'')]","properties":{"auditActionsAndGroups":["BATCH_COMPLETED_GROUP","DATABASE_OBJECT_CHANGE_GROUP","SCHEMA_OBJECT_CHANGE_GROUP","BACKUP_RESTORE_GROUP","APPLICATION_ROLE_CHANGE_PASSWORD_GROUP","DATABASE_PRINCIPAL_CHANGE_GROUP","DATABASE_PRINCIPAL_IMPERSONATION_GROUP","DATABASE_ROLE_MEMBER_CHANGE_GROUP","USER_CHANGE_PASSWORD_GROUP","DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP","DATABASE_OBJECT_PERMISSION_CHANGE_GROUP","DATABASE_PERMISSION_CHANGE_GROUP","SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP","SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP","FAILED_DATABASE_AUTHENTICATION_GROUP"],"isAzureMonitorTargetEnabled":true,"state":"enabled"},"type":"Microsoft.Sql/servers/databases/auditingSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"enabled","field":"Microsoft.Sql/servers/databases/auditingSettings/state"},{"equals":"true","field":"Microsoft.Sql/servers/databases/auditingSettings/isAzureMonitorTargetEnabled"}]},"name":"default","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/056cd41c-7e88-42e1-933e-88ba6a50c9c3"],"type":"Microsoft.Sql/servers/databases/auditingSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-SecurityAlertPolicies"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-SecurityAlertPolicies
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy the security Alert Policies configuration with email admin accounts when it not exist in current configuration
          display_name: Deploy SQL Database security Alert Policies configuration with email admin accounts
          management_group_name: myorg-1
          metadata: '{"category":"SQL","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Sql-SecurityAlertPolicies
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Sql/servers/databases","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"sqlServerDataBaseName":{"value":"[field(''name'')]"},"sqlServerName":{"value":"[first(split(field(''fullname''),''/''))]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"sqlServerDataBaseName":{"type":"String"},"sqlServerName":{"type":"String"}},"resources":[{"apiVersion":"2018-06-01-preview","name":"[concat(parameters(''sqlServerName''),''/'',parameters(''sqlServerDataBaseName''),''/default'')]","properties":{"disabledAlerts":[""],"emailAccountAdmins":true,"emailAddresses":["admin@contoso.com"],"retentionDays":0,"state":"Enabled","storageAccountAccessKey":"","storageEndpoint":null},"type":"Microsoft.Sql/servers/databases/securityAlertPolicies"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"Enabled","field":"Microsoft.Sql/servers/databases/securityAlertPolicies/state"}]},"roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/056cd41c-7e88-42e1-933e-88ba6a50c9c3"],"type":"Microsoft.Sql/servers/databases/securityAlertPolicies"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-Tde"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-Tde
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy the Transparent Data Encryption when it is not enabled in the deployment
          display_name: 'Deploy SQL Database Transparent Data Encryption '
          management_group_name: myorg-1
          metadata: '{"category":"SQL","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Sql-Tde
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Sql/servers/databases","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"sqlServerDataBaseName":{"value":"[field(''name'')]"},"sqlServerName":{"value":"[first(split(field(''fullname''),''/''))]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"sqlServerDataBaseName":{"type":"String"},"sqlServerName":{"type":"String"}},"resources":[{"apiVersion":"2014-04-01","name":"[concat( parameters(''sqlServerName''),''/'',parameters(''sqlServerDataBaseName''),''/current'')]","properties":{"status":"Enabled"},"type":"Microsoft.Sql/servers/databases/transparentDataEncryption"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"Enabled","field":"Microsoft.Sql/transparentDataEncryption.status"}]},"roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/056cd41c-7e88-42e1-933e-88ba6a50c9c3"],"type":"Microsoft.Sql/servers/databases/transparentDataEncryption"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-vulnerabilityAssessments"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-vulnerabilityAssessments
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy SQL Database vulnerability Assessments when it not exist in the deployment. To the specific  storage account in the parameters
          display_name: Deploy SQL Database vulnerability Assessments
          management_group_name: myorg-1
          metadata: '{"category":"SQL","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Sql-vulnerabilityAssessments
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"vulnerabilityAssessmentsEmail":{"metadata":{"description":"The email address to send alerts","displayName":"The email address to send alerts"},"type":"String"},"vulnerabilityAssessmentsStorageID":{"metadata":{"description":"The storage account ID to store assessments","displayName":"The storage account ID to store assessments"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Sql/servers/databases","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"sqlServerDataBaseName":{"value":"[field(''name'')]"},"sqlServerName":{"value":"[first(split(field(''fullname''),''/''))]"},"vulnerabilityAssessmentsEmail":{"value":"[parameters(''vulnerabilityAssessmentsEmail'')]"},"vulnerabilityAssessmentsStorageID":{"value":"[parameters(''vulnerabilityAssessmentsStorageID'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"sqlServerDataBaseName":{"type":"String"},"sqlServerName":{"type":"String"},"vulnerabilityAssessmentsEmail":{"type":"String"},"vulnerabilityAssessmentsStorageID":{"type":"String"}},"resources":[{"apiVersion":"2017-03-01-preview","name":"[concat(parameters(''sqlServerName''),''/'',parameters(''sqlServerDataBaseName''),''/default'')]","properties":{"recurringScans":{"emailSubscriptionAdmins":false,"emails":["[parameters(''vulnerabilityAssessmentsEmail'')]"],"isEnabled":true},"storageAccountAccessKey":"[listkeys(parameters(''vulnerabilityAssessmentsStorageID''), providers(''Microsoft.Storage'', ''storageAccounts'').apiVersions[0]).keys[0].value]","storageContainerPath":"[concat(''https://'', last( split(parameters(''vulnerabilityAssessmentsStorageID'') ,  ''/'') ) , ''.blob.core.windows.net/vulneraabilitylogs'')]"},"type":"Microsoft.Sql/servers/databases/vulnerabilityAssessments"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"[parameters(''vulnerabilityAssessmentsEmail'')]","field":"Microsoft.Sql/servers/databases/vulnerabilityAssessments/recurringScans.emails"},{"equals":true,"field":"Microsoft.Sql/servers/databases/vulnerabilityAssessments/recurringScans.isEnabled"}]},"roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/056cd41c-7e88-42e1-933e-88ba6a50c9c3","/providers/Microsoft.Authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa"],"type":"Microsoft.Sql/servers/databases/vulnerabilityAssessments"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-SqlMi-minTLS"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-SqlMi-minTLS
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy a specific min TLS version requirement and enforce SSL on SQL managed instances. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.
          display_name: SQL managed instances deploy a specific min TLS version requirement.
          management_group_name: myorg-1
          metadata: '{"category":"SQL","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-SqlMi-minTLS
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy minimum TLS version SQL servers","displayName":"Effect SQL servers"},"type":"String"},"minimalTlsVersion":{"allowedValues":["1.2","1.1","1.0"],"defaultValue":"1.2","metadata":{"description":"Select version minimum TLS version SQL servers to enforce","displayName":"Select version for SQL server"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Sql/managedInstances","field":"type"},{"field":"Microsoft.Sql/managedInstances/minimalTlsVersion","notequals":"[parameters(''minimalTlsVersion'')]"}]},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"minimalTlsVersion":{"value":"[parameters(''minimalTlsVersion'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"minimalTlsVersion":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2020-02-02-preview","location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''))]","properties":{"minimalTlsVersion":"[parameters(''minimalTlsVersion'')]"},"type":"Microsoft.Sql/managedInstances"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"[parameters(''minimalTlsVersion'')]","field":"Microsoft.Sql/managedInstances/minimalTlsVersion"}]},"name":"current","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/8e3af657-a8ff-443c-a75c-2fe8c4bcb635"],"type":"Microsoft.Sql/managedInstances"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Storage-sslEnforcement"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Storage-sslEnforcement
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy a specific min TLS version requirement and enforce SSL on Azure STorage. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.
          display_name: 'Azure Storage deploy a specific min TLS version requirement and enforce SSL/HTTPS '
          management_group_name: myorg-1
          metadata: '{"category":"Storage","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Storage-sslEnforcement
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy minimum TLS version Azure STorage","displayName":"Effect Azure STorage"},"type":"String"},"minimumTlsVersion":{"allowedValues":["TLS1_2","TLS1_1","TLS1_0"],"defaultValue":"TLS1_2","metadata":{"description":"Select version minimum TLS version Azure STorage to enforce","displayName":"Select version for PostgreSQL server"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Storage/storageAccounts","field":"type"},{"anyOf":[{"field":"Microsoft.Storage/storageAccounts/supportsHttpsTrafficOnly","notEquals":"true"},{"field":"Microsoft.Storage/storageAccounts/minimumTlsVersion","notEquals":"[parameters(''minimumTlsVersion'')]"}]}]},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"minimumTlsVersion":{"value":"[parameters(''minimumTlsVersion'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"minimumTlsVersion":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2019-06-01","location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''))]","properties":{"minimumTlsVersion":"[parameters(''minimumTlsVersion'')]","supportsHttpsTrafficOnly":true},"type":"Microsoft.Storage/storageAccounts"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Storage/storageAccounts/supportsHttpsTrafficOnly"},{"equals":"[parameters(''minimumTlsVersion'')]","field":"Microsoft.Storage/storageAccounts/minimumTlsVersion"},{"equals":"false","field":"Microsoft.Storage/storageAccounts/supportsHttpsTrafficOnly"}]},"name":"current","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/8e3af657-a8ff-443c-a75c-2fe8c4bcb635"],"type":"Microsoft.DBforPostgreSQL/servers"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-VNET-HubSpoke"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-VNET-HubSpoke
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy deploys virtual network and peer to the hub
          display_name: Deploys virtual network peering to hub
          management_group_name: myorg-1
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: All
          name: Deploy-VNET-HubSpoke
          parameters: '{"hubResourceId":{"metadata":{"description":"Resource ID for the HUB vNet","displayName":"hubResourceId"},"type":"String"},"vNetCidrRange":{"metadata":{"description":"CIDR Range for the vNet","displayName":"vNetCidrRange"},"type":"String"},"vNetLocation":{"metadata":{"description":"Location for the vNet","displayName":"vNetLocation"},"type":"String"},"vNetName":{"metadata":{"description":"Name of the landing zone vNet","displayName":"vNetName"},"type":"String"},"vNetRgName":{"metadata":{"description":"Name of the landing zone vNet RG","displayName":"vNetRgName"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"ResourceGroupName":"[parameters(''vNetRgName'')]","deployment":{"location":"northeurope","properties":{"mode":"Incremental","parameters":{"hubResourceId":{"value":"[parameters(''hubResourceId'')]"},"vNetCidrRange":{"value":"[parameters(''vNetCidrRange'')]"},"vNetLocation":{"value":"[parameters(''vNetLocation'')]"},"vNetName":{"value":"[parameters(''vNetName'')]"},"vNetRgName":{"value":"[parameters(''vNetRgName'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json","contentVersion":"1.0.0.0","outputs":{},"parameters":{"hubResourceId":{"type":"String"},"vNetCidrRange":{"type":"String"},"vNetLocation":{"type":"String"},"vNetName":{"type":"String"},"vNetPeerUseRemoteGateway":{"defaultValue":false,"type":"bool"},"vNetRgName":{"type":"String"}},"resources":[{"apiVersion":"2020-06-01","dependsOn":[],"location":"[parameters(''vNetLocation'')]","name":"[concat(''es-lz-vnet-'',substring(uniqueString(subscription().id),0,6),''-rg'')]","properties":{"mode":"Incremental","template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{},"resources":[{"apiVersion":"2020-06-01","location":"[parameters(''vNetLocation'')]","name":"[parameters(''vNetRgName'')]","properties":{},"type":"Microsoft.Resources/resourceGroups"},{"apiVersion":"2020-06-01","location":"[parameters(''vNetLocation'')]","name":"NetworkWatcherRG","properties":{},"type":"Microsoft.Resources/resourceGroups"}],"variables":{}}},"type":"Microsoft.Resources/deployments"},{"apiVersion":"2020-06-01","dependsOn":["[concat(''es-lz-vnet-'',substring(uniqueString(subscription().id),0,6),''-rg'')]"],"name":"[concat(''es-lz-vnet-'',substring(uniqueString(subscription().id),0,6))]","properties":{"mode":"Incremental","template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{},"resources":[{"apiVersion":"2020-06-01","dependsOn":[],"location":"[parameters(''vNetLocation'')]","name":"[parameters(''vNetName'')]","properties":{"addressSpace":{"addressPrefixes":["[parameters(''vNetCidrRange'')]"]}},"type":"Microsoft.Network/virtualNetworks"},{"apiVersion":"2020-05-01","dependsOn":["[parameters(''vNetName'')]"],"name":"[concat(parameters(''vNetName''), ''/peerToHub'')]","properties":{"allowForwardedTraffic":true,"allowGatewayTransit":true,"allowVirtualNetworkAccess":true,"remoteVirtualNetwork":{"id":"[parameters(''hubResourceId'')]"},"useRemoteGateways":"[parameters(''vNetPeerUseRemoteGateway'')]"},"type":"Microsoft.Network/virtualNetworks/virtualNetworkPeerings"},{"apiVersion":"2020-06-01","dependsOn":["[parameters(''vNetName'')]"],"name":"[concat(''es-lz-hub-'',substring(uniqueString(subscription().id),0,6),''-peering'')]","properties":{"expressionEvaluationOptions":{"scope":"inner"},"mode":"Incremental","parameters":{"hubName":{"value":"[split(parameters(''hubResourceId''),''/'')[8]]"},"remoteVirtualNetwork":{"value":"[concat(subscription().id,''/resourceGroups/'',parameters(''vNetRgName''), ''/providers/'',''Microsoft.Network/virtualNetworks/'', parameters(''vNetName''))]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"hubName":{"defaultValue":false,"type":"String"},"remoteVirtualNetwork":{"defaultValue":false,"type":"String"}},"resources":[{"apiVersion":"2020-05-01","name":"[[concat(parameters(''hubName''),''/'',last(split(parameters(''remoteVirtualNetwork''),''/'')))]","properties":{"allowForwardedTraffic":true,"allowGatewayTransit":true,"allowVirtualNetworkAccess":true,"remoteVirtualNetwork":{"id":"[[parameters(''remoteVirtualNetwork'')]"},"useRemoteGateways":false},"type":"Microsoft.Network/virtualNetworks/virtualNetworkPeerings"}],"variables":{}}},"resourceGroup":"[split(parameters(''hubResourceId''),''/'')[4]]","subscriptionId":"[split(parameters(''hubResourceId''),''/'')[2]]","type":"Microsoft.Resources/deployments"}],"variables":{}}},"resourceGroup":"[parameters(''vNetRgName'')]","type":"Microsoft.Resources/deployments"}],"variables":{}}}},"deploymentScope":"Subscription","existenceCondition":{"allOf":[{"field":"name","like":"[parameters(''vNetName'')]"},{"equals":"[parameters(''vNetLocation'')]","field":"location"}]},"existenceScope":"ResourceGroup","name":"[parameters(''vNetName'')]","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"],"type":"Microsoft.Network/virtualNetworks"},"effect":"deployIfNotExists"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Windows-DomainJoin"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Windows-DomainJoin
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy Windows Domain Join Extension with keyvault configuration when the extension does not exist on a given windows Virtual Machine
          display_name: Deploy Windows Domain Join Extension with keyvault configuration
          management_group_name: myorg-1
          metadata: '{"category":"Guest Configuration","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Windows-DomainJoin
          parameters: '{"domainFQDN":{"metadata":{"displayName":"domainFQDN"},"type":"String"},"domainOUPath":{"metadata":{"displayName":"domainOUPath"},"type":"String"},"domainPassword":{"metadata":{"displayName":"domainPassword"},"type":"String"},"domainUsername":{"metadata":{"displayName":"domainUsername"},"type":"String"},"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"keyVaultResourceId":{"metadata":{"displayName":"keyVaultResourceId"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Compute/virtualMachines","field":"type"},{"equals":"MicrosoftWindowsServer","field":"Microsoft.Compute/imagePublisher"},{"equals":"WindowsServer","field":"Microsoft.Compute/imageOffer"},{"field":"Microsoft.Compute/imageSKU","in":["2008-R2-SP1","2008-R2-SP1-smalldisk","2008-R2-SP1-zhcn","2012-Datacenter","2012-datacenter-gensecond","2012-Datacenter-smalldisk","2012-datacenter-smalldisk-g2","2012-Datacenter-zhcn","2012-datacenter-zhcn-g2","2012-R2-Datacenter","2012-r2-datacenter-gensecond","2012-R2-Datacenter-smalldisk","2012-r2-datacenter-smalldisk-g2","2012-R2-Datacenter-zhcn","2012-r2-datacenter-zhcn-g2","2016-Datacenter","2016-datacenter-gensecond","2016-datacenter-gs","2016-Datacenter-Server-Core","2016-datacenter-server-core-g2","2016-Datacenter-Server-Core-smalldisk","2016-datacenter-server-core-smalldisk-g2","2016-Datacenter-smalldisk","2016-datacenter-smalldisk-g2","2016-Datacenter-with-Containers","2016-datacenter-with-containers-g2","2016-Datacenter-with-RDSH","2016-Datacenter-zhcn","2016-datacenter-zhcn-g2","2019-Datacenter","2019-Datacenter-Core","2019-datacenter-core-g2","2019-Datacenter-Core-smalldisk","2019-datacenter-core-smalldisk-g2","2019-Datacenter-Core-with-Containers","2019-datacenter-core-with-containers-g2","2019-Datacenter-Core-with-Containers-smalldisk","2019-datacenter-core-with-containers-smalldisk-g2","2019-datacenter-gensecond","2019-datacenter-gs","2019-Datacenter-smalldisk","2019-datacenter-smalldisk-g2","2019-Datacenter-with-Containers","2019-datacenter-with-containers-g2","2019-Datacenter-with-Containers-smalldisk","2019-datacenter-with-containers-smalldisk-g2","2019-Datacenter-zhcn","2019-datacenter-zhcn-g2","Datacenter-Core-1803-with-Containers-smalldisk","datacenter-core-1803-with-containers-smalldisk-g2","Datacenter-Core-1809-with-Containers-smalldisk","datacenter-core-1809-with-containers-smalldisk-g2","Datacenter-Core-1903-with-Containers-smalldisk","datacenter-core-1903-with-containers-smalldisk-g2","datacenter-core-1909-with-containers-smalldisk","datacenter-core-1909-with-containers-smalldisk-g1","datacenter-core-1909-with-containers-smalldisk-g2"]}]},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"domainFQDN":{"value":"[parameters(''domainFQDN'')]"},"domainOUPath":{"value":"[parameters(''domainOUPath'')]"},"domainPassword":{"reference":{"keyVault":{"id":"[parameters(''keyVaultResourceId'')]"},"secretName":"[parameters(''domainPassword'')]"}},"domainUsername":{"reference":{"keyVault":{"id":"[parameters(''keyVaultResourceId'')]"},"secretName":"[parameters(''domainUsername'')]"}},"keyVaultResourceId":{"value":"[parameters(''keyVaultResourceId'')]"},"location":{"value":"[field(''location'')]"},"vmName":{"value":"[field(''name'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"domainFQDN":{"type":"String"},"domainOUPath":{"type":"String"},"domainPassword":{"type":"securestring"},"domainUsername":{"type":"String"},"keyVaultResourceId":{"type":"String"},"location":{"type":"String"},"vmName":{"type":"String"}},"resources":[{"apiVersion":"2015-06-15","location":"[resourceGroup().location]","name":"[concat(variables(''vmName''),''/joindomain'')]","properties":{"autoUpgradeMinorVersion":true,"protectedSettings":{"Password":"[parameters(''domainPassword'')]"},"publisher":"Microsoft.Compute","settings":{"Name":"[parameters(''domainFQDN'')]","OUPath":"[parameters(''domainOUPath'')]","Options":"[variables(''domainJoinOptions'')]","Restart":"true","User":"[parameters(''domainUserName'')]"},"type":"JsonADDomainExtension","typeHandlerVersion":"1.3"},"type":"Microsoft.Compute/virtualMachines/extensions"}],"variables":{"domainJoinOptions":3,"vmName":"[parameters(''vmName'')]"}}}},"existenceCondition":{"allOf":[{"equals":"JsonADDomainExtension","field":"Microsoft.Compute/virtualMachines/extensions/type"},{"equals":"Microsoft.Compute","field":"Microsoft.Compute/virtualMachines/extensions/publisher"}]},"roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/9980e02c-c2be-4d73-94e8-173b1dc7cf3c"],"type":"Microsoft.Compute/virtualMachines/extensions"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-vHUB"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-vHUB
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: 'Deploy Virtual Hub network with Virtual Wan and Gateway and Firewall configured in the desired region. '
          display_name: Deploy Virtual Hub network with Virtual Wan and Gateway and Firewall configured.
          management_group_name: myorg-1
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: All
          name: Deploy-vHUB
          parameters: '{"azfw":{"defaultValue":{},"metadata":{"description":"Object describing the Azure Firewall in vHUB","displayName":"azfw"},"type":"Object"},"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"ergw":{"defaultValue":{},"metadata":{"description":"Object describing ExpressRoute gateway","displayName":"ergw"},"type":"Object"},"rgName":{"metadata":{"description":"Provide name for resource group.","displayName":"rgName"},"type":"String"},"vHUB":{"metadata":{"description":"Object describing Virtual WAN vHUB","displayName":"vHUB"},"type":"Object"},"vHubName":{"defaultValue":"","metadata":{"description":"Name of the vHUB","displayName":"vHubName"},"type":"String"},"vpngw":{"defaultValue":{},"metadata":{"description":"Object describing VPN gateway","displayName":"vpngw"},"type":"Object"},"vwanname":{"metadata":{"description":"Name of the Virtual WAN","displayName":"vwanname"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"Incremental","parameters":{"azfw":{"value":"[parameters(''azfw'')]"},"ergw":{"value":"[parameters(''ergw'')]"},"rgName":{"value":"[parameters(''rgName'')]"},"vHUB":{"value":"[parameters(''vHUB'')]"},"vHUBName":{"value":"[parameters(''vHUBName'')]"},"vpngw":{"value":"[parameters(''vpngw'')]"},"vwanname":{"value":"[parameters(''vwanname'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json","contentVersion":"1.0.0.0","parameters":{"azfw":{"defaultValue":{},"metadata":{"description":"Object describing the Azure Firewall in vHUB"},"type":"object"},"ergw":{"defaultValue":{},"metadata":{"description":"Object describing ExpressRoute gateway"},"type":"object"},"rgName":{"metadata":{"description":"Provide name for resource group.","displayName":"rgName"},"type":"String"},"vHUB":{"metadata":{"description":"Object describing Virtual WAN vHUB"},"type":"object"},"vHUBName":{"metadata":{"description":"Name of the vHUB","displayName":"vHUBName"},"type":"String"},"vpngw":{"defaultValue":{},"metadata":{"description":"Object describing VPN gateway"},"type":"object"},"vwanname":{"metadata":{"description":"Name of the Virtual WAN"},"type":"String"}},"resources":[{"apiVersion":"2018-05-01","location":"[deployment().location]","name":"[parameters(''rgName'')]","properties":{},"type":"Microsoft.Resources/resourceGroups"},{"apiVersion":"2018-05-01","dependsOn":["[resourceId(''Microsoft.Resources/resourceGroups/'', parameters(''rgName''))]"],"name":"[concat(''vHUBdeploy-'',parameters(''vHUB'').location)]","properties":{"mode":"Incremental","template":{"$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","parameters":{},"resources":[{"apiVersion":"2020-05-01","location":"[parameters(''vHUB'').location]","name":"[parameters(''vHUBname'')]","properties":{"addressPrefix":"[parameters(''vHUB'').addressPrefix]","sku":"[variables(''vhubsku'')]","virtualWan":{"id":"[variables(''vwanresourceid'')]"}},"type":"Microsoft.Network/virtualHubs"}],"variables":{}}},"resourceGroup":"[parameters(''rgName'')]","type":"Microsoft.Resources/deployments"},{"apiVersion":"2018-05-01","condition":"[greater(length(parameters(''vpngw'')),0)]","dependsOn":["[concat(''vHUBdeploy-'',parameters(''vHUB'').location)]"],"name":"[concat(parameters(''vHUBName''),''-vpngw'')]","properties":{"mode":"Incremental","template":{"$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","parameters":{},"resources":[{"apiVersion":"2020-05-01","location":"[parameters(''vHUB'').location]","name":"[parameters(''vpngw'').name]","properties":{"bgpSettings":"[parameters(''vpngw'').bgpSettings]","virtualHub":{"id":"[variables(''vwanhub'')]"},"vpnGatewayScaleUnit":"[parameters(''vpngw'').vpnGatewayScaleUnit]"},"type":"Microsoft.Network/vpnGateways"}],"variables":{}}},"resourceGroup":"[parameters(''rgName'')]","type":"Microsoft.Resources/deployments"},{"apiVersion":"2018-05-01","condition":"[greater(length(parameters(''ergw'')),0)]","dependsOn":["[concat(''vHUBdeploy-'',parameters(''vHUB'').location)]"],"name":"[concat(parameters(''vHUBName''),''-ergw'')]","properties":{"mode":"Incremental","template":{"$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","parameters":{},"resources":[{"apiVersion":"2020-05-01","location":"[parameters(''vHUB'').location]","name":"[parameters(''ergw'').name]","properties":{"autoScaleConfiguration":"[parameters(''ergw'').autoScaleConfiguration]","virtualHub":{"id":"[variables(''vwanhub'')]"}},"type":"Microsoft.Network/expressRouteGateways"}],"variables":{}}},"resourceGroup":"[parameters(''rgName'')]","type":"Microsoft.Resources/deployments"}],"variables":{"vhubsku":"Standard","vwanhub":"[concat(subscription().id,''/resourceGroups/'',parameters(''rgName''),''/providers/Microsoft.Network/virtualHubs/'',parameters(''vHUBName''))]","vwanresourceid":"[concat(subscription().id,''/resourceGroups/'',parameters(''rgName''),''/providers/Microsoft.Network/virtualWans/'',parameters(''vwanname''))]"}}}},"deploymentScope":"Subscription","existenceScope":"ResourceGroup","name":"[parameters(''vHubName'')]","resourceGroupName":"[parameters(''rgName'')]","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"],"type":"Microsoft.Network/virtualHubs"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-vNet"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-vNet
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy spoke network with configuration to hub network based on ipam configuration object
          display_name: Deploy spoke network with configuration to hub network based on ipam configuration object
          management_group_name: myorg-1
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: All
          name: Deploy-vNet
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"ipam":{"defaultValue":[],"metadata":{"displayName":"ipam"},"type":"Array"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"Incremental","parameters":{"ipam":{"defaultValue":[],"value":"[parameters(''ipam'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json","contentVersion":"1.0.0.0","outputs":{"ipam":{"condition":"[bool(''true'')]","type":"Int","value":"[length(parameters(''ipam''))]"}},"parameters":{"ipam":{"defaultValue":[{"hubVirtualNetworkConnection":{"properties":{"allowHubToRemoteVnetTransit":true,"allowRemoteVnetToUseHubVnetGateways":false,"enableInternetSecurity":true},"vWanVhubResourceId":"/subscriptions/99c2838f-a548-4884-a6e2-38c1f8fb4c0b/resourceGroups/contoso-global-vwan/providers/Microsoft.Network/virtualHubs/contoso-vhub-weu"},"location":"westeurope","name":"bu1-weu-msx3-vNet1","networkSecurityGroups":{"properties":{"securityRules":[]}},"routeTables":{"properties":{"routes":[]}},"virtualNetworks":{"properties":{"addressSpace":{"addressPrefixes":["10.51.217.0/24"]}}}}],"type":"Array"}},"resources":[{"apiVersion":"2020-06-01","condition":"[if(and(not(empty(parameters(''ipam''))), equals(toLower(parameters(''ipam'')[copyIndex()].name),toLower(variables(''vNetName'')))),bool(''true''),bool(''false''))]","copy":{"count":"[length(parameters(''ipam''))]","name":"ipam-rg-loop"},"dependsOn":[],"location":"[parameters(''ipam'')[copyIndex()].location]","name":"[concat(''es-ipam-'',subscription().displayName,''-RG-'',copyIndex())]","properties":{"mode":"Incremental","template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{},"resources":[{"apiVersion":"2020-06-01","location":"[parameters(''ipam'')[copyIndex()].location]","name":"[variables(''vNetRgName'')]","properties":{},"type":"Microsoft.Resources/resourceGroups"},{"apiVersion":"2020-06-01","location":"[parameters(''ipam'')[copyIndex()].location]","name":"NetworkWatcherRG","properties":{},"type":"Microsoft.Resources/resourceGroups"}],"variables":{}}},"type":"Microsoft.Resources/deployments"},{"apiVersion":"2020-06-01","condition":"[if(and(not(empty(parameters(''ipam''))), equals(toLower(parameters(''ipam'')[copyIndex()].name),toLower(variables(''vNetName'')))),bool(''true''),bool(''false''))]","copy":{"count":"[length(parameters(''ipam''))]","name":"ipam-loop"},"dependsOn":["[concat(''es-ipam-'',subscription().displayName,''-RG-'',copyIndex())]"],"name":"[concat(''es-ipam-'',subscription().displayName,''-nsg-udr-vnet-hub-vwan-peering-'',copyIndex())]","properties":{"mode":"Incremental","template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{},"resources":[{"apiVersion":"2020-05-01","condition":"[contains(parameters(''ipam'')[copyIndex()],''networkSecurityGroups'')]","location":"[parameters(''ipam'')[copyIndex()].location]","name":"[concat(subscription().displayName, ''-nsg'')]","properties":"[if(contains(parameters(''ipam'')[copyIndex()],''networkSecurityGroups''),parameters(''ipam'')[copyIndex()].networkSecurityGroups.properties,json(''null''))]","type":"Microsoft.Network/networkSecurityGroups"},{"apiVersion":"2020-05-01","condition":"[contains(parameters(''ipam'')[copyIndex()],''routeTables'')]","location":"[parameters(''ipam'')[copyIndex()].location]","name":"[concat(subscription().displayName, ''-udr'')]","properties":"[if(contains(parameters(''ipam'')[copyIndex()],''routeTables''),parameters(''ipam'')[copyIndex()].routeTables.properties,json(''null''))]","type":"Microsoft.Network/routeTables"},{"apiVersion":"2020-05-01","condition":"[contains(parameters(''ipam'')[copyIndex()],''virtualNetworks'')]","dependsOn":["[concat(subscription().displayName, ''-nsg'')]","[concat(subscription().displayName, ''-udr'')]"],"location":"[parameters(''ipam'')[copyIndex()].location]","name":"[concat(subscription().displayName, ''-vnet'')]","properties":"[if(contains(parameters(''ipam'')[copyIndex()],''virtualNetworks''),parameters(''ipam'')[copyIndex()].virtualNetworks.properties,json(''null''))]","type":"Microsoft.Network/virtualNetworks"},{"apiVersion":"2020-05-01","condition":"[contains(parameters(''ipam'')[copyIndex()],''virtualNetworkPeerings'')]","dependsOn":["[concat(subscription().displayName, ''-vnet'')]"],"name":"[concat(variables(''vNetName''), ''/peerToHub'')]","properties":"[if(contains(parameters(''ipam'')[copyIndex()],''virtualNetworkPeerings''),parameters(''ipam'')[copyIndex()].virtualNetworkPeerings.properties,json(''null''))]","type":"Microsoft.Network/virtualNetworks/virtualNetworkPeerings"},{"apiVersion":"2020-06-01","condition":"[and(contains(parameters(''ipam'')[copyIndex()],''virtualNetworks''),contains(parameters(''ipam'')[copyIndex()],''hubVirtualNetworkConnection''),contains(parameters(''ipam'')[copyIndex()].hubVirtualNetworkConnection,''vWanVhubResourceId''))]","dependsOn":["[concat(subscription().displayName, ''-vnet'')]"],"name":"[concat(''es-ipam-vWan-'',subscription().displayName,''-peering-'',copyIndex())]","properties":{"expressionEvaluationOptions":{"scope":"inner"},"mode":"Incremental","parameters":{"allowHubToRemoteVnetTransit":{"value":"[if(and(contains(parameters(''ipam'')[copyIndex()],''hubVirtualNetworkConnection''),contains(parameters(''ipam'')[copyIndex()].hubVirtualNetworkConnection,''vWanVhubResourceId'')),parameters(''ipam'')[copyIndex()].hubVirtualNetworkConnection.properties.allowHubToRemoteVnetTransit,json(''null''))]"},"allowRemoteVnetToUseHubVnetGateways":{"value":"[if(and(contains(parameters(''ipam'')[copyIndex()],''hubVirtualNetworkConnection''),contains(parameters(''ipam'')[copyIndex()].hubVirtualNetworkConnection,''vWanVhubResourceId'')),parameters(''ipam'')[copyIndex()].hubVirtualNetworkConnection.properties.allowRemoteVnetToUseHubVnetGateways,json(''null''))]"},"enableInternetSecurity":{"value":"[if(and(contains(parameters(''ipam'')[copyIndex()],''hubVirtualNetworkConnection''),contains(parameters(''ipam'')[copyIndex()].hubVirtualNetworkConnection,''vWanVhubResourceId'')),parameters(''ipam'')[copyIndex()].hubVirtualNetworkConnection.properties.enableInternetSecurity,json(''null''))]"},"remoteVirtualNetwork":{"value":"[concat(subscription().id,''/resourceGroups/'',variables(''vNetRgName''), ''/providers/'',''Microsoft.Network/virtualNetworks/'', concat(subscription().displayName, ''-vnet''))]"},"vWanVhubName":{"value":"[if(and(contains(parameters(''ipam'')[copyIndex()],''hubVirtualNetworkConnection''),contains(parameters(''ipam'')[copyIndex()].hubVirtualNetworkConnection,''vWanVhubResourceId'')),split(parameters(''ipam'')[copyIndex()].hubVirtualNetworkConnection.vWanVhubResourceId,''/'')[8],json(''null''))]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"allowHubToRemoteVnetTransit":{"defaultValue":true,"type":"bool"},"allowRemoteVnetToUseHubVnetGateways":{"defaultValue":false,"type":"bool"},"enableInternetSecurity":{"defaultValue":true,"type":"bool"},"remoteVirtualNetwork":{"type":"String"},"vWanVhubName":{"defaultValue":"","type":"String"}},"resources":[{"apiVersion":"2020-05-01","name":"[[concat(parameters(''vWanVhubName''),''/'',last(split(parameters(''remoteVirtualNetwork''),''/'')))]","properties":{"allowHubToRemoteVnetTransit":"[[parameters(''allowHubToRemoteVnetTransit'')]","allowRemoteVnetToUseHubVnetGateways":"[[parameters(''allowRemoteVnetToUseHubVnetGateways'')]","enableInternetSecurity":"[[parameters(''enableInternetSecurity'')]","remoteVirtualNetwork":{"id":"[[parameters(''remoteVirtualNetwork'')]"}},"type":"Microsoft.Network/virtualHubs/hubVirtualNetworkConnections"}],"variables":{}}},"resourceGroup":"[if(and(contains(parameters(''ipam'')[copyIndex()],''hubVirtualNetworkConnection''),contains(parameters(''ipam'')[copyIndex()].hubVirtualNetworkConnection,''vWanVhubResourceId'')),split(parameters(''ipam'')[copyIndex()].hubVirtualNetworkConnection.vWanVhubResourceId,''/'')[4],json(''null''))]","subscriptionId":"[if(and(contains(parameters(''ipam'')[copyIndex()],''hubVirtualNetworkConnection''),contains(parameters(''ipam'')[copyIndex()].hubVirtualNetworkConnection,''vWanVhubResourceId'')),split(parameters(''ipam'')[copyIndex()].hubVirtualNetworkConnection.vWanVhubResourceId,''/'')[2],json(''null''))]","type":"Microsoft.Resources/deployments"},{"apiVersion":"2020-06-01","condition":"[and(contains(parameters(''ipam'')[copyIndex()],''virtualNetworks''),contains(parameters(''ipam'')[copyIndex()],''virtualNetworkPeerings''),contains(parameters(''ipam'')[copyIndex()].virtualNetworkPeerings.properties.remoteVirtualNetwork,''id''))]","dependsOn":["[concat(subscription().displayName, ''-vnet'')]"],"name":"[concat(''es-ipam-hub-'',subscription().displayName,''-peering-'',copyIndex())]","properties":{"expressionEvaluationOptions":{"scope":"inner"},"mode":"Incremental","parameters":{"hubName":{"value":"[if(and(contains(parameters(''ipam'')[copyIndex()],''virtualNetworkPeerings''),contains(parameters(''ipam'')[copyIndex()].virtualNetworkPeerings.properties.remoteVirtualNetwork,''id'')),split(parameters(''ipam'')[copyIndex()].virtualNetworkPeerings.properties.remoteVirtualNetwork.id,''/'')[8],json(''null''))]"},"remoteVirtualNetwork":{"value":"[concat(subscription().id,''/resourceGroups/'',variables(''vNetRgName''), ''/providers/'',''Microsoft.Network/virtualNetworks/'', concat(subscription().displayName, ''-vnet''))]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"hubName":{"defaultValue":false,"type":"String"},"remoteVirtualNetwork":{"defaultValue":false,"type":"String"}},"resources":[{"apiVersion":"2020-05-01","name":"[[concat(parameters(''hubName''),''/'',last(split(parameters(''remoteVirtualNetwork''),''/'')))]","properties":{"allowForwardedTraffic":true,"allowGatewayTransit":true,"allowVirtualNetworkAccess":true,"remoteVirtualNetwork":{"id":"[[parameters(''remoteVirtualNetwork'')]"},"useRemoteGateways":false},"type":"Microsoft.Network/virtualNetworks/virtualNetworkPeerings"}],"variables":{}}},"resourceGroup":"[if(and(contains(parameters(''ipam'')[copyIndex()],''virtualNetworkPeerings''),contains(parameters(''ipam'')[copyIndex()].virtualNetworkPeerings.properties.remoteVirtualNetwork,''id'')),split(parameters(''ipam'')[copyIndex()].virtualNetworkPeerings.properties.remoteVirtualNetwork.id,''/'')[4],json(''null''))]","subscriptionId":"[if(and(contains(parameters(''ipam'')[copyIndex()],''virtualNetworkPeerings''),contains(parameters(''ipam'')[copyIndex()].virtualNetworkPeerings.properties.remoteVirtualNetwork,''id'')),split(parameters(''ipam'')[copyIndex()].virtualNetworkPeerings.properties.remoteVirtualNetwork.id,''/'')[2],json(''null''))]","type":"Microsoft.Resources/deployments"}],"variables":{}}},"resourceGroup":"[variables(''vNetRgName'')]","type":"Microsoft.Resources/deployments"}],"variables":{"vNetName":"[concat(subscription().displayName, ''-vNet'')]","vNetRgName":"[concat(subscription().displayName, ''-network'')]","vNetSubId":"[subscription().subscriptionId]"}}}},"deploymentScope":"Subscription","existenceCondition":{"allOf":[{"equals":"Microsoft.Resources/subscriptions/resourceGroups","field":"type"},{"field":"name","like":"[concat(subscription().displayName, ''-network'')]"}]},"existenceScope":"Subscription","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"],"type":"Microsoft.Resources/resourceGroups"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-vWAN"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-vWAN
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy the Virtual WAN in the specific region.
          display_name: Deploy the Virtual WAN in the specific region
          management_group_name: myorg-1
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: All
          name: Deploy-vWAN
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"rgName":{"metadata":{"description":"Provide name for resource group.","displayName":"rgName"},"type":"String"},"vwanRegion":{"metadata":{"description":"Select Azure region for Virtual WAN","displayName":"vwanRegion","strongType":"location"},"type":"String"},"vwanname":{"metadata":{"description":"Name of the Virtual WAN","displayName":"vwanname"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"Incremental","parameters":{"rgName":{"value":"[parameters(''rgName'')]"},"vwanRegion":{"value":"[parameters(''vwanRegion'')]"},"vwanname":{"value":"[parameters(''vwanname'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json","contentVersion":"1.0.0.0","outputs":{},"parameters":{"rgName":{"type":"String"},"vwanRegion":{"type":"String"},"vwanname":{"type":"String"}},"resources":[{"apiVersion":"2018-05-01","location":"[deployment().location]","name":"[parameters(''rgName'')]","properties":{},"type":"Microsoft.Resources/resourceGroups"},{"apiVersion":"2018-05-01","dependsOn":["[resourceId(''Microsoft.Resources/resourceGroups/'', parameters(''rgName''))]"],"name":"vwan","properties":{"mode":"Incremental","template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json","contentVersion":"1.0.0.0","outputs":{},"parameters":{},"resources":[{"apiVersion":"2020-05-01","location":"[parameters(''vwanRegion'')]","name":"[parameters(''vwanname'')]","properties":{"type":"[variables(''vwansku'')]","virtualHubs":[],"vpnSites":[]},"type":"Microsoft.Network/virtualWans"}]}},"resourceGroup":"[parameters(''rgName'')]","type":"Microsoft.Resources/deployments"}],"variables":{"vwansku":"Standard"}}}},"deploymentScope":"Subscription","existenceScope":"ResourceGroup","name":"[parameters(''vwanname'')]","resourceGroupName":"[parameters(''rgName'')]","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"],"type":"Microsoft.Network/virtualWans"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policySetDefinitions/Deny-PublicEndpoints"]
        mode: managed
        type: azurerm_policy_set_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policySetDefinitions/Deny-PublicEndpoints
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: 'This policy denies creation of Azure PAAS services with exposed public endpoints.  This policy set includes the policy for the following services KeyVault, Storage accounts, AKS, Cosmos, SQL Servers, MariaDB, MySQL and Postgress. '
          display_name: Public network access should be disabled for PAAS services
          management_group_name: myorg-1
          metadata: '{"category":"Network","version":"1.0.0"}'
          name: Deny-PublicEndpoints
          parameters: '{"AKSPublicIpDenyEffect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"This policy denies  the creation of  Azure Kubernetes Service non-private clusters","displayName":"Public network access on AKS API should be disabled"},"type":"String"},"CosmosPublicIpDenyEffect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"This policy denies that  Cosmos database accounts  are created with out public network access is disabled.","displayName":"Public network access should be disabled for CosmosDB"},"type":"String"},"KeyVaultPublicIpDenyEffect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"This policy denies creation of Key Vaults with IP Firewall exposed to all public endpoints","displayName":"Public network access should be disabled for KeyVault"},"type":"String"},"MariaDBPublicIpDenyEffect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"This policy denies the creation of Maria DB accounts with exposed public endpoints","displayName":"Public network access should be disabled for MariaDB"},"type":"String"},"MySQLPublicIpDenyEffect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"This policy denies creation of MySql DB accounts with exposed public endpoints","displayName":"Public network access should be disabled for MySQL"},"type":"String"},"PostgreSQLPublicIpDenyEffect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"This policy denies creation of Postgre SQL DB accounts with exposed public endpoints","displayName":"Public network access should be disabled for PostgreSql"},"type":"String"},"SqlServerPublicIpDenyEffect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"This policy denies creation of Sql servers with exposed public endpoints","displayName":"Public network access on Azure SQL Database should be disabled"},"type":"String"},"StoragePublicIpDenyEffect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"This policy denies creation of storage accounts with IP Firewall exposed to all public endpoints","displayName":"Public network access onStorage accounts should be disabled"},"type":"String"}}'
          policy_definition_group: []
          policy_definition_reference:
            - parameter_values: '{"effect":{"value":"[parameters(''CosmosPublicIpDenyEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-CosmosDB
              policy_group_names: null
              reference_id: CosmosDenyPaasPublicIP
            - parameter_values: '{"effect":{"value":"[parameters(''MariaDBPublicIpDenyEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-MariaDB
              policy_group_names: null
              reference_id: MariaDBDenyPaasPublicIP
            - parameter_values: '{"effect":{"value":"[parameters(''MySQLPublicIpDenyEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-MySQL
              policy_group_names: null
              reference_id: MySQLDenyPaasPublicIP
            - parameter_values: '{"effect":{"value":"[parameters(''PostgreSQLPublicIpDenyEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-PostgreSql
              policy_group_names: null
              reference_id: PostgreSQLDenyPaasPublicIP
            - parameter_values: '{"effect":{"value":"[parameters(''KeyVaultPublicIpDenyEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-KeyVault
              policy_group_names: null
              reference_id: KeyVaultDenyPaasPublicIP
            - parameter_values: '{"effect":{"value":"[parameters(''SqlServerPublicIpDenyEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-Sql
              policy_group_names: null
              reference_id: SqlServerDenyPaasPublicIP
            - parameter_values: '{"effect":{"value":"[parameters(''StoragePublicIpDenyEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-Storage
              policy_group_names: null
              reference_id: StorageDenyPaasPublicIP
            - parameter_values: '{"effect":{"value":"[parameters(''AKSPublicIpDenyEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-Aks
              policy_group_names: null
              reference_id: AKSDenyPaasPublicIP
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policySetDefinitions/Deploy-ASC-Config"]
        mode: managed
        type: azurerm_policy_set_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policySetDefinitions/Deploy-ASC-Config
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy Azure Security Center configuration
          display_name: Deploy Azure Security Center configuration
          management_group_name: myorg-1
          metadata: '{"category":"Security Center","version":"1.0.0"}'
          name: Deploy-ASC-Config
          parameters: '{"ascExportResourceGroupLocation":{"metadata":{"description":"The location where the resource group and the export to Log Analytics workspace configuration are created.","displayName":"Resource Group location for the export to Log Analytics workspace configuration"},"type":"String"},"ascExportResourceGroupName":{"metadata":{"description":"The resource group name where the export to Log Analytics workspace configuration is created. If you enter a name for a resource group that doesn''t exist, it''ll be created in the subscription. Note that each resource group can only have one export to Log Analytics workspace configured.","displayName":"Resource Group name for the export to Log Analytics workspace configuration"},"type":"String"},"emailSecurityContact":{"metadata":{"description":"Provide email address for Azure Security Center contact details","displayName":"Security contacts email address"},"type":"string"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Primary Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"pricingTierAppServices":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier for App Services","displayName":"Azure Defender pricing tier for App Services"},"type":"string"},"pricingTierArm":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier for Azure Resource Manager","displayName":"Azure Defender pricing tier for Azure Resource Manager"},"type":"string"},"pricingTierContainerRegistry":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier for ACR","displayName":"Azure Defender pricing tier for ACR"},"type":"string"},"pricingTierDns":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier for DNS","displayName":"Azure Defender pricing tier for DNS"},"type":"string"},"pricingTierKeyVaults":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier for AKV","displayName":"Azure Defender pricing tier for AKV"},"type":"string"},"pricingTierKubernetesService":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier for AKS","displayName":"Azure Defender pricing tier for AKS"},"type":"string"},"pricingTierSqlServerVirtualMachines":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier for SQL Server Virtual Machines","displayName":"Azure Defender pricing tier for SQL Server Virtual Machines"},"type":"string"},"pricingTierSqlServers":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier for SQL Servers","displayName":"Azure Defender pricing tier for SQL Servers"},"type":"string"},"pricingTierStorageAccounts":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier for Storage Accounts","displayName":"Azure Defender pricing tier for Storage Accounts"},"type":"string"},"pricingTierVMs":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier for Virtual Machines","displayName":"Azure Defender pricing tier for Virtual Machines"},"type":"string"}}'
          policy_definition_group: []
          policy_definition_reference:
            - parameter_values: '{"pricingTier":{"value":"[parameters(''pricingTierVMs'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-VMs
              policy_group_names: null
              reference_id: defenderForVM
            - parameter_values: '{"pricingTier":{"value":"[parameters(''pricingTierSqlServers'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-Sql
              policy_group_names: null
              reference_id: defenderForSqlServers
            - parameter_values: '{"pricingTier":{"value":"[parameters(''pricingTierAppServices'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-AppSrv
              policy_group_names: null
              reference_id: defenderForAppServices
            - parameter_values: '{"pricingTier":{"value":"[parameters(''pricingTierStorageAccounts'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-SA
              policy_group_names: null
              reference_id: defenderForStorageAccounts
            - parameter_values: '{"pricingTier":{"value":"[parameters(''pricingTierSqlServerVirtualMachines'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-SQLVM
              policy_group_names: null
              reference_id: defenderForSqlServerVirtualMachines
            - parameter_values: '{"pricingTier":{"value":"[parameters(''pricingTierKubernetesService'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-AKS
              policy_group_names: null
              reference_id: defenderForKubernetesService
            - parameter_values: '{"pricingTier":{"value":"[parameters(''pricingTierContainerRegistry'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-ACR
              policy_group_names: null
              reference_id: defenderForContainerRegistry
            - parameter_values: '{"pricingTier":{"value":"[parameters(''pricingTierKeyVaults'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-AKV
              policy_group_names: null
              reference_id: defenderForKeyVaults
            - parameter_values: '{"pricingTier":{"value":"[parameters(''pricingTierDns'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-DNS
              policy_group_names: null
              reference_id: defenderForDns
            - parameter_values: '{"pricingTier":{"value":"[parameters(''pricingTierArm'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-ARM
              policy_group_names: null
              reference_id: defenderForArm
            - parameter_values: '{"emailSecurityContact":{"value":"[parameters(''emailSecurityContact'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-SecurityContacts
              policy_group_names: null
              reference_id: securityEmailContact
            - parameter_values: '{"resourceGroupLocation":{"value":"[parameters(''ascExportResourceGroupLocation'')]"},"resourceGroupName":{"value":"[parameters(''ascExportResourceGroupName'')]"},"workspaceResourceId":{"value":"[parameters(''logAnalytics'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/ffb6f416-7bd2-4488-8828-56585fef2be9
              policy_group_names: null
              reference_id: ascExport
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Diag-LogAnalytics"]
        mode: managed
        type: azurerm_policy_set_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Diag-LogAnalytics
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: 'This policy set deploys the configurations of application Azure resources to forward diagnostic logs and metrics to an Azure Log Analytics workspace. See the list of policies of the services that are included '
          display_name: Deploy Diagnostic Settings to Azure Services
          management_group_name: myorg-1
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          name: Deploy-Diag-LogAnalytics
          parameters: '{"ACILogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Container Instances to stream to a Log Analytics workspace when any ACR which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics enabled.","displayName":"Deploy Diagnostic Settings for Container Instances to Log Analytics workspace"},"type":"String"},"ACRLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Container Registry to stream to a Log Analytics workspace when any ACR which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics  enabled.","displayName":"Deploy Diagnostic Settings for Container Registry to Log Analytics workspace"},"type":"String"},"AKSLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Kubernetes Service to stream to a Log Analytics workspace when any Kubernetes Service which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled.","displayName":"Deploy Diagnostic Settings for Kubernetes Service to Log Analytics workspace"},"type":"String"},"APIMgmtLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for API Management to stream to a Log Analytics workspace when any API Management which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for API Management to Log Analytics workspace"},"type":"String"},"APIforFHIRLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Azure API for FHIR to stream to a Log Analytics workspace when any Azure API for FHIR which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Azure API for FHIR to Log Analytics workspace"},"type":"String"},"AnalysisServiceLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Analysis Services to stream to a Log Analytics workspace when any Analysis Services which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Analysis Services to Log Analytics workspace"},"type":"String"},"AppServiceLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for App Service Plan to stream to a Log Analytics workspace when any App Service Plan which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for App Service Plan to Log Analytics workspace"},"type":"String"},"AppServiceWebappLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Web App to stream to a Log Analytics workspace when any Web App which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for App Service to Log Analytics workspace"},"type":"String"},"ApplicationGatewayLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Application Gateway to stream to a Log Analytics workspace when any Application Gateway which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Application Gateway to Log Analytics workspace"},"type":"String"},"AutomationLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Automation to stream to a Log Analytics workspace when any Automation which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Automation to Log Analytics workspace"},"type":"String"},"BatchLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Batch to stream to a Log Analytics workspace when any Batch which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Batch to Log Analytics workspace"},"type":"String"},"CDNEndpointsLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for CDN Endpoint to stream to a Log Analytics workspace when any CDN Endpoint which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for CDN Endpoint to Log Analytics workspace"},"type":"String"},"CognitiveServicesLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Cognitive Services to stream to a Log Analytics workspace when any Cognitive Services which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Cognitive Services to Log Analytics workspace"},"type":"String"},"CosmosLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Cosmos DB to stream to a Log Analytics workspace when any Cosmos DB which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Cosmos DB to Log Analytics workspace"},"type":"String"},"DataExplorerClusterLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Azure Data Explorer Cluster to stream to a Log Analytics workspace when any Azure Data Explorer Cluster which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Azure Data Explorer Cluster to Log Analytics workspace"},"type":"String"},"DataFactoryLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Data Factory to stream to a Log Analytics workspace when any Data Factory which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Data Factory to Log Analytics workspace"},"type":"String"},"DataLakeAnalyticsLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Data Lake Analytics to stream to a Log Analytics workspace when any Data Lake Analytics which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Data Lake Analytics to Log Analytics workspace"},"type":"String"},"DataLakeStoreLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Azure Data Lake Store to stream to a Log Analytics workspace when anyAzure Data Lake Store which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Azure Data Lake Store to Log Analytics workspace"},"type":"String"},"DatabricksLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Databricks to stream to a Log Analytics workspace when any Databricks which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Databricks to Log Analytics workspace"},"type":"String"},"EventGridSubLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Event Grid subscriptions to stream to a Log Analytics workspace when any Event Grid subscriptions which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Event Grid subscriptions to Log Analytics workspace"},"type":"String"},"EventGridTopicLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Event Grid Topic to stream to a Log Analytics workspace when any Event Grid Topic which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Event Grid Topic to Log Analytics workspace"},"type":"String"},"EventHubLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Event Hubs to stream to a Log Analytics workspace when any Event Hubs which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Event Hubs to Log Analytics workspace"},"type":"String"},"EventSystemTopicLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Event Grid System Topic to stream to a Log Analytics workspace when any Event Grid System Topic which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Event Grid System Topic to Log Analytics workspace"},"type":"String"},"ExpressRouteLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for ExpressRoute to stream to a Log Analytics workspace when any ExpressRoute which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for ExpressRoute to Log Analytics workspace"},"type":"String"},"FirewallLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Firewall to stream to a Log Analytics workspace when any Firewall which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Firewall to Log Analytics workspace"},"type":"String"},"FrontDoorLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Front Door to stream to a Log Analytics workspace when any Front Door which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Front Door to Log Analytics workspace"},"type":"String"},"FunctionAppLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Azure Function App to stream to a Log Analytics workspace when any function app which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Azure Function App to Log Analytics workspace"},"type":"String"},"HDInsightLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for HDInsight to stream to a Log Analytics workspace when any HDInsight which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for HDInsight to Log Analytics workspace"},"type":"String"},"IotHubLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for IoT Hub to stream to a Log Analytics workspace when any IoT Hub which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for IoT Hub to Log Analytics workspace"},"type":"String"},"KeyVaultLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Key Vault to stream to a Log Analytics workspace when any Key Vault which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Key Vault to Log Analytics workspace"},"type":"String"},"LoadBalancerLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Load Balancer to stream to a Log Analytics workspace when any Load Balancer which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Load Balancer to Log Analytics workspace"},"type":"String"},"LogicAppsISELogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Logic Apps integration service environment to stream to a Log Analytics workspace when any Logic Apps integration service environment which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Logic Apps integration service environment to Log Analytics workspace"},"type":"String"},"LogicAppsWFLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Logic Apps Workflow runtimeto stream to a Log Analytics workspace when any Logic Apps Workflow runtime which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Logic Apps Workflow runtime to Log Analytics workspace"},"type":"String"},"MariaDBLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for MariaDB to stream to a Log Analytics workspace when any MariaDB  which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for MariaDB to Log Analytics workspace"},"type":"String"},"MediaServiceLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Azure Media Service to stream to a Log Analytics workspace when any Azure Media Service which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Azure Media Service to Log Analytics workspace"},"type":"String"},"MlWorkspaceLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Machine Learning workspace to stream to a Log Analytics workspace when any Machine Learning workspace which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Machine Learning workspace to Log Analytics workspace"},"type":"String"},"MySQLLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Database for MySQL to stream to a Log Analytics workspace when any Database for MySQL which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Database for MySQL to Log Analytics workspace"},"type":"String"},"NetworkNICLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Network Interfaces to stream to a Log Analytics workspace when any Network Interfaces which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Network Interfaces to Log Analytics workspace"},"type":"String"},"NetworkPublicIPNicLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Public IP addresses to stream to a Log Analytics workspace when any Public IP addresses which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Public IP addresses to Log Analytics workspace"},"type":"String"},"NetworkSecurityGroupsLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Network Security Groups to stream to a Log Analytics workspace when any Network Security Groups which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Network Security Groups to Log Analytics workspace"},"type":"String"},"PostgreSQLLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Database for PostgreSQL to stream to a Log Analytics workspace when any Database for PostgreSQL which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Database for PostgreSQL to Log Analytics workspace"},"type":"String"},"PowerBIEmbeddedLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Power BI Embedded to stream to a Log Analytics workspace when any Power BI Embedded which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Power BI Embedded to Log Analytics workspace"},"type":"String"},"RecoveryVaultLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Recovery Services vaults to stream to a Log Analytics workspace when any Recovery Services vaults which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Recovery Services vaults to Log Analytics workspace"},"type":"String"},"RedisCacheLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Redis Cache to stream to a Log Analytics workspace when any Redis Cache which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Redis Cache to Log Analytics workspace"},"type":"String"},"RelayLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Relay to stream to a Log Analytics workspace when any Relay which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Relay to Log Analytics workspace"},"type":"String"},"SQLDBsLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for SQL Databases to stream to a Log Analytics workspace when any SQL Databases  which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for SQL Databases  to Log Analytics workspace"},"type":"String"},"SQLElasticPoolsLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for SQL Elastic Pools to stream to a Log Analytics workspace when any SQL Elastic Pools which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for SQL Elastic Pools to Log Analytics workspace"},"type":"String"},"SQLMLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for SQL Managed Instances to stream to a Log Analytics workspace when any SQL Managed Instances which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for SQL Managed Instances to Log Analytics workspace"},"type":"String"},"SearchServicesLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Search Services to stream to a Log Analytics workspace when any Search Services which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Search Services to Log Analytics workspace"},"type":"String"},"ServiceBusLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for ServiceBus to stream to a Log Analytics workspace when any ServiceBus which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Service Bus namespaces  to Log Analytics workspace"},"type":"String"},"SignalRLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for SignalR to stream to a Log Analytics workspace when any SignalR which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for SignalR to Log Analytics workspace"},"type":"String"},"StorageAccountsLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Storage Accounts to stream to a Log Analytics workspace when any storage account which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Storage Accounts to Log Analytics workspace"},"type":"String"},"StreamAnalyticsLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Stream Analytics to stream to a Log Analytics workspace when any Stream Analytics which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Stream Analytics to Log Analytics workspace"},"type":"String"},"TimeSeriesInsightsLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Time Series Insights to stream to a Log Analytics workspace when any Time Series Insights which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Time Series Insights to Log Analytics workspace"},"type":"String"},"TrafficManagerLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Traffic Manager to stream to a Log Analytics workspace when any Traffic Manager which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Traffic Manager to Log Analytics workspace"},"type":"String"},"VMSSLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Virtual Machine Scale Sets  to stream to a Log Analytics workspace when any Virtual Machine Scale Sets  which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Virtual Machine Scale Sets to Log Analytics workspace"},"type":"String"},"VNetGWLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for VPN Gateway to stream to a Log Analytics workspace when any VPN Gateway which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled.","displayName":"Deploy Diagnostic Settings for VPN Gateway to Log Analytics workspace"},"type":"String"},"VirtualMachinesLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Virtual Machines to stream to a Log Analytics workspace when any Virtual Machines which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Virtual Machines to Log Analytics workspace"},"type":"String"},"VirtualNetworkLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Virtual Network to stream to a Log Analytics workspace when any Virtual Network which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Virtual Network to Log Analytics workspace"},"type":"String"},"WVDAppGroupsLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for WVD Application groups to stream to a Log Analytics workspace when any application groups which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for WVD Application Groups to Log Analytics workspace"},"type":"String"},"WVDHostPoolsLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for WVD Host pools to stream to a Log Analytics workspace when any host pool which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for WVD Host pools to Log Analytics workspace"},"type":"String"},"WVDWorkspaceLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for WVD Workspace to stream to a Log Analytics workspace when any Workspace which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for WVD Workspace to Log Analytics workspace"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_definition_group: []
          policy_definition_reference:
            - parameter_values: '{"effect":{"value":"[parameters(''StorageAccountsLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/6f8f98a4-f108-47cb-8e98-91a0d85cd474
              policy_group_names: null
              reference_id: StorageAccountDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''WVDAppGroupsLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDAppGroup
              policy_group_names: null
              reference_id: WVDAppGroupDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''WVDWorkspaceLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDWorkspace
              policy_group_names: null
              reference_id: WVDWorkspaceDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''WVDHostPoolsLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDHostPools
              policy_group_names: null
              reference_id: WVDHostPoolsDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''ACILogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACI
              policy_group_names: null
              reference_id: ACIDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''ACRLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACR
              policy_group_names: null
              reference_id: ACRDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''AKSLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AKS
              policy_group_names: null
              reference_id: AKSDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''AnalysisServiceLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AnalysisService
              policy_group_names: null
              reference_id: AnalysisServiceDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''APIforFHIRLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApiForFHIR
              policy_group_names: null
              reference_id: APIforFHIRDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''APIMgmtLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-APIMgmt
              policy_group_names: null
              reference_id: APIMgmtDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''ApplicationGatewayLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApplicationGateway
              policy_group_names: null
              reference_id: ApplicationGatewayDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''AutomationLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AA
              policy_group_names: null
              reference_id: AutomationDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''BatchLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Batch
              policy_group_names: null
              reference_id: BatchDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''CDNEndpointsLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CDNEndpoints
              policy_group_names: null
              reference_id: CDNEndpointsDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''CognitiveServicesLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CognitiveServices
              policy_group_names: null
              reference_id: CognitiveServicesDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''CosmosLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CosmosDB
              policy_group_names: null
              reference_id: CosmosDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''DatabricksLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Databricks
              policy_group_names: null
              reference_id: DatabricksDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''DataExplorerClusterLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataExplorerCluster
              policy_group_names: null
              reference_id: DataExplorerClusterDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''DataFactoryLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataFactory
              policy_group_names: null
              reference_id: DataFactoryDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''DataLakeStoreLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataLakeStore
              policy_group_names: null
              reference_id: DataLakeStoreDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''DataLakeAnalyticsLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DLAnalytics
              policy_group_names: null
              reference_id: DataLakeAnalyticsDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''EventGridSubLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSub
              policy_group_names: null
              reference_id: EventGridSubDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''EventGridTopicLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridTopic
              policy_group_names: null
              reference_id: EventGridTopicDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''EventHubLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventHub
              policy_group_names: null
              reference_id: EventHubDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''EventSystemTopicLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSystemTopic
              policy_group_names: null
              reference_id: EventSystemTopicDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''ExpressRouteLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ExpressRoute
              policy_group_names: null
              reference_id: ExpressRouteDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''FirewallLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Firewall
              policy_group_names: null
              reference_id: FirewallDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''FrontDoorLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-FrontDoor
              policy_group_names: null
              reference_id: FrontDoorDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''FunctionAppLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Function
              policy_group_names: null
              reference_id: FunctionAppDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''HDInsightLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-HDInsight
              policy_group_names: null
              reference_id: HDInsightDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''IotHubLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-iotHub
              policy_group_names: null
              reference_id: IotHubDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''KeyVaultLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-KeyVault
              policy_group_names: null
              reference_id: KeyVaultDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''LoadBalancerLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LoadBalancer
              policy_group_names: null
              reference_id: LoadBalancerDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''LogicAppsISELogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogicAppsISE
              policy_group_names: null
              reference_id: LogicAppsISEDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''LogicAppsWFLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogicAppsWF
              policy_group_names: null
              reference_id: LogicAppsWFDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''MariaDBLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MariaDB
              policy_group_names: null
              reference_id: MariaDBDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''MediaServiceLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MediaService
              policy_group_names: null
              reference_id: MediaServiceDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''MlWorkspaceLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MlWorkspace
              policy_group_names: null
              reference_id: MlWorkspaceDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''MySQLLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MySQL
              policy_group_names: null
              reference_id: MySQLDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''NetworkSecurityGroupsLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NetworkSecurityGroups
              policy_group_names: null
              reference_id: NetworkSecurityGroupsDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''NetworkNICLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NIC
              policy_group_names: null
              reference_id: NetworkNICDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''PostgreSQLLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PostgreSQL
              policy_group_names: null
              reference_id: PostgreSQLDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''PowerBIEmbeddedLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PowerBIEmbedded
              policy_group_names: null
              reference_id: PowerBIEmbeddedDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''NetworkPublicIPNicLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"metricsEnabled":{"value":"True"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/752154a7-1e0f-45c6-a880-ac75a7e4f648
              policy_group_names: null
              reference_id: NetworkPublicIPNicDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''RecoveryVaultLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-RecoveryVault
              policy_group_names: null
              reference_id: RecoveryVaultDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''RedisCacheLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-RedisCache
              policy_group_names: null
              reference_id: RedisCacheDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''RelayLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Relay
              policy_group_names: null
              reference_id: RelayDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''SearchServicesLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SearchServices
              policy_group_names: null
              reference_id: SearchServicesDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''ServiceBusLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ServiceBus
              policy_group_names: null
              reference_id: ServiceBusDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''SignalRLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SignalR
              policy_group_names: null
              reference_id: SignalRDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''SQLDBsLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLDBs
              policy_group_names: null
              reference_id: SQLDBsDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''SQLElasticPoolsLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLElasticPools
              policy_group_names: null
              reference_id: SQLElasticPoolsDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''SQLMLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLMI
              policy_group_names: null
              reference_id: SQLMDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''StreamAnalyticsLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-StreamAnalytics
              policy_group_names: null
              reference_id: StreamAnalyticsDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''TimeSeriesInsightsLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TimeSeriesInsights
              policy_group_names: null
              reference_id: TimeSeriesInsightsDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''TrafficManagerLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TrafficManager
              policy_group_names: null
              reference_id: TrafficManagerDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''VirtualNetworkLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VirtualNetwork
              policy_group_names: null
              reference_id: VirtualNetworkDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''VirtualMachinesLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VM
              policy_group_names: null
              reference_id: VirtualMachinesDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''VMSSLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VMSS
              policy_group_names: null
              reference_id: VMSSDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''VNetGWLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VNetGW
              policy_group_names: null
              reference_id: VNetGWDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''AppServiceLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WebServerFarm
              policy_group_names: null
              reference_id: AppServiceDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''AppServiceWebappLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Website
              policy_group_names: null
              reference_id: AppServiceWebappDeployDiagnosticLogDeployLogAnalytics
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Sql-Security"]
        mode: managed
        type: azurerm_policy_set_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Sql-Security
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy auditing, Alert, TDE and SQL vulnerability to SQL Databases when it not exist in the deployment
          display_name: Deploy SQL Database built-in SQL security configuration
          management_group_name: myorg-1
          metadata: '{"category":"SQL","version":"1.0.0"}'
          name: Deploy-Sql-Security
          parameters: '{"SqlDbAuditingSettingsDeploySqlSecurityEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploy auditing settings to SQL Database when it not exist in the deployment","displayName":"Deploy SQL database auditing settings"},"type":"String"},"SqlDbSecurityAlertPoliciesDeploySqlSecurityEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploy the security Alert Policies configuration with email admin accounts when it not exist in current configuration","displayName":"Deploy SQL Database security Alert Policies configuration with email admin accounts"},"type":"String"},"SqlDbTdeDeploySqlSecurityEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploy the Transparent Data Encryption when it is not enabled in the deployment","displayName":"Deploy SQL Database Transparent Data Encryption "},"type":"String"},"SqlDbVulnerabilityAssessmentsDeploySqlSecurityEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploy SQL Database vulnerability Assessments when it not exist in the deployment. To the specific  storage account in the parameters","displayName":"Deploy SQL Database vulnerability Assessments"},"type":"String"},"vulnerabilityAssessmentsEmail":{"metadata":{"description":"The email address to send alerts","displayName":"The email address to send alerts"},"type":"String"},"vulnerabilityAssessmentsStorageID":{"metadata":{"description":"The storage account ID to store assessments","displayName":"The storage account ID to store assessments"},"type":"String"}}'
          policy_definition_group: []
          policy_definition_reference:
            - parameter_values: '{"effect":{"value":"[parameters(''SqlDbTdeDeploySqlSecurityEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-Tde
              policy_group_names: null
              reference_id: SqlDbTdeDeploySqlSecurity
            - parameter_values: '{"effect":{"value":"[parameters(''SqlDbSecurityAlertPoliciesDeploySqlSecurityEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-SecurityAlertPolicies
              policy_group_names: null
              reference_id: SqlDbSecurityAlertPoliciesDeploySqlSecurity
            - parameter_values: '{"effect":{"value":"[parameters(''SqlDbAuditingSettingsDeploySqlSecurityEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-AuditingSettings
              policy_group_names: null
              reference_id: SqlDbAuditingSettingsDeploySqlSecurity
            - parameter_values: '{"effect":{"value":"[parameters(''SqlDbVulnerabilityAssessmentsDeploySqlSecurityEffect'')]"},"vulnerabilityAssessmentsEmail":{"value":"[parameters(''vulnerabilityAssessmentsEmail'')]"},"vulnerabilityAssessmentsStorageID":{"value":"[parameters(''vulnerabilityAssessmentsStorageID'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-vulnerabilityAssessments
              policy_group_names: null
              reference_id: SqlDbVulnerabilityAssessmentsDeploySqlSecurity
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policySetDefinitions/Enforce-EncryptTransit"]
        mode: managed
        type: azurerm_policy_set_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policySetDefinitions/Enforce-EncryptTransit
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: 'Choose either Deploy if not exist and append in combination with audit or Select Deny in the Policy effect. Deny polices shift left. Deploy if not exist and append enforce but can be changed, and because missing exsistense condition require then the combination of Audit. '
          display_name: Deny or Deploy and append TLS requirements and SSL enforcement on resources without Encryption in transit
          management_group_name: myorg-1
          metadata: '{"category":"Encryption","version":"1.0.0"}'
          name: Enforce-EncryptTransit
          parameters: '{"AKSIngressHttpsOnlyEffect":{"allowedValues":["audit","deny","disabled"],"defaultValue":"deny","metadata":{"description":"This policy enforces HTTPS ingress in a Kubernetes cluster. This policy is generally available for Kubernetes Service (AKS), and preview for AKS Engine and Azure Arc enabled Kubernetes. For instructions on using this policy, visit https://aka.ms/kubepolicydoc.","displayName":"AKS Service. Enforce HTTPS ingress in Kubernetes cluster"},"type":"String"},"APIAppServiceHttpsEffect":{"allowedValues":["Audit","Disabled","Deny"],"defaultValue":"Audit","metadata":{"description":"Choose Deny or Audit in combination with Append policy. Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks.","displayName":"App Service API App. API App should only be accessible over HTTPS. Choose Deny or Audit in combination with Append policy."},"type":"String"},"APIAppServiceLatestTlsEffect":{"allowedValues":["AuditIfNotExists","Disabled"],"defaultValue":"AuditIfNotExists","metadata":{"description":"App Service API App. Only Audit, deny not possible as it is a related resource.  Upgrade to the latest TLS version.","displayName":"App Service API App. Latest TLS version should be used in your API App"},"type":"String"},"AppServiceHttpEffect":{"allowedValues":["Append","Disabled"],"defaultValue":"Append","metadata":{"description":"Append the AppService sites object to ensure that min Tls version is set to required TLS version. Please note Append does not enforce compliance use then deny.","displayName":"App Service. Appends the AppService sites config WebApp, APIApp, Function App with TLS version selected below"},"type":"String"},"AppServiceTlsVersionEffect":{"allowedValues":["Append","Disabled"],"defaultValue":"Append","metadata":{"description":"App Service. Appends the AppService sites object to ensure that  HTTPS only is enabled for  server/service authentication and protects data in transit from network layer eavesdropping attacks. Please note Append does not enforce compliance use then deny.","displayName":"App Service. Appends the AppService WebApp, APIApp, Function App to enable https only"},"type":"String"},"AppServiceminTlsVersion":{"allowedValues":["1.2","1.0","1.1"],"defaultValue":"1.2","metadata":{"description":"App Service. Select version  minimum TLS version for a  Web App config to enforce","displayName":"App Service. Select version minimum TLS Web App config"},"type":"String"},"FunctionLatestTlsEffect":{"allowedValues":["AuditIfNotExists","Disabled"],"defaultValue":"AuditIfNotExists","metadata":{"description":"Only Audit, deny not possible as it is a related resource. Upgrade to the latest TLS version.","displayName":"App Service Function App. Latest TLS version should be used in your Function App"},"type":"String"},"FunctionServiceHttpsEffect":{"allowedValues":["Audit","Disabled","Deny"],"defaultValue":"Audit","metadata":{"description":"App Service Function App. Choose Deny or Audit in combination with Append policy. Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks.","displayName":"App Service Function App. Function App should only be accessible over HTTPS. Choose Deny or Audit in combination with Append policy."},"type":"String"},"MySQLEnableSSLDeployEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploy a specific min TLS version requirement and enforce SSL on Azure Database for MySQL server. Enforce the Server to client applications using minimum version of Tls to secure the connection between your database server and your client applications helps protect against ''man in the middle'' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.","displayName":"MySQL database servers. Deploy if not exist set minimum TLS version Azure Database for MySQL server"},"type":"String"},"MySQLEnableSSLEffect":{"allowedValues":["Audit","Disabled","Deny"],"defaultValue":"Audit","metadata":{"description":"Azure Database for MySQL supports connecting your Azure Database for MySQL server to client applications using Secure Sockets Layer (SSL). Enforcing SSL connections between your database server and your client applications helps protect against ''man in the middle'' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.","displayName":"MySQL database servers. Enforce SSL connection should be enabled for MySQL database servers"},"type":"String"},"MySQLminimalTlsVersion":{"allowedValues":["TLS1_2","TLS1_0","TLS1_1","TLSEnforcementDisabled"],"defaultValue":"TLS1_2","metadata":{"description":"Select version  minimum TLS version Azure Database for MySQL server to enforce","displayName":"MySQL database servers. Select version minimum TLS for MySQL server"},"type":"String"},"PostgreSQLEnableSSLDeployEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploy a specific min TLS version requirement and enforce SSL on Azure Database for PostgreSQL server. Enforce the Server to client applications using minimum version of Tls to secure the connection between your database server and your client applications helps protect against ''man in the middle'' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.","displayName":"PostgreSQL database servers. Deploy if not exist set minimum TLS version Azure Database for PostgreSQL server"},"type":"String"},"PostgreSQLEnableSSLEffect":{"allowedValues":["Audit","Disabled","Deny"],"defaultValue":"Audit","metadata":{"description":"Azure Database for PostgreSQL supports connecting your Azure Database for PostgreSQL server to client applications using Secure Sockets Layer (SSL). Enforcing SSL connections between your database server and your client applications helps protect against ''man in the middle'' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.","displayName":"PostgreSQL database servers. Enforce SSL connection should be enabled for PostgreSQL database servers"},"type":"String"},"PostgreSQLminimalTlsVersion":{"allowedValues":["TLS1_2","TLS1_0","TLS1_1","TLSEnforcementDisabled"],"defaultValue":"TLS1_2","metadata":{"description":"PostgreSQL database servers. Select version  minimum TLS version Azure Database for MySQL server to enforce","displayName":"PostgreSQL database servers. Select version minimum TLS for MySQL server"},"type":"String"},"RedisMinTlsVersion":{"allowedValues":["1.2","1.0","1.1"],"defaultValue":"1.2","metadata":{"description":"Select version  minimum TLS version for a Azure Cache for Redis to enforce","displayName":"Azure Cache for Redis.Select version minimum TLS for Azure Cache for Redis"},"type":"String"},"RedisTLSDeployEffect":{"allowedValues":["Append","Disabled"],"defaultValue":"Append","metadata":{"description":"Deploy a specific min TLS version requirement and enforce SSL on Azure Cache for Redis. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against ''man in the middle'' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.","displayName":"Azure Cache for Redis. Deploy a specific min TLS version requirement and enforce SSL Azure Cache for Redis"},"type":"String"},"RedisTLSEffect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Audit","metadata":{"description":"Azure Cache for Redis. Audit enabling of only connections via SSL to Azure Cache for Redis. Use of secure connections ensures authentication between the server and the service and protects data in transit from network layer attacks such as man-in-the-middle, eavesdropping, and session-hijacking.","displayName":"Azure Cache for Redis. Only secure connections to your Azure Cache for Redis should be enabled"},"type":"String"},"SQLManagedInstanceMinTlsVersion":{"allowedValues":["1.2","1.0","1.1"],"defaultValue":"1.2","metadata":{"description":"Select version  minimum TLS version for Azure Managed Instanceto to  enforce","displayName":"Azure Managed Instance.Select version minimum TLS for Azure Managed Instance"},"type":"String"},"SQLManagedInstanceTLSDeployEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploy a specific min TLS version requirement and enforce SSL on SQL servers. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against ''man in the middle'' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.","displayName":"Azure Managed Instance. Deploy a specific min TLS version requirement and enforce SSL on SQL servers"},"type":"String"},"SQLManagedInstanceTLSEffect":{"allowedValues":["Audit","Disabled","Deny"],"defaultValue":"Audit","metadata":{"description":"Setting minimal TLS version to 1.2 improves security by ensuring your SQL Managed Instance can only be accessed from clients using TLS 1.2. Using versions of TLS less than 1.2 is not recommended since they have well documented security vulnerabilities.","displayName":"SQL Managed Instance should have the minimal TLS version of 1.2"},"type":"String"},"SQLServerTLSDeployEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploy a specific min TLS version requirement and enforce SSL on SQL servers. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against ''man in the middle'' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.","displayName":"Azure SQL Database. Deploy a specific min TLS version requirement and enforce SSL on SQL servers"},"type":"String"},"SQLServerTLSEffect":{"allowedValues":["Audit","Disabled","Deny"],"defaultValue":"Audit","metadata":{"description":"Setting minimal TLS version to 1.2 improves security by ensuring your Azure SQL Database can only be accessed from clients using TLS 1.2. Using versions of TLS less than 1.2 is not recommended since they have well documented security vulnerabilities.","displayName":"Azure SQL Database should have the minimal TLS version of 1.2"},"type":"String"},"SQLServerminTlsVersion":{"allowedValues":["1.2","1.0","1.1"],"defaultValue":"1.2","metadata":{"description":"Select version  minimum TLS version for Azure SQL Database to enforce","displayName":"Azure SQL Database.Select version minimum TLS for Azure SQL Database"},"type":"String"},"StorageDeployHttpsEnabledEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Audit requirement of Secure transfer in your storage account. Secure transfer is an option that forces your storage account to accept requests only from secure connections (HTTPS). Use of HTTPS ensures authentication between the server and the service and protects data in transit from network layer attacks such as man-in-the-middle, eavesdropping, and session-hijacking","displayName":"Azure Storage Account. Deploy Secure transfer to storage accounts should be enabled"},"type":"String"},"StorageHttpsEnabledEffect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Audit","metadata":{"description":"Audit requirement of Secure transfer in your storage account. Secure transfer is an option that forces your storage account to accept requests only from secure connections (HTTPS). Use of HTTPS ensures authentication between the server and the service and protects data in transit from network layer attacks such as man-in-the-middle, eavesdropping, and session-hijacking","displayName":"Azure Storage Account. Secure transfer to storage accounts should be enabled"},"type":"String"},"StorageminimumTlsVersion":{"allowedValues":["TLS1_2","TLS1_1","TLS1_0"],"defaultValue":"TLS1_2","metadata":{"description":"Select version  minimum TLS version on Azure Storage Account to enforce","displayName":"Storage Account select minimum TLS version"},"type":"String"},"WebAppServiceHttpsEffect":{"allowedValues":["Audit","Disabled","Deny"],"defaultValue":"Audit","metadata":{"description":"Choose Deny or Audit in combination with Append policy. Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks.","displayName":"App Service Web App. Web Application should only be accessible over HTTPS. Choose Deny or Audit in combination with Append policy."},"type":"String"},"WebAppServiceLatestTlsEffect":{"allowedValues":["AuditIfNotExists","Disabled"],"defaultValue":"AuditIfNotExists","metadata":{"description":"Only Audit, deny not possible as it is a related resource. Upgrade to the latest TLS version.","displayName":"App Service Web App. Latest TLS version should be used in your Web App"},"type":"String"}}'
          policy_definition_group: []
          policy_definition_reference:
            - parameter_values: '{"effect":{"value":"[parameters(''AppServiceHttpEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-httpsonly
              policy_group_names: null
              reference_id: AppServiceHttpEffect
            - parameter_values: '{"effect":{"value":"[parameters(''AppServiceTlsVersionEffect'')]"},"minTlsVersion":{"value":"[parameters(''AppServiceminTlsVersion'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-latestTLS
              policy_group_names: null
              reference_id: AppServiceminTlsVersion
            - parameter_values: '{"effect":{"value":"[parameters(''APIAppServiceLatestTlsEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/8cb6aa8b-9e41-4f4e-aa25-089a7ac2581e
              policy_group_names: null
              reference_id: APIAppServiceLatestTlsEffect
            - parameter_values: '{"effect":{"value":"[parameters(''FunctionLatestTlsEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/f9d614c5-c173-4d56-95a7-b4437057d193
              policy_group_names: null
              reference_id: FunctionLatestTlsEffect
            - parameter_values: '{"effect":{"value":"[parameters(''WebAppServiceLatestTlsEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/f0e6e85b-9b9f-4a4b-b67b-f730d42f1b0b
              policy_group_names: null
              reference_id: WebAppServiceLatestTlsEffect
            - parameter_values: '{"effect":{"value":"[parameters(''APIAppServiceHttpsEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceApiApp-http
              policy_group_names: null
              reference_id: APIAppServiceHttpsEffect
            - parameter_values: '{"effect":{"value":"[parameters(''FunctionServiceHttpsEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceFunctionApp-http
              policy_group_names: null
              reference_id: FunctionServiceHttpsEffect
            - parameter_values: '{"effect":{"value":"[parameters(''WebAppServiceHttpsEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceWebApp-http
              policy_group_names: null
              reference_id: WebAppServiceHttpsEffect
            - parameter_values: '{"effect":{"value":"[parameters(''AKSIngressHttpsOnlyEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/1a5b4dca-0b6f-4cf5-907c-56316bc1bf3d
              policy_group_names: null
              reference_id: AKSIngressHttpsOnlyEffect
            - parameter_values: '{"effect":{"value":"[parameters(''MySQLEnableSSLDeployEffect'')]"},"minimalTlsVersion":{"value":"[parameters(''MySQLminimalTlsVersion'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-MySQL-sslEnforcement
              policy_group_names: null
              reference_id: MySQLEnableSSLDeployEffect
            - parameter_values: '{"effect":{"value":"[parameters(''MySQLEnableSSLEffect'')]"},"minimalTlsVersion":{"value":"[parameters(''MySQLminimalTlsVersion'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-MySql-http
              policy_group_names: null
              reference_id: MySQLEnableSSLEffect
            - parameter_values: '{"effect":{"value":"[parameters(''PostgreSQLEnableSSLDeployEffect'')]"},"minimalTlsVersion":{"value":"[parameters(''PostgreSQLminimalTlsVersion'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-PostgreSQL-sslEnforcement
              policy_group_names: null
              reference_id: PostgreSQLEnableSSLDeployEffect
            - parameter_values: '{"effect":{"value":"[parameters(''PostgreSQLEnableSSLEffect'')]"},"minimalTlsVersion":{"value":"[parameters(''PostgreSQLminimalTlsVersion'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-PostgreSql-http
              policy_group_names: null
              reference_id: PostgreSQLEnableSSLEffect
            - parameter_values: '{"effect":{"value":"[parameters(''RedisTLSDeployEffect'')]"},"minimumTlsVersion":{"value":"[parameters(''RedisMinTlsVersion'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-sslEnforcement
              policy_group_names: null
              reference_id: RedisTLSDeployEffect
            - parameter_values: '{"effect":{"value":"[parameters(''RedisTLSDeployEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-disableNonSslPort
              policy_group_names: null
              reference_id: RedisdisableNonSslPort
            - parameter_values: '{"effect":{"value":"[parameters(''RedisTLSEffect'')]"},"minimumTlsVersion":{"value":"[parameters(''RedisMinTlsVersion'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-Redis-http
              policy_group_names: null
              reference_id: RedisDenyhttps
            - parameter_values: '{"effect":{"value":"[parameters(''SQLManagedInstanceTLSDeployEffect'')]"},"minimalTlsVersion":{"value":"[parameters(''SQLManagedInstanceMinTlsVersion'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-SqlMi-minTLS
              policy_group_names: null
              reference_id: SQLManagedInstanceTLSDeployEffect
            - parameter_values: '{"effect":{"value":"[parameters(''SQLManagedInstanceTLSEffect'')]"},"minimalTlsVersion":{"value":"[parameters(''SQLManagedInstanceMinTlsVersion'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-SqlMi-minTLS
              policy_group_names: null
              reference_id: SQLManagedInstanceTLSEffect
            - parameter_values: '{"effect":{"value":"[parameters(''SQLServerTLSDeployEffect'')]"},"minimalTlsVersion":{"value":"[parameters(''SQLServerminTlsVersion'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-SQL-minTLS
              policy_group_names: null
              reference_id: SQLServerTLSDeployEffect
            - parameter_values: '{"effect":{"value":"[parameters(''SQLServerTLSEffect'')]"},"minimalTlsVersion":{"value":"[parameters(''SQLServerminTlsVersion'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-Sql-minTLS
              policy_group_names: null
              reference_id: SQLServerTLSEffect
            - parameter_values: '{"effect":{"value":"[parameters(''StorageHttpsEnabledEffect'')]"},"minimumTlsVersion":{"value":"[parameters(''StorageMinimumTlsVersion'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-Storage-minTLS
              policy_group_names: null
              reference_id: StorageHttpsEnabledEffect
            - parameter_values: '{"effect":{"value":"[parameters(''StorageDeployHttpsEnabledEffect'')]"},"minimumTlsVersion":{"value":"[parameters(''StorageMinimumTlsVersion'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Storage-sslEnforcement
              policy_group_names: null
              reference_id: StorageDeployHttpsEnabledEffect
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Encryption-CMK"]
        mode: managed
        type: azurerm_policy_set_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Encryption-CMK
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deny or Audit resources without Encryption with a customer-managed key (CMK)
          display_name: Deny or Audit resources without Encryption with a customer-managed key (CMK)
          management_group_name: myorg-1
          metadata: '{"category":"Encryption","version":"1.0.0"}'
          name: Enforce-Encryption-CMK
          parameters: '{"ACRCmkEffect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Audit","metadata":{"description":"Use customer-managed keys to manage the encryption at rest of the contents of your registries. By default, the data is encrypted at rest with service-managed keys, but customer-managed keys (CMK) are commonly required to meet regulatory compliance standards. CMKs enable the data to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management. Learn more about CMK encryption at https://aka.ms/acr/CMK.","displayName":"Container registries should be encrypted with a customer-managed key (CMK)"},"type":"String"},"AksCmkEffect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Audit","metadata":{"description":"Encrypting OS and data disks using customer-managed keys provides more control and greater flexibility in key management. This is a common requirement in many regulatory and industry compliance standards.","displayName":"Azure Kubernetes Service clusters both operating systems and data disks should be encrypted by customer-managed keys"},"type":"String"},"AzureBatchCMKEffect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Audit","metadata":{"description":"Use customer-managed keys (CMKs) to manage the encryption at rest of your Batch account''s data. By default, customer data is encrypted with service-managed keys, but CMKs are commonly required to meet regulatory compliance standards. CMKs enable the data to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management. Learn more about CMK encryption at https://aka.ms/Batch-CMK.","displayName":"Azure Batch account should use customer-managed keys to encrypt data"},"type":"String"},"CognitiveServicesCMKEffect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Audit","metadata":{"description":"Customer-managed keys (CMK) are commonly required to meet regulatory compliance standards. CMKs enable the data stored in Cognitive Services to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management. Learn more about CMK encryption at https://aka.ms/cosmosdb-cmk.","displayName":"Cognitive Services accounts should enable data encryption with a customer-managed key (CMK)"},"type":"String"},"CosmosCMKEffect":{"allowedValues":["audit","deny","disabled"],"defaultValue":"audit","metadata":{"description":"Use customer-managed keys to manage the encryption at rest of your Azure Cosmos DB. By default, the data is encrypted at rest with service-managed keys, but customer-managed keys (CMK) are commonly required to meet regulatory compliance standards. CMKs enable the data to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management. Learn more about CMK encryption at https://aka.ms/cosmosdb-cmk.","displayName":"Azure Cosmos DB accounts should use customer-managed keys to encrypt data at rest"},"type":"String"},"DataBoxCMKEffect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Audit","metadata":{"description":"Use a customer-managed key to control the encryption of the device unlock password for Azure Data Box. Customer-managed keys also help manage access to the device unlock password by the Data Box service in order to prepare the device and copy data in an automated manner. The data on the device itself is already encrypted at rest with Advanced Encryption Standard 256-bit encryption, and the device unlock password is encrypted by default with a Microsoft managed key.","displayName":"Azure Data Box jobs should use a customer-managed key to encrypt the device unlock password"},"type":"String"},"EncryptedVMDisksEffect":{"allowedValues":["AuditIfNotExists","Disabled"],"defaultValue":"AuditIfNotExists","metadata":{"description":"Virtual machines without an enabled disk encryption will be monitored by Azure Security Center as recommendations.","displayName":"Disk encryption should be applied on virtual machines"},"type":"String"},"HealthcareAPIsCMKEffect":{"allowedValues":["audit","disabled"],"defaultValue":"audit","metadata":{"description":"Use a customer-managed key to control the encryption at rest of the data stored in Azure API for FHIR when this is a regulatory or compliance requirement. Customer-managed keys also deliver double encryption by adding a second layer of encryption on top of the default one done with service-managed keys.","displayName":"Azure API for FHIR should use a customer-managed key (CMK) to encrypt data at rest"},"type":"String"},"MySQLCMKEffect":{"allowedValues":["AuditIfNotExists","Disabled"],"defaultValue":"AuditIfNotExists","metadata":{"description":"Use customer-managed keys to manage the encryption at rest of your MySQL servers. By default, the data is encrypted at rest with service-managed keys, but customer-managed keys (CMK) are commonly required to meet regulatory compliance standards. CMKs enable the data to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management.","displayName":"Azure MySQL servers bring your own key data protection should be enabled"},"type":"String"},"PostgreSQLCMKEffect":{"allowedValues":["AuditIfNotExists","Disabled"],"defaultValue":"AuditIfNotExists","metadata":{"description":"Use customer-managed keys to manage the encryption at rest of your PostgreSQL servers. By default, the data is encrypted at rest with service-managed keys, but customer-managed keys (CMK) are commonly required to meet regulatory compliance standards. CMKs enable the data to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management.","displayName":"Azure PostgreSQL servers bring your own key data protection should be enabled"},"type":"String"},"SqlServerTDECMKEffect":{"allowedValues":["AuditIfNotExists","Disabled"],"defaultValue":"AuditIfNotExists","metadata":{"description":"Implementing Transparent Data Encryption (TDE) with your own key provides increased transparency and control over the TDE Protector, increased security with an HSM-backed external service, and promotion of separation of duties. This recommendation applies to organizations with a related compliance requirement.","displayName":"SQL servers should use customer-managed keys to encrypt data at rest"},"type":"String"},"StorageCMKEffect":{"allowedValues":["Audit","Disabled"],"defaultValue":"Audit","metadata":{"description":"Secure your storage account with greater flexibility using customer-managed keys (CMKs). When you specify a CMK, that key is used to protect and control access to the key that encrypts your data. Using CMKs provides additional capabilities to control rotation of the key encryption key or cryptographically erase data.","displayName":"Storage accounts should use customer-managed key (CMK) for encryption, no deny as this would result in not able to create storage account because the first need of MSI for encryption"},"type":"String"},"StreamAnalyticsCMKEffect":{"allowedValues":["audit","deny","disabled"],"defaultValue":"audit","metadata":{"description":"Use customer-managed keys when you want to securely store any metadata and private data assets of your Stream Analytics jobs in your storage account. This gives you total control over how your Stream Analytics data is encrypted.","displayName":"Azure Stream Analytics jobs should use customer-managed keys to encrypt data"},"type":"String"},"SynapseWorkspaceCMKEffect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Audit","metadata":{"description":"Use customer-managed keys to control the encryption at rest of the data stored in Azure Synapse workspaces. Customer-managed keys deliver double encryption by adding a second layer of encryption on top of the default encryption with service-managed keys.","displayName":"Azure Synapse workspaces should use customer-managed keys to encrypt data at rest"},"type":"String"},"WorkspaceCMKEffect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Audit","metadata":{"description":"Manage encryption at rest of your Azure Machine Learning workspace data with customer-managed keys (CMK). By default, customer data is encrypted with service-managed keys, but CMKs are commonly required to meet regulatory compliance standards. CMKs enable the data to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management. Learn more about CMK encryption at https://aka.ms/azureml-workspaces-cmk.","displayName":"Azure Machine Learning workspaces should be encrypted with a customer-managed key (CMK)"},"type":"String"}}'
          policy_definition_group: []
          policy_definition_reference:
            - parameter_values: '{"effect":{"value":"[parameters(''ACRCmkEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/5b9159ae-1701-4a6f-9a7a-aa9c8ddd0580
              policy_group_names: null
              reference_id: ACRCmkDeny
            - parameter_values: '{"effect":{"value":"[parameters(''AksCmkEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/7d7be79c-23ba-4033-84dd-45e2a5ccdd67
              policy_group_names: null
              reference_id: AksCmkDeny
            - parameter_values: '{"effect":{"value":"[parameters(''WorkspaceCMKEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/ba769a63-b8cc-4b2d-abf6-ac33c7204be8
              policy_group_names: null
              reference_id: WorkspaceCMK
            - parameter_values: '{"effect":{"value":"[parameters(''CognitiveServicesCMKEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/67121cc7-ff39-4ab8-b7e3-95b84dab487d
              policy_group_names: null
              reference_id: CognitiveServicesCMK
            - parameter_values: '{"effect":{"value":"[parameters(''CosmosCMKEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/1f905d99-2ab7-462c-a6b0-f709acca6c8f
              policy_group_names: null
              reference_id: CosmosCMKEffect
            - parameter_values: '{"effect":{"value":"[parameters(''DataBoxCMKEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/86efb160-8de7-451d-bc08-5d475b0aadae
              policy_group_names: null
              reference_id: DataBoxCMKEffect
            - parameter_values: '{"effect":{"value":"[parameters(''StreamAnalyticsCMKEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/87ba29ef-1ab3-4d82-b763-87fcd4f531f7
              policy_group_names: null
              reference_id: StreamAnalyticsCMKEffect
            - parameter_values: '{"effect":{"value":"[parameters(''SynapseWorkspaceCMKEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/f7d52b2d-e161-4dfa-a82b-55e564167385
              policy_group_names: null
              reference_id: SynapseWorkspaceCMKEffect
            - parameter_values: '{"effect":{"value":"[parameters(''StorageCMKEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/6fac406b-40ca-413b-bf8e-0bf964659c25
              policy_group_names: null
              reference_id: StorageCMKEffect
            - parameter_values: '{"effect":{"value":"[parameters(''MySQLCMKEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/83cef61d-dbd1-4b20-a4fc-5fbc7da10833
              policy_group_names: null
              reference_id: MySQLCMKEffect
            - parameter_values: '{"effect":{"value":"[parameters(''PostgreSQLCMKEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/18adea5e-f416-4d0f-8aa8-d24321e3e274
              policy_group_names: null
              reference_id: PostgreSQLCMKEffect
            - parameter_values: '{"effect":{"value":"[parameters(''SqlServerTDECMKEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/0d134df8-db83-46fb-ad72-fe0c9428c8dd
              policy_group_names: null
              reference_id: SqlServerTDECMKEffect
            - parameter_values: '{"effect":{"value":"[parameters(''HealthcareAPIsCMKEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/051cba44-2429-45b9-9649-46cec11c7119
              policy_group_names: null
              reference_id: HealthcareAPIsCMKEffect
            - parameter_values: '{"effect":{"value":"[parameters(''AzureBatchCMKEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/99e9ccd8-3db9-4592-b0d1-14b1715a4d8a
              policy_group_names: null
              reference_id: AzureBatchCMKEffect
            - parameter_values: '{"effect":{"value":"[parameters(''EncryptedVMDisksEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/0961003e-5a0a-4549-abde-af6a37f2724d
              policy_group_names: null
              reference_id: EncryptedVMDisksEffect
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_1.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1-landing-zones/providers/Microsoft.Authorization/roleAssignments/2ad186ec-4b5f-5d32-92f6-aa2676ad35fe"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1-landing-zones/providers/Microsoft.Authorization/roleAssignments/2ad186ec-4b5f-5d32-92f6-aa2676ad35fe
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: 2ad186ec-4b5f-5d32-92f6-aa2676ad35fe
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/ed7f3fbd-7b88-4dd4-9017-9adb7ce333f8
          scope: /providers/Microsoft.Management/managementGroups/myorg-1-landing-zones
          timeouts: null
      - address: module.test_root_id_1.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1-landing-zones/providers/Microsoft.Authorization/roleAssignments/31af2501-af93-5784-913a-15ad609ce2b8"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1-landing-zones/providers/Microsoft.Authorization/roleAssignments/31af2501-af93-5784-913a-15ad609ce2b8
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: 31af2501-af93-5784-913a-15ad609ce2b8
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/5e467623-bb1f-42f4-a55d-6e525e11384b
          scope: /providers/Microsoft.Management/managementGroups/myorg-1-landing-zones
          timeouts: null
      - address: module.test_root_id_1.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1-landing-zones/providers/Microsoft.Authorization/roleAssignments/6b6d311c-b6a2-5285-816e-837e3869e4e8"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1-landing-zones/providers/Microsoft.Authorization/roleAssignments/6b6d311c-b6a2-5285-816e-837e3869e4e8
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: 6b6d311c-b6a2-5285-816e-837e3869e4e8
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/9980e02c-c2be-4d73-94e8-173b1dc7cf3c
          scope: /providers/Microsoft.Management/managementGroups/myorg-1-landing-zones
          timeouts: null
      - address: module.test_root_id_1.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1-landing-zones/providers/Microsoft.Authorization/roleAssignments/7b0f4838-7d32-5dc7-afc9-8aa689d9a176"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1-landing-zones/providers/Microsoft.Authorization/roleAssignments/7b0f4838-7d32-5dc7-afc9-8aa689d9a176
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: 7b0f4838-7d32-5dc7-afc9-8aa689d9a176
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/9b7fa17d-e63e-47b0-bb0a-15c516ac86ec
          scope: /providers/Microsoft.Management/managementGroups/myorg-1-landing-zones
          timeouts: null
      - address: module.test_root_id_1.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1-management/providers/Microsoft.Authorization/roleAssignments/2005fc05-9ccc-5057-9191-0f198aaae256"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1-management/providers/Microsoft.Authorization/roleAssignments/2005fc05-9ccc-5057-9191-0f198aaae256
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: 2005fc05-9ccc-5057-9191-0f198aaae256
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa
          scope: /providers/Microsoft.Management/managementGroups/myorg-1-management
          timeouts: null
      - address: module.test_root_id_1.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1-management/providers/Microsoft.Authorization/roleAssignments/4bd00d2f-3a23-546e-baee-4af803c8a770"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1-management/providers/Microsoft.Authorization/roleAssignments/4bd00d2f-3a23-546e-baee-4af803c8a770
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: 4bd00d2f-3a23-546e-baee-4af803c8a770
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293
          scope: /providers/Microsoft.Management/managementGroups/myorg-1-management
          timeouts: null
      - address: module.test_root_id_1.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/roleAssignments/056d0747-95c3-58a3-b4de-16c7f5cd219e"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/roleAssignments/056d0747-95c3-58a3-b4de-16c7f5cd219e
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: 056d0747-95c3-58a3-b4de-16c7f5cd219e
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293
          scope: /providers/Microsoft.Management/managementGroups/myorg-1
          timeouts: null
      - address: module.test_root_id_1.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/roleAssignments/37add7b1-1351-57dd-81fb-25b703c5155a"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/roleAssignments/37add7b1-1351-57dd-81fb-25b703c5155a
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: 37add7b1-1351-57dd-81fb-25b703c5155a
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293
          scope: /providers/Microsoft.Management/managementGroups/myorg-1
          timeouts: null
      - address: module.test_root_id_1.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/roleAssignments/3c94ff86-62ae-563c-ae90-f2695fc36a34"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/roleAssignments/3c94ff86-62ae-563c-ae90-f2695fc36a34
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: 3c94ff86-62ae-563c-ae90-f2695fc36a34
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa
          scope: /providers/Microsoft.Management/managementGroups/myorg-1
          timeouts: null
      - address: module.test_root_id_1.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/roleAssignments/a21636cf-dfc0-5be5-b47d-9f1d2365bbcc"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/roleAssignments/a21636cf-dfc0-5be5-b47d-9f1d2365bbcc
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: a21636cf-dfc0-5be5-b47d-9f1d2365bbcc
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd
          scope: /providers/Microsoft.Management/managementGroups/myorg-1
          timeouts: null
      - address: module.test_root_id_1.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/roleAssignments/a5474d73-62e2-58e0-b4e8-2008d25f22eb"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/roleAssignments/a5474d73-62e2-58e0-b4e8-2008d25f22eb
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: a5474d73-62e2-58e0-b4e8-2008d25f22eb
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c
          scope: /providers/Microsoft.Management/managementGroups/myorg-1
          timeouts: null
      - address: module.test_root_id_1.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/roleAssignments/bee44d3d-ef6c-5733-a080-6c6794c5b05e"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/roleAssignments/bee44d3d-ef6c-5733-a080-6c6794c5b05e
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: bee44d3d-ef6c-5733-a080-6c6794c5b05e
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/9980e02c-c2be-4d73-94e8-173b1dc7cf3c
          scope: /providers/Microsoft.Management/managementGroups/myorg-1
          timeouts: null
      - address: module.test_root_id_1.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/roleAssignments/c474b2ca-b4a5-5601-9940-301484c7be1f"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/roleAssignments/c474b2ca-b4a5-5601-9940-301484c7be1f
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: c474b2ca-b4a5-5601-9940-301484c7be1f
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa
          scope: /providers/Microsoft.Management/managementGroups/myorg-1
          timeouts: null
      - address: module.test_root_id_1.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/roleAssignments/c7e50cfe-7e88-57fc-ad88-8d2a141d48d1"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/roleAssignments/c7e50cfe-7e88-57fc-ad88-8d2a141d48d1
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: c7e50cfe-7e88-57fc-ad88-8d2a141d48d1
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293
          scope: /providers/Microsoft.Management/managementGroups/myorg-1
          timeouts: null
      - address: module.test_root_id_1.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/roleAssignments/d8e913da-5931-5534-aea5-ffcd1be8b1c3"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/roleAssignments/d8e913da-5931-5534-aea5-ffcd1be8b1c3
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: d8e913da-5931-5534-aea5-ffcd1be8b1c3
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293
          scope: /providers/Microsoft.Management/managementGroups/myorg-1
          timeouts: null
      - address: module.test_root_id_1.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/roleAssignments/f94460ad-70d7-5bd3-ad77-0265496f97f8"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/roleAssignments/f94460ad-70d7-5bd3-ad77-0265496f97f8
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: f94460ad-70d7-5bd3-ad77-0265496f97f8
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293
          scope: /providers/Microsoft.Management/managementGroups/myorg-1
          timeouts: null
      - address: module.test_root_id_1.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/roleAssignments/fd5358c7-a8f4-5c93-a261-728c7cef9ed4"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/roleAssignments/fd5358c7-a8f4-5c93-a261-728c7cef9ed4
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: fd5358c7-a8f4-5c93-a261-728c7cef9ed4
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293
          scope: /providers/Microsoft.Management/managementGroups/myorg-1
          timeouts: null
      - address: module.test_root_id_1.azurerm_role_definition.enterprise_scale["/providers/Microsoft.Authorization/roleDefinitions/6820ba71-4208-5c29-9f96-5f130ae2abdc"]
        mode: managed
        type: azurerm_role_definition
        name: enterprise_scale
        index: /providers/Microsoft.Authorization/roleDefinitions/6820ba71-4208-5c29-9f96-5f130ae2abdc
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 1
        values:
          assignable_scopes:
            - /providers/Microsoft.Management/managementGroups/myorg-1
          description: Enterprise-scale custom Role Definition. Grants full access to manage Virtual Network subnets, but no other network resources.
          name: '[MYORG-1] Network-Subnet-Contributor'
          permissions:
            - actions:
                - Microsoft.Authorization/*/read
                - Microsoft.Insights/alertRules/*
                - Microsoft.ResourceHealth/availabilityStatuses/read
                - Microsoft.Resources/deployments/*
                - Microsoft.Resources/subscriptions/resourceGroups/read
                - Microsoft.Support/*
                - Microsoft.Network/*/read
                - Microsoft.Network/virtualNetworks/subnets/*
              data_actions: null
              not_actions: []
              not_data_actions: null
          role_definition_id: 6820ba71-4208-5c29-9f96-5f130ae2abdc
          scope: /providers/Microsoft.Management/managementGroups/myorg-1
          timeouts: null
      - address: module.test_root_id_1.time_sleep.after_azurerm_management_group
        mode: managed
        type: time_sleep
        name: after_azurerm_management_group
        provider_name: registry.terraform.io/hashicorp/time
        schema_version: 0
        values:
          create_duration: 30s
          destroy_duration: 0s
          triggers:
            azurerm_management_group_level_1: '["/providers/Microsoft.Management/managementGroups/myorg-1"]'
            azurerm_management_group_level_2: '["/providers/Microsoft.Management/managementGroups/myorg-1-decommissioned","/providers/Microsoft.Management/managementGroups/myorg-1-landing-zones","/providers/Microsoft.Management/managementGroups/myorg-1-platform","/providers/Microsoft.Management/managementGroups/myorg-1-sandboxes"]'
            azurerm_management_group_level_3: '["/providers/Microsoft.Management/managementGroups/myorg-1-connectivity","/providers/Microsoft.Management/managementGroups/myorg-1-identity","/providers/Microsoft.Management/managementGroups/myorg-1-management"]'
            azurerm_management_group_level_4: '[]'
            azurerm_management_group_level_5: '[]'
            azurerm_management_group_level_6: '[]'
      - address: module.test_root_id_1.time_sleep.after_azurerm_policy_assignment
        mode: managed
        type: time_sleep
        name: after_azurerm_policy_assignment
        provider_name: registry.terraform.io/hashicorp/time
        schema_version: 0
        values:
          create_duration: 30s
          destroy_duration: 0s
          triggers:
            azurerm_policy_assignment_enterprise_scale: '["/providers/Microsoft.Management/managementGroups/myorg-1-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-IP-Forwarding","/providers/Microsoft.Management/managementGroups/myorg-1-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Priv-Containers-AKS","/providers/Microsoft.Management/managementGroups/myorg-1-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Priv-Escalation-AKS","/providers/Microsoft.Management/managementGroups/myorg-1-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-RDP-From-Internet","/providers/Microsoft.Management/managementGroups/myorg-1-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Storage-http","/providers/Microsoft.Management/managementGroups/myorg-1-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Subnet-Without-Nsg","/providers/Microsoft.Management/managementGroups/myorg-1-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-http-Ingress-AKS","/providers/Microsoft.Management/managementGroups/myorg-1-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-AKS-Policy","/providers/Microsoft.Management/managementGroups/myorg-1-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-DB-Auditing","/providers/Microsoft.Management/managementGroups/myorg-1-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-Security","/providers/Microsoft.Management/managementGroups/myorg-1-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Backup","/providers/Microsoft.Management/managementGroups/myorg-1-management/providers/Microsoft.Authorization/policyAssignments/Deploy-Log-Analytics","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyAssignments/Deploy-ASC-Defender","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyAssignments/Deploy-ASC-Monitoring","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyAssignments/Deploy-AzActivity-Log","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyAssignments/Deploy-LX-Arc-Monitoring","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyAssignments/Deploy-Resource-Diag","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Monitoring","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyAssignments/Deploy-VMSS-Monitoring","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyAssignments/Deploy-WS-Arc-Monitoring"]'
      - address: module.test_root_id_1.time_sleep.after_azurerm_policy_definition
        mode: managed
        type: time_sleep
        name: after_azurerm_policy_definition
        provider_name: registry.terraform.io/hashicorp/time
        schema_version: 0
        values:
          create_duration: 30s
          destroy_duration: 0s
          triggers:
            azurerm_policy_definition_enterprise_scale: '["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-httpsonly","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-latestTLS","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Append-KV-SoftDelete","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-disableNonSslPort","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-sslEnforcement","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-AA-child-resources","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-AppGW-Without-WAF","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceApiApp-http","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceFunctionApp-http","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceWebApp-http","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-MySql-http","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-PostgreSql-http","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-Private-DNS-Zones","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-Aks","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-CosmosDB","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-KeyVault","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-MariaDB","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-MySQL","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-PostgreSql","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-Sql","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-Storage","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicIP","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-RDP-From-Internet","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-Redis-http","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-Sql-minTLS","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-SqlMi-minTLS","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-Storage-minTLS","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Nsg","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Udr","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-VNET-Peer-Cross-Sub","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deny-VNet-Peering","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-ACR","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-AKS","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-AKV","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-ARM","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-AppSrv","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-DNS","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-SA","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-SQLVM","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-Sql","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-VMs","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-SecurityContacts","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Budget","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-DDoSProtection","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-Blob-PrivateEndpoint","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-File-PrivateEndpoint","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-KeyVault-PrivateEndpoint","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-Queue-PrivateEndpoint","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-Sql-PrivateEndpoint","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-Table-PrivateEndpoint","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AA","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACI","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACR","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AKS","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-APIMgmt","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ActivityLog","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AnalysisService","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApiForFHIR","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApplicationGateway","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Batch","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CDNEndpoints","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CognitiveServices","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CosmosDB","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DLAnalytics","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataExplorerCluster","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataFactory","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataLakeStore","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Databricks","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSub","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSystemTopic","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridTopic","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventHub","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ExpressRoute","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Firewall","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-FrontDoor","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Function","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-HDInsight","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-KeyVault","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LoadBalancer","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogicAppsISE","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogicAppsWF","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MariaDB","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MediaService","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MlWorkspace","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MySQL","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NIC","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NetworkSecurityGroups","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PostgreSQL","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PowerBIEmbedded","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-RecoveryVault","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-RedisCache","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Relay","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLDBs","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLElasticPools","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLMI","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SearchServices","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ServiceBus","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SignalR","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-StreamAnalytics","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TimeSeriesInsights","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TrafficManager","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VM","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VMSS","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VNetGW","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VirtualNetwork","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDAppGroup","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDHostPools","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDWorkspace","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WebServerFarm","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Website","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-iotHub","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-FirewallPolicy","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-HUB","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-LA-Config","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Log-Analytics","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-MySQL-sslEnforcement","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs-to-LA","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-PostgreSQL-sslEnforcement","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-SQL-minTLS","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-AuditingSettings","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-SecurityAlertPolicies","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-Tde","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-vulnerabilityAssessments","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-SqlMi-minTLS","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Storage-sslEnforcement","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-VNET-HubSpoke","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-Windows-DomainJoin","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-vHUB","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-vNet","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policyDefinitions/Deploy-vWAN"]'
      - address: module.test_root_id_1.time_sleep.after_azurerm_policy_set_definition
        mode: managed
        type: time_sleep
        name: after_azurerm_policy_set_definition
        provider_name: registry.terraform.io/hashicorp/time
        schema_version: 0
        values:
          create_duration: 30s
          destroy_duration: 0s
          triggers:
            azurerm_policy_set_definition_enterprise_scale: '["/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policySetDefinitions/Deny-PublicEndpoints","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policySetDefinitions/Deploy-ASC-Config","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Diag-LogAnalytics","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Sql-Security","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policySetDefinitions/Enforce-EncryptTransit","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Encryption-CMK"]'
      - address: module.test_root_id_1.time_sleep.after_azurerm_role_assignment
        mode: managed
        type: time_sleep
        name: after_azurerm_role_assignment
        provider_name: registry.terraform.io/hashicorp/time
        schema_version: 0
        values:
          create_duration: 0s
          destroy_duration: 0s
          triggers:
            azurerm_policy_assignment_enterprise_scale: '["/providers/Microsoft.Management/managementGroups/myorg-1-landing-zones/providers/Microsoft.Authorization/roleAssignments/2ad186ec-4b5f-5d32-92f6-aa2676ad35fe","/providers/Microsoft.Management/managementGroups/myorg-1-landing-zones/providers/Microsoft.Authorization/roleAssignments/31af2501-af93-5784-913a-15ad609ce2b8","/providers/Microsoft.Management/managementGroups/myorg-1-landing-zones/providers/Microsoft.Authorization/roleAssignments/6b6d311c-b6a2-5285-816e-837e3869e4e8","/providers/Microsoft.Management/managementGroups/myorg-1-landing-zones/providers/Microsoft.Authorization/roleAssignments/7b0f4838-7d32-5dc7-afc9-8aa689d9a176","/providers/Microsoft.Management/managementGroups/myorg-1-management/providers/Microsoft.Authorization/roleAssignments/2005fc05-9ccc-5057-9191-0f198aaae256","/providers/Microsoft.Management/managementGroups/myorg-1-management/providers/Microsoft.Authorization/roleAssignments/4bd00d2f-3a23-546e-baee-4af803c8a770","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/roleAssignments/056d0747-95c3-58a3-b4de-16c7f5cd219e","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/roleAssignments/37add7b1-1351-57dd-81fb-25b703c5155a","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/roleAssignments/3c94ff86-62ae-563c-ae90-f2695fc36a34","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/roleAssignments/a21636cf-dfc0-5be5-b47d-9f1d2365bbcc","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/roleAssignments/a5474d73-62e2-58e0-b4e8-2008d25f22eb","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/roleAssignments/bee44d3d-ef6c-5733-a080-6c6794c5b05e","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/roleAssignments/c474b2ca-b4a5-5601-9940-301484c7be1f","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/roleAssignments/c7e50cfe-7e88-57fc-ad88-8d2a141d48d1","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/roleAssignments/d8e913da-5931-5534-aea5-ffcd1be8b1c3","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/roleAssignments/f94460ad-70d7-5bd3-ad77-0265496f97f8","/providers/Microsoft.Management/managementGroups/myorg-1/providers/Microsoft.Authorization/roleAssignments/fd5358c7-a8f4-5c93-a261-728c7cef9ed4"]'
      - address: module.test_root_id_1.time_sleep.after_azurerm_role_definition
        mode: managed
        type: time_sleep
        name: after_azurerm_role_definition
        provider_name: registry.terraform.io/hashicorp/time
        schema_version: 0
        values:
          create_duration: 60s
          destroy_duration: 0s
          triggers:
            azurerm_role_definition_enterprise_scale: '["/providers/Microsoft.Authorization/roleDefinitions/6820ba71-4208-5c29-9f96-5f130ae2abdc"]'
    address: module.test_root_id_1
  - resources:
      - address: module.test_root_id_2.azurerm_management_group.level_1["/providers/Microsoft.Management/managementGroups/myorg-2"]
        mode: managed
        type: azurerm_management_group
        name: level_1
        index: /providers/Microsoft.Management/managementGroups/myorg-2
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          display_name: My Organization-2
          name: myorg-2
          parent_management_group_id: /providers/Microsoft.Management/managementGroups/dac8feee-8768-4fbd-9cf9-9d96d4718018
          timeouts: null
      - address: module.test_root_id_2.azurerm_management_group.level_2["/providers/Microsoft.Management/managementGroups/myorg-2-decommissioned"]
        mode: managed
        type: azurerm_management_group
        name: level_2
        index: /providers/Microsoft.Management/managementGroups/myorg-2-decommissioned
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          display_name: Decommissioned
          name: myorg-2-decommissioned
          parent_management_group_id: /providers/Microsoft.Management/managementGroups/myorg-2
          timeouts: null
      - address: module.test_root_id_2.azurerm_management_group.level_2["/providers/Microsoft.Management/managementGroups/myorg-2-landing-zones"]
        mode: managed
        type: azurerm_management_group
        name: level_2
        index: /providers/Microsoft.Management/managementGroups/myorg-2-landing-zones
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          display_name: Landing Zones
          name: myorg-2-landing-zones
          parent_management_group_id: /providers/Microsoft.Management/managementGroups/myorg-2
          timeouts: null
      - address: module.test_root_id_2.azurerm_management_group.level_2["/providers/Microsoft.Management/managementGroups/myorg-2-platform"]
        mode: managed
        type: azurerm_management_group
        name: level_2
        index: /providers/Microsoft.Management/managementGroups/myorg-2-platform
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          display_name: Platform
          name: myorg-2-platform
          parent_management_group_id: /providers/Microsoft.Management/managementGroups/myorg-2
          timeouts: null
      - address: module.test_root_id_2.azurerm_management_group.level_2["/providers/Microsoft.Management/managementGroups/myorg-2-sandboxes"]
        mode: managed
        type: azurerm_management_group
        name: level_2
        index: /providers/Microsoft.Management/managementGroups/myorg-2-sandboxes
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          display_name: Sandboxes
          name: myorg-2-sandboxes
          parent_management_group_id: /providers/Microsoft.Management/managementGroups/myorg-2
          timeouts: null
      - address: module.test_root_id_2.azurerm_management_group.level_3["/providers/Microsoft.Management/managementGroups/myorg-2-connectivity"]
        mode: managed
        type: azurerm_management_group
        name: level_3
        index: /providers/Microsoft.Management/managementGroups/myorg-2-connectivity
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          display_name: Connectivity
          name: myorg-2-connectivity
          parent_management_group_id: /providers/Microsoft.Management/managementGroups/myorg-2-platform
          timeouts: null
      - address: module.test_root_id_2.azurerm_management_group.level_3["/providers/Microsoft.Management/managementGroups/myorg-2-demo-corp"]
        mode: managed
        type: azurerm_management_group
        name: level_3
        index: /providers/Microsoft.Management/managementGroups/myorg-2-demo-corp
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          display_name: Corp
          name: myorg-2-demo-corp
          parent_management_group_id: /providers/Microsoft.Management/managementGroups/myorg-2-landing-zones
          timeouts: null
      - address: module.test_root_id_2.azurerm_management_group.level_3["/providers/Microsoft.Management/managementGroups/myorg-2-demo-online"]
        mode: managed
        type: azurerm_management_group
        name: level_3
        index: /providers/Microsoft.Management/managementGroups/myorg-2-demo-online
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          display_name: Online
          name: myorg-2-demo-online
          parent_management_group_id: /providers/Microsoft.Management/managementGroups/myorg-2-landing-zones
          timeouts: null
      - address: module.test_root_id_2.azurerm_management_group.level_3["/providers/Microsoft.Management/managementGroups/myorg-2-demo-sap"]
        mode: managed
        type: azurerm_management_group
        name: level_3
        index: /providers/Microsoft.Management/managementGroups/myorg-2-demo-sap
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          display_name: SAP
          name: myorg-2-demo-sap
          parent_management_group_id: /providers/Microsoft.Management/managementGroups/myorg-2-landing-zones
          timeouts: null
      - address: module.test_root_id_2.azurerm_management_group.level_3["/providers/Microsoft.Management/managementGroups/myorg-2-identity"]
        mode: managed
        type: azurerm_management_group
        name: level_3
        index: /providers/Microsoft.Management/managementGroups/myorg-2-identity
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          display_name: Identity
          name: myorg-2-identity
          parent_management_group_id: /providers/Microsoft.Management/managementGroups/myorg-2-platform
          timeouts: null
      - address: module.test_root_id_2.azurerm_management_group.level_3["/providers/Microsoft.Management/managementGroups/myorg-2-management"]
        mode: managed
        type: azurerm_management_group
        name: level_3
        index: /providers/Microsoft.Management/managementGroups/myorg-2-management
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          display_name: Management
          name: myorg-2-management
          parent_management_group_id: /providers/Microsoft.Management/managementGroups/myorg-2-platform
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-IP-Forwarding"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-IP-Forwarding
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Network interfaces should disable IP forwarding.
          display_name: Deny-IP-Forwarding
          enforcement_mode: true
          identity:
            - type: None
          location: eastus
          name: Deny-IP-Forwarding
          not_scopes: []
          parameters: null
          policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/88c0b9da-ce96-4b03-9635-f29a937e2900
          scope: /providers/Microsoft.Management/managementGroups/myorg-2-landing-zones
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Priv-Containers-AKS"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Priv-Containers-AKS
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deny-Privileged-Containers-AKS.
          display_name: Deny-Privileged-Containers-AKS
          enforcement_mode: true
          identity:
            - type: None
          location: eastus
          name: Deny-Priv-Containers-AKS
          not_scopes: []
          parameters: '{"effect":{"value":"deny"}}'
          policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/95edb821-ddaf-4404-9732-666045e056b4
          scope: /providers/Microsoft.Management/managementGroups/myorg-2-landing-zones
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Priv-Escalation-AKS"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Priv-Escalation-AKS
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deny-Privileged-Escalations-AKS.
          display_name: Deny-Privileged-Escalations-AKS
          enforcement_mode: true
          identity:
            - type: None
          location: eastus
          name: Deny-Priv-Escalation-AKS
          not_scopes: []
          parameters: '{"effect":{"value":"deny"}}'
          policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/1c6e92c9-99f0-4e55-9cf2-0c234dc48f99
          scope: /providers/Microsoft.Management/managementGroups/myorg-2-landing-zones
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-RDP-From-Internet"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-RDP-From-Internet
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deny RDP access from the Internet.
          display_name: Deny-RDP-From-Internet
          enforcement_mode: true
          identity:
            - type: None
          location: eastus
          name: Deny-RDP-From-Internet
          not_scopes: []
          parameters: null
          policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-RDP-From-Internet
          scope: /providers/Microsoft.Management/managementGroups/myorg-2-landing-zones
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Storage-http"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Storage-http
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Enforce-Secure-Storage.
          display_name: Enforce-Secure-Storage
          enforcement_mode: true
          identity:
            - type: None
          location: eastus
          name: Deny-Storage-http
          not_scopes: []
          parameters: null
          policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/404c3081-a854-4457-ae30-26a93ef643f9
          scope: /providers/Microsoft.Management/managementGroups/myorg-2-landing-zones
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Subnet-Without-Nsg"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Subnet-Without-Nsg
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deny provisioning of subnet without NSG attached.
          display_name: Deny-Subnet-Without-Nsg
          enforcement_mode: true
          identity:
            - type: None
          location: eastus
          name: Deny-Subnet-Without-Nsg
          not_scopes: []
          parameters: null
          policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Nsg
          scope: /providers/Microsoft.Management/managementGroups/myorg-2-landing-zones
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-http-Ingress-AKS"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-http-Ingress-AKS
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Enforce-Https-Ingress-AKS.
          display_name: Enforce-Https-Ingress-AKS
          enforcement_mode: true
          identity:
            - type: None
          location: eastus
          name: Deny-http-Ingress-AKS
          not_scopes: []
          parameters: '{"effect":{"value":"deny"}}'
          policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/1a5b4dca-0b6f-4cf5-907c-56316bc1bf3d
          scope: /providers/Microsoft.Management/managementGroups/myorg-2-landing-zones
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-AKS-Policy"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-AKS-Policy
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy-AKS-Policy.
          display_name: Deploy-AKS-Policy
          enforcement_mode: true
          identity:
            - type: SystemAssigned
          location: eastus
          name: Deploy-AKS-Policy
          not_scopes: []
          parameters: null
          policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/a8eff44f-8c92-45c3-a3fb-9880802d67a7
          scope: /providers/Microsoft.Management/managementGroups/myorg-2-landing-zones
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-DB-Auditing"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-DB-Auditing
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy-SQL-Audit.
          display_name: Deploy-SQL-Audit
          enforcement_mode: true
          identity:
            - type: SystemAssigned
          location: eastus
          name: Deploy-SQL-DB-Auditing
          not_scopes: []
          parameters: null
          policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/a6fb4358-5bf4-4ad7-ba82-2cd2f41ce5e9
          scope: /providers/Microsoft.Management/managementGroups/myorg-2-landing-zones
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-Security"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-Security
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy-SQL-Security.
          display_name: Deploy-SQL-Security
          enforcement_mode: true
          identity:
            - type: SystemAssigned
          location: eastus
          name: Deploy-SQL-Security
          not_scopes: []
          parameters: null
          policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/86a912f6-9a06-4e26-b447-11b16ba8659f
          scope: /providers/Microsoft.Management/managementGroups/myorg-2-landing-zones
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Backup"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Backup
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Ensures that Azure Backup is configured for Virtual Machines.
          display_name: Deploy-VM-Backup
          enforcement_mode: true
          identity:
            - type: SystemAssigned
          location: eastus
          name: Deploy-VM-Backup
          not_scopes: []
          parameters: null
          policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/98d0b9f8-fd90-49c9-88e2-d3baf3b0dd86
          scope: /providers/Microsoft.Management/managementGroups/myorg-2-landing-zones
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2-management/providers/Microsoft.Authorization/policyAssignments/Deploy-Log-Analytics"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2-management/providers/Microsoft.Authorization/policyAssignments/Deploy-Log-Analytics
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy-Log-Analytics.
          display_name: Deploy-Log-Analytics
          enforcement_mode: true
          identity:
            - type: SystemAssigned
          location: eastus
          name: Deploy-Log-Analytics
          not_scopes: []
          parameters: '{"automationAccountName":{"value":"myorg-2-automation"},"automationRegion":{"value":"eastus"},"effect":{"value":"DeployIfNotExists"},"retentionInDays":{"value":"30"},"rgName":{"value":"myorg-2-mgmt"},"workspaceName":{"value":"myorg-2-la"},"workspaceRegion":{"value":"eastus"}}'
          policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Log-Analytics
          scope: /providers/Microsoft.Management/managementGroups/myorg-2-management
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyAssignments/Deploy-ASC-Defender"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyAssignments/Deploy-ASC-Defender
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy-ASC-Defender.
          display_name: Deploy-ASC-Defender
          enforcement_mode: true
          identity:
            - type: SystemAssigned
          location: eastus
          name: Deploy-ASC-Defender
          not_scopes: []
          parameters: '{"ascExportResourceGroupLocation":{"value":"eastus"},"ascExportResourceGroupName":{"value":"myorg-2-asc-export"},"emailSecurityContact":{"value":"security_contact@replace_me"},"logAnalytics":{"value":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myorg-2-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-2-la"},"pricingTierAppServices":{"value":"Standard"},"pricingTierArm":{"value":"Standard"},"pricingTierContainerRegistry":{"value":"Standard"},"pricingTierDns":{"value":"Standard"},"pricingTierKeyVaults":{"value":"Standard"},"pricingTierKubernetesService":{"value":"Standard"},"pricingTierSqlServerVirtualMachines":{"value":"Standard"},"pricingTierSqlServers":{"value":"Standard"},"pricingTierStorageAccounts":{"value":"Standard"},"pricingTierVMs":{"value":"Standard"}}'
          policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policySetDefinitions/Deploy-ASC-Config
          scope: /providers/Microsoft.Management/managementGroups/myorg-2
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyAssignments/Deploy-ASC-Monitoring"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyAssignments/Deploy-ASC-Monitoring
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Enable Monitoring in Azure Security Center.
          display_name: Enable Monitoring in Azure Security Center
          enforcement_mode: true
          identity:
            - type: None
          location: eastus
          name: Deploy-ASC-Monitoring
          not_scopes: []
          parameters: '{"aadAuthenticationInSqlServerMonitoringEffect":{"value":"Disabled"},"diskEncryptionMonitoringEffect":{"value":"Disabled"},"encryptionOfAutomationAccountMonitoringEffect":{"value":"Disabled"},"identityDesignateLessThanOwnersMonitoringEffect":{"value":"Disabled"},"identityDesignateMoreThanOneOwnerMonitoringEffect":{"value":"Disabled"},"identityEnableMFAForWritePermissionsMonitoringEffect":{"value":"Disabled"},"identityRemoveDeprecatedAccountMonitoringEffect":{"value":"Disabled"},"identityRemoveDeprecatedAccountWithOwnerPermissionsMonitoringEffect":{"value":"Disabled"},"identityRemoveExternalAccountWithOwnerPermissionsMonitoringEffect":{"value":"Disabled"},"identityRemoveExternalAccountWithReadPermissionsMonitoringEffect":{"value":"Disabled"},"identityRemoveExternalAccountWithWritePermissionsMonitoringEffect":{"value":"Disabled"},"jitNetworkAccessMonitoringEffect":{"value":"Disabled"},"networkSecurityGroupsOnSubnetsMonitoringEffect":{"value":"AuditIfNotExists"},"sqlDbEncryptionMonitoringEffect":{"value":"Disabled"},"sqlManagedInstanceAdvancedDataSecurityEmailAdminsMonitoringEffect":{"value":"Disabled"},"sqlManagedInstanceAdvancedDataSecurityEmailsMonitoringEffect":{"value":"Disabled"},"sqlServerAdvancedDataSecurityEmailAdminsMonitoringEffect":{"value":"Disabled"},"sqlServerAdvancedDataSecurityMonitoringEffect":{"value":"Disabled"},"systemUpdatesMonitoringEffect":{"value":"Disabled"},"useRbacRulesMonitoringEffect":{"value":"Disabled"},"vmssSystemUpdatesMonitoringEffect":{"value":"Disabled"},"windowsDefenderExploitGuardMonitoringEffect":{"value":"Disabled"}}'
          policy_definition_id: /providers/Microsoft.Authorization/policySetDefinitions/1f3afdf9-d0c9-4c3d-847f-89da613e70a8
          scope: /providers/Microsoft.Management/managementGroups/myorg-2
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyAssignments/Deploy-AzActivity-Log"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyAssignments/Deploy-AzActivity-Log
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Ensures that Activity Log Diagnostics settings are set to push logs into Log Analytics workspace.
          display_name: Deploy Diagnostic Settings for Activity Log to Log Analytics workspace
          enforcement_mode: true
          identity:
            - type: SystemAssigned
          location: eastus
          name: Deploy-AzActivity-Log
          not_scopes: []
          parameters: '{"logAnalytics":{"value":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myorg-2-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-2-la"}}'
          policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ActivityLog
          scope: /providers/Microsoft.Management/managementGroups/myorg-2
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyAssignments/Deploy-LX-Arc-Monitoring"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyAssignments/Deploy-LX-Arc-Monitoring
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy-Linux-Arc-Monitoring.
          display_name: Deploy-Linux-Arc-Monitoring
          enforcement_mode: true
          identity:
            - type: SystemAssigned
          location: eastus
          name: Deploy-LX-Arc-Monitoring
          not_scopes: []
          parameters: '{"logAnalytics":{"value":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myorg-2-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-2-la"}}'
          policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/9d2b61b4-1d14-4a63-be30-d4498e7ad2cf
          scope: /providers/Microsoft.Management/managementGroups/myorg-2
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyAssignments/Deploy-Resource-Diag"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyAssignments/Deploy-Resource-Diag
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Ensures that Azure resources are configured to forward diagnostic logs and metrics to an Azure Log Analytics workspace.
          display_name: Deploy-Resource-Diag
          enforcement_mode: true
          identity:
            - type: SystemAssigned
          location: eastus
          name: Deploy-Resource-Diag
          not_scopes: []
          parameters: '{"logAnalytics":{"value":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myorg-2-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-2-la"}}'
          policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Diag-LogAnalytics
          scope: /providers/Microsoft.Management/managementGroups/myorg-2
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Monitoring"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Monitoring
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Ensures that Azure Monitor is configured for Virtual Machines.
          display_name: Deploy-VM-Monitoring
          enforcement_mode: true
          identity:
            - type: SystemAssigned
          location: eastus
          name: Deploy-VM-Monitoring
          not_scopes: []
          parameters: '{"logAnalytics_1":{"value":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myorg-2-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-2-la"}}'
          policy_definition_id: /providers/Microsoft.Authorization/policySetDefinitions/55f3eceb-5573-4f18-9695-226972c6d74a
          scope: /providers/Microsoft.Management/managementGroups/myorg-2
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyAssignments/Deploy-VMSS-Monitoring"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyAssignments/Deploy-VMSS-Monitoring
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Ensures that Azure Monitor is configured for Virtual Machine Scale Sets.
          display_name: Deploy-VMSS-Monitoring
          enforcement_mode: true
          identity:
            - type: SystemAssigned
          location: eastus
          name: Deploy-VMSS-Monitoring
          not_scopes: []
          parameters: '{"logAnalytics_1":{"value":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myorg-2-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-2-la"}}'
          policy_definition_id: /providers/Microsoft.Authorization/policySetDefinitions/75714362-cae7-409e-9b99-a8e5075b7fad
          scope: /providers/Microsoft.Management/managementGroups/myorg-2
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyAssignments/Deploy-WS-Arc-Monitoring"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyAssignments/Deploy-WS-Arc-Monitoring
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the Log Analytics agent to Windows Azure Arc machines if the agent isn't installed.
          display_name: Deploy-Windows-Arc-Monitoring
          enforcement_mode: true
          identity:
            - type: SystemAssigned
          location: eastus
          name: Deploy-WS-Arc-Monitoring
          not_scopes: []
          parameters: '{"logAnalytics":{"value":"/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myorg-2-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-2-la"}}'
          policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/69af7d4a-7b18-4044-93a9-2651498ef203
          scope: /providers/Microsoft.Management/managementGroups/myorg-2
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-httpsonly"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-httpsonly
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Appends the AppService sites object to ensure that  HTTPS only is enabled for  server/service authentication and protects data in transit from network layer eavesdropping attacks. Please note Append does not enforce compliance use then deny.
          display_name: AppService append enable https only setting to enforce https setting.
          management_group_name: myorg-2
          metadata: '{"category":"App Service","version":"1.0.0"}'
          mode: All
          name: Append-AppService-httpsonly
          parameters: '{"effect":{"allowedValues":["Append","Disabled"],"defaultValue":"Append","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Web/sites","field":"type"},{"field":"Microsoft.Web/sites/httpsOnly","notequals":true}]},"then":{"details":[{"field":"Microsoft.Web/sites/httpsOnly","value":true}],"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-latestTLS"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-latestTLS
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Append the AppService sites object to ensure that min Tls version is set to required minimum TLS version. Please note Append does not enforce compliance use then deny.
          display_name: AppService append sites with minimum TLS version to enforce.
          management_group_name: myorg-2
          metadata: '{"category":"App Service","version":"1.0.0"}'
          mode: Indexed
          name: Append-AppService-latestTLS
          parameters: '{"effect":{"allowedValues":["Append","Disabled"],"defaultValue":"Append","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"minTlsVersion":{"allowedValues":["1.2","1.0","1.1"],"defaultValue":"1.2","metadata":{"description":"Select version  minimum TLS version for a  Web App config to enforce","displayName":"Select version minimum TLS Web App config"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Web/sites/config","field":"type"},{"field":"Microsoft.Web/sites/config/minTlsVersion","notEquals":"[parameters(''minTlsVersion'')]"}]},"then":{"details":[{"field":"Microsoft.Web/sites/config/minTlsVersion","value":"[parameters(''minTlsVersion'')]"}],"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Append-KV-SoftDelete"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Append-KV-SoftDelete
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy enables you to ensure when a Key Vault is created with out soft delete enabled it will be added.
          display_name: KeyVault SoftDelete should be enabled
          management_group_name: myorg-2
          metadata: '{"category":"Key Vault","version":"1.0.0"}'
          mode: Indexed
          name: Append-KV-SoftDelete
          parameters: null
          policy_rule: '{"if":{"anyOf":[{"allOf":[{"equals":"Microsoft.KeyVault/vaults","field":"type"},{"field":"Microsoft.KeyVault/vaults/enableSoftDelete","notEquals":true}]}]},"then":{"details":[{"field":"Microsoft.KeyVault/vaults/enableSoftDelete","value":true}],"effect":"append"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-disableNonSslPort"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-disableNonSslPort
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Azure Cache for Redis Append and the enforcement that enableNonSslPort is disabled. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.
          display_name: Azure Cache for Redis Append and the enforcement that enableNonSslPort is disabled.
          management_group_name: myorg-2
          metadata: '{"category":"Cache","version":"1.0.0"}'
          mode: Indexed
          name: Append-Redis-disableNonSslPort
          parameters: '{"effect":{"allowedValues":["Append","Disabled","Modify"],"defaultValue":"Append","metadata":{"description":"Enable or disable the execution of the policy minimum TLS version Azure Cache for Redis","displayName":"Effect Azure Cache for Redis"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Cache/redis","field":"type"},{"anyOf":[{"equals":"true","field":"Microsoft.Cache/Redis/enableNonSslPort"}]}]},"then":{"details":[{"field":"Microsoft.Cache/Redis/enableNonSslPort","value":false}],"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-sslEnforcement"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-sslEnforcement
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Append a specific min TLS version requirement and enforce SSL on Azure Cache for Redis. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.
          display_name: Azure Cache for Redis Append a specific min TLS version requirement and enforce TLS.
          management_group_name: myorg-2
          metadata: '{"category":"Cache","version":"1.0.0"}'
          mode: Indexed
          name: Append-Redis-sslEnforcement
          parameters: '{"effect":{"allowedValues":["Append","Disabled"],"defaultValue":"Append","metadata":{"description":"Enable or disable the execution of the policy minimum TLS version Azure Cache for Redis","displayName":"Effect Azure Cache for Redis"},"type":"String"},"minimumTlsVersion":{"allowedValues":["1.2","1.1","1.0"],"defaultValue":"1.2","metadata":{"description":"Select version minimum TLS version Azure Cache for Redis to enforce","displayName":"Select version for Redis server"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Cache/redis","field":"type"},{"anyOf":[{"field":"Microsoft.Cache/Redis/minimumTlsVersion","notequals":"[parameters(''minimumTlsVersion'')]"}]}]},"then":{"details":[{"field":"Microsoft.Cache/Redis/minimumTlsVersion","value":"[parameters(''minimumTlsVersion'')]"}],"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-AA-child-resources"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-AA-child-resources
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy denies the creation of child resources on the Automation Account
          display_name: No child resources in Automation Account
          management_group_name: myorg-2
          metadata: '{"category":"Automation","version":"1.0.0"}'
          mode: Indexed
          name: Deny-AA-child-resources
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"field":"type","in":["Microsoft.Automation/automationAccounts/runbooks","Microsoft.Automation/automationAccounts/variables","Microsoft.Automation/automationAccounts/modules","Microsoft.Automation/automationAccounts/credentials","Microsoft.Automation/automationAccounts/connections","Microsoft.Automation/automationAccounts/certificates"]}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-AppGW-Without-WAF"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-AppGW-Without-WAF
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy enables you to restrict that Application Gateways is always deployed with WAF enabled
          display_name: Application Gateway should be deployed with WAF enabled
          management_group_name: myorg-2
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: Indexed
          name: Deny-AppGW-Without-WAF
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Network/applicationGateways","field":"type"},{"field":"Microsoft.Network/applicationGateways/sku.name","notequals":"WAF_v2"}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceApiApp-http"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceApiApp-http
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks.
          display_name: API App should only be accessible over HTTPS
          management_group_name: myorg-2
          metadata: '{"category":"App Service","version":"1.0.0"}'
          mode: Indexed
          name: Deny-AppServiceApiApp-http
          parameters: '{"effect":{"allowedValues":["Audit","Disabled","Deny"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Web/sites","field":"type"},{"field":"kind","like":"*api"},{"equals":"false","field":"Microsoft.Web/sites/httpsOnly"}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceFunctionApp-http"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceFunctionApp-http
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks.
          display_name: Function App should only be accessible over HTTPS
          management_group_name: myorg-2
          metadata: '{"category":"App Service","version":"1.0.0"}'
          mode: Indexed
          name: Deny-AppServiceFunctionApp-http
          parameters: '{"effect":{"allowedValues":["Audit","Disabled","Deny"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Web/sites","field":"type"},{"field":"kind","like":"functionapp*"},{"equals":"false","field":"Microsoft.Web/sites/httpsOnly"}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceWebApp-http"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceWebApp-http
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks.
          display_name: Web Application should only be accessible over HTTPS
          management_group_name: myorg-2
          metadata: '{"category":"App Service","version":"1.0.0"}'
          mode: Indexed
          name: Deny-AppServiceWebApp-http
          parameters: '{"effect":{"allowedValues":["Audit","Disabled","Deny"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Web/sites","field":"type"},{"field":"kind","like":"app*"},{"equals":"false","field":"Microsoft.Web/sites/httpsOnly"}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-MySql-http"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-MySql-http
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Azure Database for MySQL supports connecting your Azure Database for MySQL server to client applications using Secure Sockets Layer (SSL). Enforcing SSL connections between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.
          display_name: MySQL database servers enforce SSL connections.
          management_group_name: myorg-2
          metadata: '{"category":"SQL","version":"1.0.0"}'
          mode: Indexed
          name: Deny-MySql-http
          parameters: '{"effect":{"allowedValues":["Audit","Disabled","Deny"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"minimalTlsVersion":{"allowedValues":["TLS1_2","TLS1_0","TLS1_1","TLSEnforcementDisabled"],"defaultValue":"TLS1_2","metadata":{"description":"Select version  minimum TLS version Azure Database for MySQL server to enforce","displayName":"Select version minimum TLS for MySQL server"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.DBforMySQL/servers","field":"type"},{"anyOf":[{"exists":"false","field":"Microsoft.DBforMySQL/servers/sslEnforcement"},{"field":"Microsoft.DBforMySQL/servers/sslEnforcement","notEquals":"Enabled"},{"field":"Microsoft.DBforMySQL/servers/minimalTlsVersion","notequals":"[parameters(''minimalTlsVersion'')]"}]}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-PostgreSql-http"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-PostgreSql-http
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Azure Database for PostgreSQL supports connecting your Azure Database for PostgreSQL server to client applications using Secure Sockets Layer (SSL). Enforcing SSL connections between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.
          display_name: PostgreSQL database servers enforce SSL connection.
          management_group_name: myorg-2
          metadata: '{"category":"SQL","version":"1.0.1"}'
          mode: Indexed
          name: Deny-PostgreSql-http
          parameters: '{"effect":{"allowedValues":["Audit","Disabled","Deny"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"minimalTlsVersion":{"allowedValues":["TLS1_2","TLS1_0","TLS1_1","TLSEnforcementDisabled"],"defaultValue":"TLS1_2","metadata":{"description":"Select version  minimum TLS version Azure Database for MySQL server to enforce","displayName":"Select version minimum TLS for MySQL server"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.DBforPostgreSQL/servers","field":"type"},{"anyOf":[{"exists":"false","field":"Microsoft.DBforPostgreSQL/servers/sslEnforcement"},{"field":"Microsoft.DBforPostgreSQL/servers/sslEnforcement","notEquals":"Enabled"},{"field":"Microsoft.DBforPostgreSQL/servers/minimalTlsVersion","notequals":"[parameters(''minimalTlsVersion'')]"}]}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-Private-DNS-Zones"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-Private-DNS-Zones
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy denies the creation of a private DNS in the current scope, used in combination with policies that create centralized private DNS in connectivity subscription
          display_name: Deny the creation of private DNS
          management_group_name: myorg-2
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: Indexed
          name: Deny-Private-DNS-Zones
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Network/privateDnsZones","field":"type"},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-Aks"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-Aks
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy denies  the creation of  Azure Kubernetes Service non-private clusters
          display_name: Public network access on AKS API should be disabled
          management_group_name: myorg-2
          metadata: '{"category":"Kubernetes","version":"1.0.0"}'
          mode: Indexed
          name: Deny-PublicEndpoint-Aks
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.ContainerService/managedClusters","field":"type"},{"field":"Microsoft.ContainerService/managedClusters/apiServerAccessProfile.enablePrivateCluster","notequals":"true"}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-CosmosDB"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-CosmosDB
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy denies that  Cosmos database accounts  are created with out public network access is disabled.
          display_name: Public network access should be disabled for CosmosDB
          management_group_name: myorg-2
          metadata: '{"category":"SQL","version":"1.0.0"}'
          mode: Indexed
          name: Deny-PublicEndpoint-CosmosDB
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.DocumentDB/databaseAccounts","field":"type"},{"field":"Microsoft.DocumentDB/databaseAccounts/publicNetworkAccess","notequals":"Disabled"}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-KeyVault"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-KeyVault
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy denies creation of Key Vaults with IP Firewall exposed to all public endpoints
          display_name: Public network access should be disabled for KeyVault
          management_group_name: myorg-2
          metadata: '{"category":"Key Vault","version":"1.0.0"}'
          mode: Indexed
          name: Deny-PublicEndpoint-KeyVault
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.KeyVault/vaults","field":"type"},{"field":"Microsoft.KeyVault/vaults/networkAcls.defaultAction","notequals":"Deny"}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-MariaDB"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-MariaDB
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy denies the creation of Maria DB accounts with exposed public endpoints
          display_name: Public network access should be disabled for MariaDB
          management_group_name: myorg-2
          metadata: '{"category":"SQL","version":"1.0.0"}'
          mode: Indexed
          name: Deny-PublicEndpoint-MariaDB
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.DBforMariaDB/servers","field":"type"},{"field":"Microsoft.DBforMariaDB/servers/publicNetworkAccess","notequals":"Disabled"}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-MySQL"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-MySQL
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy denies creation of MySql DB accounts with exposed public endpoints
          display_name: Public network access should be disabled for MySQL
          management_group_name: myorg-2
          metadata: '{"category":"SQL","version":"1.0.0"}'
          mode: Indexed
          name: Deny-PublicEndpoint-MySQL
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.DBforMySQL/servers","field":"type"},{"field":"Microsoft.DBforMySQL/servers/publicNetworkAccess","notequals":"Disabled"}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-PostgreSql"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-PostgreSql
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy denies creation of Postgre SQL DB accounts with exposed public endpoints
          display_name: Public network access should be disabled for PostgreSql
          management_group_name: myorg-2
          metadata: '{"category":"SQL","version":"1.0.0"}'
          mode: Indexed
          name: Deny-PublicEndpoint-PostgreSql
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.DBforPostgreSQL/servers","field":"type"},{"field":"Microsoft.DBforPostgreSQL/servers/publicNetworkAccess","notequals":"Disabled"}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-Sql"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-Sql
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy denies creation of Sql servers with exposed public endpoints
          display_name: Public network access on Azure SQL Database should be disabled
          management_group_name: myorg-2
          metadata: '{"category":"SQL","version":"1.0.0"}'
          mode: Indexed
          name: Deny-PublicEndpoint-Sql
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Sql/servers","field":"type"},{"field":"Microsoft.Sql/servers/publicNetworkAccess","notequals":"Disabled"}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-Storage"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-Storage
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy denies creation of storage accounts with IP Firewall exposed to all public endpoints
          display_name: Public network access onStorage accounts should be disabled
          management_group_name: myorg-2
          metadata: '{"category":"Storage","version":"1.0.0"}'
          mode: Indexed
          name: Deny-PublicEndpoint-Storage
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Storage/storageAccounts","field":"type"},{"field":"Microsoft.Storage/storageAccounts/networkAcls.defaultAction","notequals":"Deny"}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicIP"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicIP
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy denies creation of Public IPs under the assigned scope.
          display_name: Deny the creation of public IP
          management_group_name: myorg-2
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: Indexed
          name: Deny-PublicIP
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Network/publicIPAddresses","field":"type"},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-RDP-From-Internet"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-RDP-From-Internet
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy denies any network security rule that allows RDP access from Internet
          display_name: RDP access from the Internet should be blocked
          management_group_name: myorg-2
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: All
          name: Deny-RDP-From-Internet
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Network/networkSecurityGroups/securityRules","field":"type"},{"allOf":[{"equals":"Allow","field":"Microsoft.Network/networkSecurityGroups/securityRules/access"},{"equals":"Inbound","field":"Microsoft.Network/networkSecurityGroups/securityRules/direction"},{"anyOf":[{"equals":"*","field":"Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange"},{"equals":"3389","field":"Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange"},{"equals":"true","value":"[if(and(not(empty(field(''Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange''))), contains(field(''Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange''),''-'')), and(lessOrEquals(int(first(split(field(''Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange''), ''-''))),3389),greaterOrEquals(int(last(split(field(''Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange''), ''-''))),3389)), ''false'')]"},{"count":{"field":"Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]","where":{"equals":"true","value":"[if(and(not(empty(first(field(''Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]'')))), contains(first(field(''Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]'')),''-'')), and(lessOrEquals(int(first(split(first(field(''Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]'')), ''-''))),3389),greaterOrEquals(int(last(split(first(field(''Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]'')), ''-''))),3389)) , ''false'')]"}},"greater":0},{"not":{"field":"Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]","notEquals":"*"}},{"not":{"field":"Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]","notEquals":"3389"}}]},{"anyOf":[{"equals":"*","field":"Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix"},{"equals":"Internet","field":"Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix"},{"not":{"field":"Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefixes[*]","notEquals":"*"}},{"not":{"field":"Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefixes[*]","notEquals":"Internet"}}]}]}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-Redis-http"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-Redis-http
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Audit enabling of only connections via SSL to Azure Cache for Redis. Validate both minimum TLS version and enableNonSslPort is disabled. Use of secure connections ensures authentication between the server and the service and protects data in transit from network layer attacks such as man-in-the-middle, eavesdropping, and session-hijacking
          display_name: Azure Cache for Redis only secure connections should be enabled
          management_group_name: myorg-2
          metadata: '{"category":"Cache","version":"1.0.0"}'
          mode: Indexed
          name: Deny-Redis-http
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"The effect determines what happens when the policy rule is evaluated to match","displayName":"Effect"},"type":"String"},"minimumTlsVersion":{"allowedValues":["1.2","1.1","1.0"],"defaultValue":"1.2","metadata":{"description":"Select minimum TLS version for Azure Cache for Redis.","displayName":"Select minumum TLS version for Azure Cache for Redis."},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Cache/redis","field":"type"},{"anyOf":[{"equals":"true","field":"Microsoft.Cache/Redis/enableNonSslPort"},{"field":"Microsoft.Cache/Redis/minimumTlsVersion","notequals":"[parameters(''minimumTlsVersion'')]"}]}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-Sql-minTLS"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-Sql-minTLS
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Setting minimal TLS version to 1.2 improves security by ensuring your Azure SQL Database can only be accessed from clients using TLS 1.2. Using versions of TLS less than 1.2 is not reccomended since they have well documented security vunerabilities.
          display_name: Azure SQL Database should have the minimal TLS version set to the highest version
          management_group_name: myorg-2
          metadata: '{"category":"SQL","version":"1.0.0"}'
          mode: Indexed
          name: Deny-Sql-minTLS
          parameters: '{"effect":{"allowedValues":["Audit","Disabled","Deny"],"defaultValue":"Audit","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"minimalTlsVersion":{"allowedValues":["1.2","1.1","1.0"],"defaultValue":"1.2","metadata":{"description":"Select version minimum TLS version SQL servers to enforce","displayName":"Select version for SQL server"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Sql/servers","field":"type"},{"anyOf":[{"exists":"false","field":"Microsoft.Sql/servers/minimalTlsVersion"},{"field":"Microsoft.Sql/servers/minimalTlsVersion","notequals":"[parameters(''minimalTlsVersion'')]"}]}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-SqlMi-minTLS"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-SqlMi-minTLS
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Setting minimal TLS version to 1.2 improves security by ensuring your SQL Managed Instance can only be accessed from clients using TLS 1.2. Using versions of TLS less than 1.2 is not reccomended since they have well documented security vunerabilities.
          display_name: SQL Managed Instance should have the minimal TLS version set to the highest version
          management_group_name: myorg-2
          metadata: '{"category":"SQL","version":"1.0.0"}'
          mode: Indexed
          name: Deny-SqlMi-minTLS
          parameters: '{"effect":{"allowedValues":["Audit","Disabled","Deny"],"defaultValue":"Audit","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"minimalTlsVersion":{"allowedValues":["1.2","1.1","1.0"],"defaultValue":"1.2","metadata":{"description":"Select version minimum TLS version SQL servers to enforce","displayName":"Select version for SQL server"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Sql/managedInstances","field":"type"},{"anyOf":[{"exists":"false","field":"Microsoft.Sql/managedInstances/minimalTlsVersion"},{"field":"Microsoft.Sql/managedInstances/minimalTlsVersion","notequals":"[parameters(''minimalTlsVersion'')]"}]}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-Storage-minTLS"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-Storage-minTLS
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Audit requirement of Secure transfer in your storage account. Secure transfer is an option that forces your storage account to accept requests only from secure connections (HTTPS). Use of HTTPS ensures authentication between the server and the service and protects data in transit from network layer attacks such as man-in-the-middle, eavesdropping, and session-hijacking
          display_name: Storage Account set to minumum TLS and Secure transfer should be enabled
          management_group_name: myorg-2
          metadata: '{"category":"Storage","version":"1.0.0"}'
          mode: Indexed
          name: Deny-Storage-minTLS
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"The effect determines what happens when the policy rule is evaluated to match","displayName":"Effect"},"type":"String"},"minimumTlsVersion":{"allowedValues":["TLS1_2","TLS1_1","TLS1_0"],"defaultValue":"TLS1_2","metadata":{"description":"Select version  minimum TLS version on Azure Storage Account to enforce","displayName":"Storage Account select minimum TLS version"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Storage/storageAccounts","field":"type"},{"anyOf":[{"allOf":[{"less":"2019-04-01","value":"[requestContext().apiVersion]"},{"exists":"false","field":"Microsoft.Storage/storageAccounts/supportsHttpsTrafficOnly"}]},{"equals":"false","field":"Microsoft.Storage/storageAccounts/supportsHttpsTrafficOnly"},{"field":"Microsoft.Storage/storageAccounts/minimumTlsVersion","notequals":"[parameters(''minimumTlsVersion'')]"},{"exists":"false","field":"Microsoft.Storage/storageAccounts/minimumTlsVersion"}]}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Nsg"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Nsg
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy denies the creation of a subsnet with out an Network Security Group. NSG help to protect traffic across subnet-level.
          display_name: 'Subnets should have a Network Security Group '
          management_group_name: myorg-2
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: All
          name: Deny-Subnet-Without-Nsg
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Network/virtualNetworks/subnets","field":"type"},{"exists":"false","field":"Microsoft.Network/virtualNetworks/subnets/networkSecurityGroup.id"}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Udr"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Udr
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy denies the creation of a subsnet with out a User Defined Route.
          display_name: Subnets should have a User Defined Route
          management_group_name: myorg-2
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: All
          name: Deny-Subnet-Without-Udr
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Network/virtualNetworks/subnets","field":"type"},{"exists":"false","field":"Microsoft.Network/virtualNetworks/subnets/routeTable.id"}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-VNET-Peer-Cross-Sub"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-VNET-Peer-Cross-Sub
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy denies the creation of vNet Peerings outside of the same subscriptions under the assigned scope.
          display_name: Deny vNet peering cross subscription.
          management_group_name: myorg-2
          metadata: '{"category":"Network","version":"1.0.0.0"}'
          mode: Indexed
          name: Deny-VNET-Peer-Cross-Sub
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Network/virtualNetworks/virtualNetworkPeerings","field":"type"},{"field":"Microsoft.Network/virtualNetworks/virtualNetworkPeerings/remoteVirtualNetwork.id","notcontains":"[subscription().id]"}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-VNet-Peering"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-VNet-Peering
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy denies the creation of vNet Peerings under the assigned scope.
          display_name: 'Deny vNet peering '
          management_group_name: myorg-2
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: Indexed
          name: Deny-VNet-Peering
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Network/virtualNetworks/virtualNetworkPeerings","field":"type"},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-ACR"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-ACR
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy the Azure Defender settings for Azure Container Registry
          display_name: Deploy Azure Defender for ACR
          management_group_name: myorg-2
          metadata: '{"category":"Security Center","version":"1.0.0"}'
          mode: All
          name: Deploy-ASC-Defender-ACR
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"string"},"pricingTier":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier","displayName":"Azure Defender pricing tier"},"type":"string"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"incremental","parameters":{"pricingTier":{"value":"[parameters(''pricingTier'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"pricingTier":{"metadata":{"description":"Azure Defender pricing tier"},"type":"string"}},"resources":[{"apiVersion":"2018-06-01","name":"ContainerRegistry","properties":{"pricingTier":"[parameters(''pricingTier'')]"},"type":"Microsoft.Security/pricings"}],"variables":{}}}},"deploymentScope":"Subscription","existenceCondition":{"allOf":[{"equals":"[parameters(''pricingTier'')]","field":"Microsoft.Security/pricings/pricingTier"},{"equals":"Microsoft.Security/pricings","field":"type"}]},"existenceScope":"Subscription","name":"ContainerRegistry","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"],"type":"Microsoft.Security/pricings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-AKS"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-AKS
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy the Azure Defender settings for AKS
          display_name: Deploy Azure Defender for AKS
          management_group_name: myorg-2
          metadata: '{"category":"Security Center","version":"1.0.0"}'
          mode: All
          name: Deploy-ASC-Defender-AKS
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"string"},"pricingTier":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier","displayName":"Azure Defender pricing tier"},"type":"string"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"incremental","parameters":{"pricingTier":{"value":"[parameters(''pricingTier'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"pricingTier":{"metadata":{"description":"Azure Defender pricing tier"},"type":"string"}},"resources":[{"apiVersion":"2018-06-01","name":"KubernetesService","properties":{"pricingTier":"[parameters(''pricingTier'')]"},"type":"Microsoft.Security/pricings"}],"variables":{}}}},"deploymentScope":"Subscription","existenceCondition":{"allOf":[{"equals":"[parameters(''pricingTier'')]","field":"Microsoft.Security/pricings/pricingTier"},{"equals":"Microsoft.Security/pricings","field":"type"}]},"existenceScope":"Subscription","name":"KubernetesService","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"],"type":"Microsoft.Security/pricings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-AKV"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-AKV
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy the Azure Defender settings for Azure Key Vault
          display_name: Deploy Azure Defender for AKV
          management_group_name: myorg-2
          metadata: '{"category":"Security Center","version":"1.0.0"}'
          mode: All
          name: Deploy-ASC-Defender-AKV
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"string"},"pricingTier":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier","displayName":"Azure Defender pricing tier"},"type":"string"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"incremental","parameters":{"pricingTier":{"value":"[parameters(''pricingTier'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"pricingTier":{"metadata":{"description":"Azure Defender pricing tier"},"type":"string"}},"resources":[{"apiVersion":"2018-06-01","name":"KeyVaults","properties":{"pricingTier":"[parameters(''pricingTier'')]"},"type":"Microsoft.Security/pricings"}],"variables":{}}}},"deploymentScope":"Subscription","existenceCondition":{"allOf":[{"equals":"[parameters(''pricingTier'')]","field":"Microsoft.Security/pricings/pricingTier"},{"equals":"Microsoft.Security/pricings","field":"type"}]},"existenceScope":"Subscription","name":"KeyVaults","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"],"type":"Microsoft.Security/pricings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-ARM"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-ARM
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy the Azure Defender settings for Azure Resource Manager
          display_name: Deploy Azure Defender for ARM
          management_group_name: myorg-2
          metadata: '{"category":"Security Center","version":"1.0.0"}'
          mode: All
          name: Deploy-ASC-Defender-ARM
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"string"},"pricingTier":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier","displayName":"Azure Defender pricing tier"},"type":"string"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"incremental","parameters":{"pricingTier":{"value":"[parameters(''pricingTier'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"pricingTier":{"metadata":{"description":"Azure Defender pricing tier"},"type":"string"}},"resources":[{"apiVersion":"2018-06-01","name":"Arm","properties":{"pricingTier":"[parameters(''pricingTier'')]"},"type":"Microsoft.Security/pricings"}],"variables":{}}}},"deploymentScope":"Subscription","existenceCondition":{"allOf":[{"equals":"[parameters(''pricingTier'')]","field":"Microsoft.Security/pricings/pricingTier"},{"equals":"Microsoft.Security/pricings","field":"type"}]},"existenceScope":"Subscription","name":"Arm","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"],"type":"Microsoft.Security/pricings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-AppSrv"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-AppSrv
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy the Azure Defender settings in Azure Security Center for Azure App Services
          display_name: Deploy Azure Defender for Azure App Services
          management_group_name: myorg-2
          metadata: '{"category":"Security Center","version":"1.0.0"}'
          mode: All
          name: Deploy-ASC-Defender-AppSrv
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"string"},"pricingTier":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier","displayName":"Azure Defender pricing tier"},"type":"string"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"incremental","parameters":{"pricingTier":{"value":"[parameters(''pricingTier'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"pricingTier":{"metadata":{"description":"Azure Defender pricing tier"},"type":"string"}},"resources":[{"apiVersion":"2018-06-01","name":"AppServices","properties":{"pricingTier":"[parameters(''pricingTier'')]"},"type":"Microsoft.Security/pricings"}],"variables":{}}}},"deploymentScope":"Subscription","existenceCondition":{"allOf":[{"equals":"[parameters(''pricingTier'')]","field":"Microsoft.Security/pricings/pricingTier"},{"equals":"Microsoft.Security/pricings","field":"type"}]},"existenceScope":"Subscription","name":"AppServices","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"],"type":"Microsoft.Security/pricings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-DNS"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-DNS
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy the Azure Defender settings for DNS
          display_name: Deploy Azure Defender for DNS
          management_group_name: myorg-2
          metadata: '{"category":"Security Center","version":"1.0.0"}'
          mode: All
          name: Deploy-ASC-Defender-DNS
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"string"},"pricingTier":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier","displayName":"Azure Defender pricing tier"},"type":"string"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"incremental","parameters":{"pricingTier":{"value":"[parameters(''pricingTier'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"pricingTier":{"metadata":{"description":"Azure Defender pricing tier"},"type":"string"}},"resources":[{"apiVersion":"2018-06-01","name":"Dns","properties":{"pricingTier":"[parameters(''pricingTier'')]"},"type":"Microsoft.Security/pricings"}],"variables":{}}}},"deploymentScope":"Subscription","existenceCondition":{"allOf":[{"equals":"[parameters(''pricingTier'')]","field":"Microsoft.Security/pricings/pricingTier"},{"equals":"Microsoft.Security/pricings","field":"type"}]},"existenceScope":"Subscription","name":"Dns","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"],"type":"Microsoft.Security/pricings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-SA"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-SA
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy the Azure Defender settings in Azure Security Center for Storage Accounts
          display_name: Deploy Azure Defender for Storage Accounts
          management_group_name: myorg-2
          metadata: '{"category":"Security Center","version":"1.0.0"}'
          mode: All
          name: Deploy-ASC-Defender-SA
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"string"},"pricingTier":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier","displayName":"Azure Defender pricing tier"},"type":"string"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"incremental","parameters":{"pricingTier":{"value":"[parameters(''pricingTier'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"pricingTier":{"metadata":{"description":"Azure Defender pricing tier"},"type":"string"}},"resources":[{"apiVersion":"2018-06-01","name":"StorageAccounts","properties":{"pricingTier":"[parameters(''pricingTier'')]"},"type":"Microsoft.Security/pricings"}],"variables":{}}}},"deploymentScope":"Subscription","existenceCondition":{"allOf":[{"equals":"[parameters(''pricingTier'')]","field":"Microsoft.Security/pricings/pricingTier"},{"equals":"Microsoft.Security/pricings","field":"type"}]},"existenceScope":"Subscription","name":"StorageAccounts","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"],"type":"Microsoft.Security/pricings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-SQLVM"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-SQLVM
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy the Azure Defender settings in Sql Server on Virtual Machines
          display_name: Deploy Azure Defender for Sql on Virtual Machines
          management_group_name: myorg-2
          metadata: '{"category":"Security Center","version":"1.0.0"}'
          mode: All
          name: Deploy-ASC-Defender-SQLVM
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"string"},"pricingTier":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier","displayName":"Azure Defender pricing tier"},"type":"string"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"incremental","parameters":{"pricingTier":{"value":"[parameters(''pricingTier'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"pricingTier":{"metadata":{"description":"Azure Defender pricing tier"},"type":"string"}},"resources":[{"apiVersion":"2018-06-01","name":"SqlServerVirtualMachines","properties":{"pricingTier":"[parameters(''pricingTier'')]"},"type":"Microsoft.Security/pricings"}],"variables":{}}}},"deploymentScope":"Subscription","existenceCondition":{"allOf":[{"equals":"[parameters(''pricingTier'')]","field":"Microsoft.Security/pricings/pricingTier"},{"equals":"Microsoft.Security/pricings","field":"type"}]},"existenceScope":"Subscription","name":"SqlServerVirtualMachines","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"],"type":"Microsoft.Security/pricings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-Sql"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-Sql
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy the Azure Defender settings in Azure Security Center for Azure Sql Databases
          display_name: Deploy Azure Defender for Azure Sql Databases
          management_group_name: myorg-2
          metadata: '{"category":"Security Center","version":"1.0.0"}'
          mode: All
          name: Deploy-ASC-Defender-Sql
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"string"},"pricingTier":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier","displayName":"Azure Defender pricing tier"},"type":"string"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"incremental","parameters":{"pricingTier":{"value":"[parameters(''pricingTier'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"pricingTier":{"metadata":{"description":"Azure Defender pricing tier"},"type":"string"}},"resources":[{"apiVersion":"2018-06-01","name":"SqlServers","properties":{"pricingTier":"[parameters(''pricingTier'')]"},"type":"Microsoft.Security/pricings"}],"variables":{}}}},"deploymentScope":"Subscription","existenceCondition":{"allOf":[{"equals":"[parameters(''pricingTier'')]","field":"Microsoft.Security/pricings/pricingTier"},{"equals":"Microsoft.Security/pricings","field":"type"}]},"existenceScope":"Subscription","name":"SqlServers","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"],"type":"Microsoft.Security/pricings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-VMs"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-VMs
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy the Azure Defender settings in Azure Security Center for Virtual Machines
          display_name: Deploy Azure Defender for Virtual Machines
          management_group_name: myorg-2
          metadata: '{"category":"Security Center","version":"1.0.0"}'
          mode: All
          name: Deploy-ASC-Defender-VMs
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"string"},"pricingTier":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier","displayName":"Azure Defender pricing tier"},"type":"string"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"incremental","parameters":{"pricingTier":{"value":"[parameters(''pricingTier'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"pricingTier":{"metadata":{"description":"Azure Defender pricing tier"},"type":"string"}},"resources":[{"apiVersion":"2018-06-01","name":"VirtualMachines","properties":{"pricingTier":"[parameters(''pricingTier'')]"},"type":"Microsoft.Security/pricings"}],"variables":{}}}},"deploymentScope":"Subscription","existenceCondition":{"allOf":[{"equals":"[parameters(''pricingTier'')]","field":"Microsoft.Security/pricings/pricingTier"},{"equals":"Microsoft.Security/pricings","field":"type"}]},"existenceScope":"Subscription","name":"VirtualMachines","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"],"type":"Microsoft.Security/pricings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-SecurityContacts"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-SecurityContacts
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy Azure Security Center Security Contacts
          display_name: Deploy Azure Security Center Security Contacts
          management_group_name: myorg-2
          metadata: '{"category":"Security Center","version":"1.0.0"}'
          mode: All
          name: Deploy-ASC-SecurityContacts
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"string"},"emailSecurityContact":{"metadata":{"description":"Provide email address for Azure Security Center contact details","displayName":"Security contacts email address"},"type":"string"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"incremental","parameters":{"emailSecurityContact":{"value":"[parameters(''emailSecurityContact'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"emailSecurityContact":{"metadata":{"description":"Security contacts email address"},"type":"string"}},"resources":[{"apiVersion":"2020-01-01-preview","name":"default","properties":{"alertNotifications":{"minimalSeverity":"High","state":"On"},"emails":"[parameters(''emailSecurityContact'')]","notificationsByRole":{"roles":["Owner"],"state":"On"}},"type":"Microsoft.Security/securityContacts"}],"variables":{}}}},"deploymentScope":"Subscription","existenceCondition":{"allOf":[{"contains":"[parameters(''emailSecurityContact'')]","field":"Microsoft.Security/securityContacts/email"},{"equals":"Microsoft.Security/securityContacts","field":"type"},{"equals":"On","field":"Microsoft.Security/securityContacts/alertNotifications"},{"equals":"On","field":"Microsoft.Security/securityContacts/alertsToAdmins"}]},"existenceScope":"Subscription","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"],"type":"Microsoft.Security/securityContacts"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Budget"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Budget
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy a default budget on all subscriptions under the assigned scope
          display_name: Deploy a default budget on all subscriptions under the assigned scope
          management_group_name: myorg-2
          metadata: '{"category":"Budget","version":"1.0.0"}'
          mode: All
          name: Deploy-Budget
          parameters: '{"amount":{"defaultValue":"1000","metadata":{"description":"The total amount of cost or usage to track with the budget"},"type":"String"},"contactEmails":{"defaultValue":[],"metadata":{"description":"The list of email addresses, in an array, to send the budget notification to when the threshold is exceeded."},"type":"Array"},"contactGroups":{"defaultValue":[],"metadata":{"description":"The list of action groups, in an array, to send the budget notification to when the threshold is exceeded. It accepts array of strings."},"type":"Array"},"contactRoles":{"defaultValue":["Owner","Contributor"],"metadata":{"description":"The list of contact RBAC roles, in an array, to send the budget notification to when the threshold is exceeded."},"type":"Array"},"firstThreshold":{"defaultValue":"90","metadata":{"description":"Threshold value associated with a notification. Notification is sent when the cost exceeded the threshold. It is always percent and has to be between 0 and 1000."},"type":"String"},"secondThreshold":{"defaultValue":"100","metadata":{"description":"Threshold value associated with a notification. Notification is sent when the cost exceeded the threshold. It is always percent and has to be between 0 and 1000."},"type":"String"},"timeGrain":{"allowedValues":["Monthly","Quarterly","Annually","BillingMonth","BillingQuarter","BillingAnnual"],"defaultValue":"Monthly","metadata":{"description":"The time covered by a budget. Tracking of the amount will be reset based on the time grain."},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"Incremental","parameters":{"amount":{"value":"[parameters(''amount'')]"},"contactEmails":{"value":"[parameters(''contactEmails'')]"},"contactGroups":{"value":"[parameters(''contactGroups'')]"},"contactRoles":{"value":"[parameters(''contactRoles'')]"},"firstThreshold":{"value":"[parameters(''firstThreshold'')]"},"secondThreshold":{"value":"[parameters(''secondThreshold'')]"},"timeGrain":{"value":"[parameters(''timeGrain'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json","contentVersion":"1.0.0.0","parameters":{"amount":{"type":"String"},"contactEmails":{"type":"Array"},"contactGroups":{"type":"Array"},"contactRoles":{"type":"Array"},"firstThreshold":{"type":"String"},"secondThreshold":{"type":"String"},"startDate":{"defaultValue":"[concat(utcNow(''MM''), ''/01/'', utcNow(''yyyy''))]","type":"String"},"timeGrain":{"type":"String"}},"resources":[{"apiVersion":"2019-10-01","name":"default-sandbox-budget","properties":{"amount":"[parameters(''amount'')]","category":"Cost","notifications":{"NotificationForExceededBudget1":{"contactEmails":"[parameters(''contactEmails'')]","contactGroups":"[parameters(''contactGroups'')]","contactRoles":"[parameters(''contactRoles'')]","enabled":true,"operator":"GreaterThan","threshold":"[parameters(''firstThreshold'')]"},"NotificationForExceededBudget2":{"contactEmails":"[parameters(''contactEmails'')]","contactGroups":"[parameters(''contactGroups'')]","contactRoles":"[parameters(''contactRoles'')]","enabled":true,"operator":"GreaterThan","threshold":"[parameters(''secondThreshold'')]"}},"timeGrain":"[parameters(''timeGrain'')]","timePeriod":{"startDate":"[parameters(''startDate'')]"}},"type":"Microsoft.Consumption/budgets"}]}}},"deploymentScope":"Subscription","existenceCondition":{"allOf":[{"equals":"[parameters(''amount'')]","field":"Microsoft.Consumption/budgets/amount"},{"equals":"[parameters(''timeGrain'')]","field":"Microsoft.Consumption/budgets/timeGrain"},{"equals":"Cost","field":"Microsoft.Consumption/budgets/category"}]},"existenceScope":"Subscription","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"],"type":"Microsoft.Consumption/budgets"},"effect":"DeployIfNotExists"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-DDoSProtection"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-DDoSProtection
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys an Azure DDoS Protection Standard plan
          display_name: Deploy an Azure DDoS Protection Standard plan
          management_group_name: myorg-2
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: All
          name: Deploy-DDoSProtection
          parameters: '{"ddosName":{"metadata":{"description":"DDoSVnet","displayName":"ddosName"},"type":"String"},"ddosRegion":{"metadata":{"description":"DDoSVnet location","displayName":"ddosRegion","strongType":"location"},"type":"String"},"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"rgName":{"metadata":{"description":"Provide name for resource group.","displayName":"rgName"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"Incremental","parameters":{"ddosname":{"value":"[parameters(''ddosname'')]"},"ddosregion":{"value":"[parameters(''ddosRegion'')]"},"rgName":{"value":"[parameters(''rgName'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json","contentVersion":"1.0.0.0","outputs":{},"parameters":{"ddosRegion":{"type":"String"},"ddosname":{"type":"String"},"rgName":{"type":"String"}},"resources":[{"apiVersion":"2018-05-01","location":"[deployment().location]","name":"[parameters(''rgName'')]","properties":{},"type":"Microsoft.Resources/resourceGroups"},{"apiVersion":"2018-05-01","dependsOn":["[resourceId(''Microsoft.Resources/resourceGroups/'', parameters(''rgName''))]"],"name":"ddosprotection","properties":{"mode":"Incremental","template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json","contentVersion":"1.0.0.0","outputs":{},"parameters":{},"resources":[{"apiVersion":"2019-12-01","location":"[parameters(''ddosRegion'')]","name":"[parameters(''ddosName'')]","properties":{},"type":"Microsoft.Network/ddosProtectionPlans"}]}},"resourceGroup":"[parameters(''rgName'')]","type":"Microsoft.Resources/deployments"}]}}},"deploymentScope":"Subscription","existenceScope":"ResourceGroup","name":"[parameters(''ddosName'')]","resourceGroupName":"[parameters(''rgName'')]","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"],"type":"Microsoft.Network/ddosProtectionPlans"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-Blob-PrivateEndpoint"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-Blob-PrivateEndpoint
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: 'Deploys the configurations of a Private DNS Zone Group by a parameter for Storage-Blob Private Endpoint. Used enforce the configuration to a single Private DNS Zone. '
          display_name: Deploy DNS Zone Group for Storage-Blob Private Endpoint
          management_group_name: myorg-2
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-DNSZoneGroup-For-Blob-PrivateEndpoint
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"privateDnsZoneId":{"metadata":{"displayName":"privateDnsZoneId","strongType":"Microsoft.Network/privateDnsZones"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Network/privateEndpoints","field":"type"},{"count":{"field":"Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]","where":{"equals":"blob","field":"Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]"}},"greaterOrEquals":1}]},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"privateDnsZoneId":{"value":"[parameters(''privateDnsZoneId'')]"},"privateEndpointName":{"value":"[field(''name'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","parameters":{"location":{"type":"String"},"privateDnsZoneId":{"type":"String"},"privateEndpointName":{"type":"String"}},"resources":[{"apiVersion":"2020-03-01","location":"[parameters(''location'')]","name":"[concat(parameters(''privateEndpointName''), ''/deployedByPolicy'')]","properties":{"privateDnsZoneConfigs":[{"name":"storageBlob-privateDnsZone","properties":{"privateDnsZoneId":"[parameters(''privateDnsZoneId'')]"}}]},"type":"Microsoft.Network/privateEndpoints/privateDnsZoneGroups"}]}}},"roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"],"type":"Microsoft.Network/privateEndpoints/privateDnsZoneGroups"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-File-PrivateEndpoint"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-File-PrivateEndpoint
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: 'Deploys the configurations of a Private DNS Zone Group by a parameter for Storage-File Private Endpoint. Used enforce the configuration to a single Private DNS Zone. '
          display_name: Deploy DNS  Zone Group for Storage-File Private Endpoint
          management_group_name: myorg-2
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-DNSZoneGroup-For-File-PrivateEndpoint
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"privateDnsZoneId":{"metadata":{"displayName":"privateDnsZoneId","strongType":"Microsoft.Network/privateDnsZones"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Network/privateEndpoints","field":"type"},{"count":{"field":"Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]","where":{"equals":"file","field":"Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]"}},"greaterOrEquals":1}]},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"privateDnsZoneId":{"value":"[parameters(''privateDnsZoneId'')]"},"privateEndpointName":{"value":"[field(''name'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","parameters":{"location":{"type":"String"},"privateDnsZoneId":{"type":"String"},"privateEndpointName":{"type":"String"}},"resources":[{"apiVersion":"2020-03-01","location":"[parameters(''location'')]","name":"[concat(parameters(''privateEndpointName''), ''/deployedByPolicy'')]","properties":{"privateDnsZoneConfigs":[{"name":"storageFile-privateDnsZone","properties":{"privateDnsZoneId":"[parameters(''privateDnsZoneId'')]"}}]},"type":"Microsoft.Network/privateEndpoints/privateDnsZoneGroups"}]}}},"roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"],"type":"Microsoft.Network/privateEndpoints/privateDnsZoneGroups"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-KeyVault-PrivateEndpoint"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-KeyVault-PrivateEndpoint
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: 'Deploys the configurations of a Private DNS Zone Group by a parameter for Key Vault Private Endpoint. Used enforce the configuration to a single Private DNS Zone. '
          display_name: Deploy DNS  Zone Group for Key Vault Private Endpoint
          management_group_name: myorg-2
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-DNSZoneGroup-For-KeyVault-PrivateEndpoint
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"privateDnsZoneId":{"metadata":{"displayName":"privateDnsZoneId","strongType":"Microsoft.Network/privateDnsZones"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Network/privateEndpoints","field":"type"},{"count":{"field":"Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]","where":{"equals":"vault","field":"Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]"}},"greaterOrEquals":1}]},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"privateDnsZoneId":{"value":"[parameters(''privateDnsZoneId'')]"},"privateEndpointName":{"value":"[field(''name'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","parameters":{"location":{"type":"String"},"privateDnsZoneId":{"type":"String"},"privateEndpointName":{"type":"String"}},"resources":[{"apiVersion":"2020-03-01","location":"[parameters(''location'')]","name":"[concat(parameters(''privateEndpointName''), ''/deployedByPolicy'')]","properties":{"privateDnsZoneConfigs":[{"name":"keyVault-privateDnsZone","properties":{"privateDnsZoneId":"[parameters(''privateDnsZoneId'')]"}}]},"type":"Microsoft.Network/privateEndpoints/privateDnsZoneGroups"}]}}},"roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"],"type":"Microsoft.Network/privateEndpoints/privateDnsZoneGroups"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-Queue-PrivateEndpoint"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-Queue-PrivateEndpoint
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: 'Deploys the configurations of a Private DNS Zone Group by a parameter for Storage-Queue Private Endpoint. Used enforce the configuration to a single Private DNS Zone. '
          display_name: Deploy DNS  Zone Group for Storage-Queue Private Endpoint
          management_group_name: myorg-2
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-DNSZoneGroup-For-Queue-PrivateEndpoint
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"privateDnsZoneId":{"metadata":{"displayName":"privateDnsZoneId","strongType":"Microsoft.Network/privateDnsZones"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Network/privateEndpoints","field":"type"},{"count":{"field":"Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]","where":{"equals":"queue","field":"Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]"}},"greaterOrEquals":1}]},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"privateDnsZoneId":{"value":"[parameters(''privateDnsZoneId'')]"},"privateEndpointName":{"value":"[field(''name'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","parameters":{"location":{"type":"String"},"privateDnsZoneId":{"type":"String"},"privateEndpointName":{"type":"String"}},"resources":[{"apiVersion":"2020-03-01","location":"[parameters(''location'')]","name":"[concat(parameters(''privateEndpointName''), ''/deployedByPolicy'')]","properties":{"privateDnsZoneConfigs":[{"name":"storageQueue-privateDnsZone","properties":{"privateDnsZoneId":"[parameters(''privateDnsZoneId'')]"}}]},"type":"Microsoft.Network/privateEndpoints/privateDnsZoneGroups"}]}}},"roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"],"type":"Microsoft.Network/privateEndpoints/privateDnsZoneGroups"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-Sql-PrivateEndpoint"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-Sql-PrivateEndpoint
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: 'Deploys the configurations of a Private DNS Zone Group by a parameter for SQL Private Private Endpoint. Used enforce the configuration to a single Private DNS Zone. '
          display_name: Deploy DNS  Zone Group for SQL Private Endpoint
          management_group_name: myorg-2
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-DNSZoneGroup-For-Sql-PrivateEndpoint
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"privateDnsZoneId":{"metadata":{"displayName":"privateDnsZoneId","strongType":"Microsoft.Network/privateDnsZones"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Network/privateEndpoints","field":"type"},{"count":{"field":"Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]","where":{"equals":"sqlServer","field":"Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]"}},"greaterOrEquals":1}]},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"privateDnsZoneId":{"value":"[parameters(''privateDnsZoneId'')]"},"privateEndpointName":{"value":"[field(''name'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","parameters":{"location":{"type":"String"},"privateDnsZoneId":{"type":"String"},"privateEndpointName":{"type":"String"}},"resources":[{"apiVersion":"2020-03-01","location":"[parameters(''location'')]","name":"[concat(parameters(''privateEndpointName''), ''/deployedByPolicy'')]","properties":{"privateDnsZoneConfigs":[{"name":"sqlServer-privateDnsZone","properties":{"privateDnsZoneId":"[parameters(''privateDnsZoneId'')]"}}]},"type":"Microsoft.Network/privateEndpoints/privateDnsZoneGroups"}]}}},"roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"],"type":"Microsoft.Network/privateEndpoints/privateDnsZoneGroups"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-Table-PrivateEndpoint"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-Table-PrivateEndpoint
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: 'Deploys the configurations of a Private DNS Zone Group by a parameter for Storage-Table Private Endpoint. Used enforce the configuration to a single Private DNS Zone. '
          display_name: Deploy DNS  Zone Group for Storage-Table Private Endpoint
          management_group_name: myorg-2
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-DNSZoneGroup-For-Table-PrivateEndpoint
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"privateDnsZoneId":{"metadata":{"displayName":"privateDnsZoneId","strongType":"Microsoft.Network/privateDnsZones"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Network/privateEndpoints","field":"type"},{"count":{"field":"Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]","where":{"equals":"table","field":"Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]"}},"greaterOrEquals":1}]},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"privateDnsZoneId":{"value":"[parameters(''privateDnsZoneId'')]"},"privateEndpointName":{"value":"[field(''name'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","parameters":{"location":{"type":"String"},"privateDnsZoneId":{"type":"String"},"privateEndpointName":{"type":"String"}},"resources":[{"apiVersion":"2020-03-01","location":"[parameters(''location'')]","name":"[concat(parameters(''privateEndpointName''), ''/deployedByPolicy'')]","properties":{"privateDnsZoneConfigs":[{"name":"storageTable-privateDnsZone","properties":{"privateDnsZoneId":"[parameters(''privateDnsZoneId'')]"}}]},"type":"Microsoft.Network/privateEndpoints/privateDnsZoneGroups"}]}}},"roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"],"type":"Microsoft.Network/privateEndpoints/privateDnsZoneGroups"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AA"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AA
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Automation to stream to a Log Analytics workspace when any Automation which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Automation to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-AA
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Automation/automationAccounts","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"JobLogs","enabled":"[parameters(''logsEnabled'')]"},{"category":"JobStreams","enabled":"[parameters(''logsEnabled'')]"},{"category":"DscNodeStatus","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Automation/automationAccounts/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACI"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACI
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Container Instances to stream to a Log Analytics workspace when any ACR which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics enabled.
          display_name: Deploy Diagnostic Settings for Container Instances to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-ACI
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.ContainerInstance/containerGroups","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.ContainerInstance/containerGroups/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACR"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACR
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Container Registry to stream to a Log Analytics workspace when any ACR which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics  enabled.
          display_name: Deploy Diagnostic Settings for Container Registry to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-ACR
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.ContainerRegistry/registries","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"ContainerRegistryLoginEvents","enabled":"[parameters(''logsEnabled'')]"},{"category":"ContainerRegistryRepositoryEvents","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.ContainerRegistry/registries/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AKS"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AKS
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Kubernetes Service to stream to a Log Analytics workspace when any Kubernetes Service which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled.
          display_name: Deploy Diagnostic Settings for Kubernetes Service to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-AKS
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.ContainerService/managedClusters","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"kube-audit","enabled":"[parameters(''logsEnabled'')]"},{"category":"kube-apiserver","enabled":"[parameters(''logsEnabled'')]"},{"category":"kube-controller-manager","enabled":"[parameters(''logsEnabled'')]"},{"category":"kube-scheduler","enabled":"[parameters(''logsEnabled'')]"},{"category":"cluster-autoscaler","enabled":"[parameters(''logsEnabled'')]"},{"category":"guard","enabled":"[parameters(''logsEnabled'')]"},{"category":"kube-audit-admin","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.ContainerService/managedClusters/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-APIMgmt"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-APIMgmt
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for API Management to stream to a Log Analytics workspace when any API Management which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for API Management to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-APIMgmt
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.ApiManagement/service","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"GatewayLogs","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.ApiManagement/service/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ActivityLog"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ActivityLog
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Activity Log to stream to a Log Analytics workspace when any Activity Log which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with category enabled.
          display_name: Deploy Diagnostic Settings for Activity Log to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: All
          name: Deploy-Diagnostics-ActivityLog
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Primary Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"Incremental","parameters":{"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","location":"Global","name":"subscriptionToLa","properties":{"logs":[{"category":"Administrative","enabled":"[parameters(''logsEnabled'')]"},{"category":"Security","enabled":"[parameters(''logsEnabled'')]"},{"category":"ServiceHealth","enabled":"[parameters(''logsEnabled'')]"},{"category":"Alert","enabled":"[parameters(''logsEnabled'')]"},{"category":"Recommendation","enabled":"[parameters(''logsEnabled'')]"},{"category":"Policy","enabled":"[parameters(''logsEnabled'')]"},{"category":"Autoscale","enabled":"[parameters(''logsEnabled'')]"},{"category":"ResourceHealth","enabled":"[parameters(''logsEnabled'')]"}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Insights/diagnosticSettings"}],"variables":{}}}},"deploymentScope":"Subscription","existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"existenceScope":"Subscription","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AnalysisService"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AnalysisService
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Analysis Services to stream to a Log Analytics workspace when any Analysis Services which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Analysis Services to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-AnalysisService
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.AnalysisServices/servers","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"Engine","enabled":"[parameters(''logsEnabled'')]"},{"category":"Service","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.AnalysisServices/servers/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApiForFHIR"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApiForFHIR
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Azure API for FHIR to stream to a Log Analytics workspace when any Azure API for FHIR which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Azure API for FHIR to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-ApiForFHIR
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.HealthcareApis/services","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"AuditLogs","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.HealthcareApis/services/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApplicationGateway"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApplicationGateway
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Application Gateway to stream to a Log Analytics workspace when any Application Gateway which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Application Gateway to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-ApplicationGateway
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Network/applicationGateways","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"ApplicationGatewayAccessLog","enabled":"[parameters(''logsEnabled'')]"},{"category":"ApplicationGatewayPerformanceLog","enabled":"[parameters(''logsEnabled'')]"},{"category":"ApplicationGatewayFirewallLog","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Network/applicationGateways/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Batch"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Batch
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Batch to stream to a Log Analytics workspace when any Batch which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Batch to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-Batch
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Batch/batchAccounts","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"ServiceLog","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Batch/batchAccounts/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CDNEndpoints"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CDNEndpoints
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for CDN Endpoint to stream to a Log Analytics workspace when any CDN Endpoint which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for CDN Endpoint to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-CDNEndpoints
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Cdn/profiles/endpoints","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''fullName'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"CoreAnalytics","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Cdn/profiles/endpoints/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CognitiveServices"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CognitiveServices
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Cognitive Services to stream to a Log Analytics workspace when any Cognitive Services which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Cognitive Services to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-CognitiveServices
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.CognitiveServices/accounts","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"Audit","enabled":"[parameters(''logsEnabled'')]"},{"category":"RequestResponse","enabled":"[parameters(''logsEnabled'')]"},{"category":"Trace","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.CognitiveServices/accounts/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CosmosDB"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CosmosDB
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Cosmos DB to stream to a Log Analytics workspace when any Cosmos DB which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Cosmos DB to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-CosmosDB
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.DocumentDB/databaseAccounts","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"DataPlaneRequests","enabled":"[parameters(''logsEnabled'')]"},{"category":"MongoRequests","enabled":"[parameters(''logsEnabled'')]"},{"category":"QueryRuntimeStatistics","enabled":"[parameters(''logsEnabled'')]"},{"category":"PartitionKeyStatistics","enabled":"[parameters(''logsEnabled'')]"},{"category":"PartitionKeyRUConsumption","enabled":"[parameters(''logsEnabled'')]"},{"category":"ControlPlaneRequests","enabled":"[parameters(''logsEnabled'')]"},{"category":"CassandraRequests","enabled":"[parameters(''logsEnabled'')]"},{"category":"GremlinRequests","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"Requests","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.DocumentDB/databaseAccounts/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DLAnalytics"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DLAnalytics
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Data Lake Analytics to stream to a Log Analytics workspace when any Data Lake Analytics which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Data Lake Analytics to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-DLAnalytics
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.DataLakeAnalytics/accounts","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"Audit","enabled":"[parameters(''logsEnabled'')]"},{"category":"Requests","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.DataLakeAnalytics/accounts/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataExplorerCluster"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataExplorerCluster
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Azure Data Explorer Cluster to stream to a Log Analytics workspace when any Azure Data Explorer Cluster which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Azure Data Explorer Cluster to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-DataExplorerCluster
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Kusto/Clusters","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"SucceededIngestion","enabled":"[parameters(''logsEnabled'')]"},{"category":"FailedIngestion","enabled":"[parameters(''logsEnabled'')]"},{"category":"IngestionBatching","enabled":"[parameters(''logsEnabled'')]"},{"category":"Command","enabled":"[parameters(''logsEnabled'')]"},{"category":"Query","enabled":"[parameters(''logsEnabled'')]"},{"category":"TableUsageStatistics","enabled":"[parameters(''logsEnabled'')]"},{"category":"TableDetails","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Kusto/Clusters/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataFactory"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataFactory
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Data Factory to stream to a Log Analytics workspace when any Data Factory which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Data Factory to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-DataFactory
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.DataFactory/factories","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"ActivityRuns","enabled":"[parameters(''logsEnabled'')]"},{"category":"PipelineRuns","enabled":"[parameters(''logsEnabled'')]"},{"category":"TriggerRuns","enabled":"[parameters(''logsEnabled'')]"},{"category":"SSISPackageEventMessages","enabled":"[parameters(''logsEnabled'')]"},{"category":"SSISPackageExecutableStatistics","enabled":"[parameters(''logsEnabled'')]"},{"category":"SSISPackageEventMessageContext","enabled":"[parameters(''logsEnabled'')]"},{"category":"SSISPackageExecutionComponentPhases","enabled":"[parameters(''logsEnabled'')]"},{"category":"SSISPackageExecutionDataStatistics","enabled":"[parameters(''logsEnabled'')]"},{"category":"SSISIntegrationRuntimeLogs","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.DataFactory/factories/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataLakeStore"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataLakeStore
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Azure Data Lake Store to stream to a Log Analytics workspace when anyAzure Data Lake Store which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Azure Data Lake Store to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-DataLakeStore
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.DataLakeStore/accounts","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"Audit","enabled":"[parameters(''logsEnabled'')]"},{"category":"Requests","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.DataLakeStore/accounts/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Databricks"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Databricks
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Databricks to stream to a Log Analytics workspace when any Databricks which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Databricks to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-Databricks
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Databricks/workspaces","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"dbfs","enabled":"[parameters(''logsEnabled'')]"},{"category":"clusters","enabled":"[parameters(''logsEnabled'')]"},{"category":"accounts","enabled":"[parameters(''logsEnabled'')]"},{"category":"jobs","enabled":"[parameters(''logsEnabled'')]"},{"category":"notebook","enabled":"[parameters(''logsEnabled'')]"},{"category":"ssh","enabled":"[parameters(''logsEnabled'')]"},{"category":"workspace","enabled":"[parameters(''logsEnabled'')]"},{"category":"secrets","enabled":"[parameters(''logsEnabled'')]"},{"category":"sqlPermissions","enabled":"[parameters(''logsEnabled'')]"},{"category":"instancePools","enabled":"[parameters(''logsEnabled'')]"}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Databricks/workspaces/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSub"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSub
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Event Grid subscriptions to stream to a Log Analytics workspace when any Event Grid subscriptions which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Event Grid subscriptions to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-EventGridSub
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.EventGrid/eventSubscriptions","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.EventGrid/eventSubscriptions/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSystemTopic"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSystemTopic
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Event Grid System Topic to stream to a Log Analytics workspace when any Event Grid System Topic which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Event Grid System Topic to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-EventGridSystemTopic
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.EventGrid/systemTopics","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"DeliveryFailures","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.EventGrid/systemTopics/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridTopic"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridTopic
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Event Grid Topic to stream to a Log Analytics workspace when any Event Grid Topic which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Event Grid Topic to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-EventGridTopic
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.EventGrid/topics","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"DeliveryFailures","enabled":"[parameters(''logsEnabled'')]"},{"category":"PublishFailures","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.EventGrid/topics/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventHub"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventHub
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Event Hubs to stream to a Log Analytics workspace when any Event Hubs which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Event Hubs to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-EventHub
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.EventHub/namespaces","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"ArchiveLogs","enabled":"[parameters(''logsEnabled'')]"},{"category":"OperationalLogs","enabled":"[parameters(''logsEnabled'')]"},{"category":"AutoScaleLogs","enabled":"[parameters(''logsEnabled'')]"},{"category":"KafkaCoordinatorLogs","enabled":"[parameters(''logsEnabled'')]"},{"category":"KafkaUserErrorLogs","enabled":"[parameters(''logsEnabled'')]"},{"category":"EventHubVNetConnectionEvent","enabled":"[parameters(''logsEnabled'')]"},{"category":"CustomerManagedKeyUserLogs","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.EventHub/namespaces/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ExpressRoute"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ExpressRoute
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for ExpressRoute to stream to a Log Analytics workspace when any ExpressRoute which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for ExpressRoute to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-ExpressRoute
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Network/expressRouteCircuits","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"PeeringRouteLog","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Network/expressRouteCircuits/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Firewall"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Firewall
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Firewall to stream to a Log Analytics workspace when any Firewall which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Firewall to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-Firewall
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Network/azureFirewalls","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"AzureFirewallApplicationRule","enabled":"[parameters(''logsEnabled'')]"},{"category":"AzureFirewallNetworkRule","enabled":"[parameters(''logsEnabled'')]"},{"category":"AzureFirewallDnsProxy","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Network/azureFirewalls/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-FrontDoor"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-FrontDoor
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Front Door to stream to a Log Analytics workspace when any Front Door which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Front Door to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-FrontDoor
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Network/frontDoors","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"FrontdoorAccessLog","enabled":"[parameters(''logsEnabled'')]"},{"category":"FrontdoorWebApplicationFirewallLog","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Network/frontDoors/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Function"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Function
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Azure Function App to stream to a Log Analytics workspace when any function app which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Azure Function App to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-Function
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Web/sites","field":"type"},{"contains":"functionapp","value":"[field(''kind'')]"}]},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"FunctionAppLogs","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Web/sites/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-HDInsight"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-HDInsight
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for HDInsight to stream to a Log Analytics workspace when any HDInsight which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for HDInsight to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-HDInsight
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.HDInsight/clusters","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.HDInsight/clusters/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-KeyVault"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-KeyVault
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Key Vault to stream to a Log Analytics workspace when any Key Vault which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Key Vault to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-KeyVault
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.KeyVault/vaults","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"AuditEvent","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.KeyVault/vaults/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LoadBalancer"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LoadBalancer
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Load Balancer to stream to a Log Analytics workspace when any Load Balancer which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Load Balancer to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-LoadBalancer
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Network/loadBalancers","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"LoadBalancerAlertEvent","enabled":"[parameters(''logsEnabled'')]"},{"category":"LoadBalancerProbeHealthStatus","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Network/loadBalancers/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogicAppsISE"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogicAppsISE
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Logic Apps integration service environment to stream to a Log Analytics workspace when any Logic Apps integration service environment which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Logic Apps integration service environment to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-LogicAppsISE
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Logic/integrationAccounts","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"IntegrationAccountTrackingEvents","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Logic/integrationAccounts/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogicAppsWF"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogicAppsWF
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Logic Apps Workflow runtimeto stream to a Log Analytics workspace when any Logic Apps Workflow runtime which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Logic Apps Workflow runtime to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-LogicAppsWF
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Logic/workflows","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"WorkflowRuntime","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Logic/workflows/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MariaDB"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MariaDB
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for MariaDB to stream to a Log Analytics workspace when any MariaDB  which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for MariaDB to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-MariaDB
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.DBforMariaDB/servers","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"MySqlSlowLogs","enabled":"[parameters(''logsEnabled'')]"},{"category":"MySqlAuditLogs","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.DBforMariaDB/servers/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MediaService"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MediaService
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Azure Media Service to stream to a Log Analytics workspace when any Azure Media Service which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Azure Media Service to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-MediaService
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Media/mediaServices","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"KeyDeliveryRequests","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Media/mediaServices/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MlWorkspace"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MlWorkspace
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Machine Learning workspace to stream to a Log Analytics workspace when any Machine Learning workspace which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Machine Learning workspace to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-MlWorkspace
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.MachineLearningServices/workspaces","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"AmlComputeClusterEvent","enabled":"[parameters(''logsEnabled'')]"},{"category":"AmlComputeClusterNodeEvent","enabled":"[parameters(''logsEnabled'')]"},{"category":"AmlComputeJobEvent","enabled":"[parameters(''logsEnabled'')]"},{"category":"AmlComputeCpuGpuUtilization","enabled":"[parameters(''logsEnabled'')]"},{"category":"AmlRunStatusChangedEvent","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"Run","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null},{"category":"Model","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":true}},{"category":"Quota","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null},{"category":"Resource","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.MachineLearningServices/workspaces/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MySQL"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MySQL
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Database for MySQL to stream to a Log Analytics workspace when any Database for MySQL which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Database for MySQL to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-MySQL
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.DBforMySQL/servers","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"MySqlSlowLogs","enabled":"[parameters(''logsEnabled'')]"},{"category":"MySqlAuditLogs","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.DBforMySQL/servers/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NIC"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NIC
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Network Interfaces to stream to a Log Analytics workspace when any Network Interfaces which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Network Interfaces to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-NIC
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Network/networkInterfaces","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Network/networkInterfaces/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NetworkSecurityGroups"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NetworkSecurityGroups
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Network Security Groups to stream to a Log Analytics workspace when any Network Security Groups which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Network Security Groups to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-NetworkSecurityGroups
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Network/networkSecurityGroups","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"NetworkSecurityGroupEvent","enabled":"[parameters(''logsEnabled'')]"},{"category":"NetworkSecurityGroupRuleCounter","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Network/networkSecurityGroups/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PostgreSQL"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PostgreSQL
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Database for PostgreSQL to stream to a Log Analytics workspace when any Database for PostgreSQL which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Database for PostgreSQL to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-PostgreSQL
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.DBforPostgreSQL/servers","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"PostgreSQLLogs","enabled":"[parameters(''logsEnabled'')]"},{"category":"QueryStoreRuntimeStatistics","enabled":"[parameters(''logsEnabled'')]"},{"category":"QueryStoreWaitStatistics","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.DBforPostgreSQL/servers/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PowerBIEmbedded"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PowerBIEmbedded
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Power BI Embedded to stream to a Log Analytics workspace when any Power BI Embedded which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Power BI Embedded to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-PowerBIEmbedded
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.PowerBIDedicated/capacities","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"Engine","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.PowerBIDedicated/capacities/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-RecoveryVault"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-RecoveryVault
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Recovery Services vaults to stream to a Log Analytics workspace when any Recovery Services vaults which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Recovery Services vaults to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-RecoveryVault
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.RecoveryServices/vaults","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logAnalyticsDestinationType":"Dedicated","logs":[{"category":"CoreAzureBackup","enabled":"[parameters(''logsEnabled'')]"},{"category":"AddonAzureBackupAlerts","enabled":"[parameters(''logsEnabled'')]"},{"category":"AddonAzureBackupJobs","enabled":"[parameters(''logsEnabled'')]"},{"category":"AddonAzureBackupPolicy","enabled":"[parameters(''logsEnabled'')]"},{"category":"AddonAzureBackupProtectedInstance","enabled":"[parameters(''logsEnabled'')]"},{"category":"AddonAzureBackupStorage","enabled":"[parameters(''logsEnabled'')]"},{"category":"AzureBackupReport","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.RecoveryServices/vaults/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"count":{"field":"Microsoft.Insights/diagnosticSettings/logs[*]","where":{"allOf":[{"field":"Microsoft.Insights/diagnosticSettings/logs[*].Category","in":["CoreAzureBackup","AddonAzureBackupJobs","AddonAzureBackupAlerts","AddonAzureBackupPolicy","AddonAzureBackupStorage","AddonAzureBackupProtectedInstance","AzureBackupReport"]},{"equals":"True","field":"Microsoft.Insights/diagnosticSettings/logs[*].Enabled"}]}},"equals":7},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"},{"equals":"Dedicated","field":"Microsoft.Insights/diagnosticSettings/logAnalyticsDestinationType"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-RedisCache"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-RedisCache
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Redis Cache to stream to a Log Analytics workspace when any Redis Cache which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Redis Cache to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-RedisCache
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Cache/redis","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Cache/redis/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Relay"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Relay
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Relay to stream to a Log Analytics workspace when any Relay which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Relay to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-Relay
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Relay/namespaces","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"HybridConnectionsEvent","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Relay/namespaces/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLDBs"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLDBs
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for SQL Databases to stream to a Log Analytics workspace when any SQL Databases  which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for SQL Databases  to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-SQLDBs
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Sql/servers/databases","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''fullName'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"SQLInsights","enabled":"[parameters(''logsEnabled'')]"},{"category":"AutomaticTuning","enabled":"[parameters(''logsEnabled'')]"},{"category":"DevOpsOperationsAudit","enabled":"[parameters(''logsEnabled'')]"},{"category":"QueryStoreRuntimeStatistics","enabled":"[parameters(''logsEnabled'')]"},{"category":"QueryStoreWaitStatistics","enabled":"[parameters(''logsEnabled'')]"},{"category":"Errors","enabled":"[parameters(''logsEnabled'')]"},{"category":"DatabaseWaitStatistics","enabled":"[parameters(''logsEnabled'')]"},{"category":"Timeouts","enabled":"[parameters(''logsEnabled'')]"},{"category":"Blocks","enabled":"[parameters(''logsEnabled'')]"},{"category":"Deadlocks","enabled":"[parameters(''logsEnabled'')]"},{"category":"SQLSecurityAuditEvents","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Sql/servers/databases/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLElasticPools"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLElasticPools
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for SQL Elastic Pools to stream to a Log Analytics workspace when any SQL Elastic Pools which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for SQL Elastic Pools to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-SQLElasticPools
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Sql/servers/elasticPools","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''fullName'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Sql/servers/elasticPools/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLMI"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLMI
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for SQL Managed Instances to stream to a Log Analytics workspace when any SQL Managed Instances which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for SQL Managed Instances to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-SQLMI
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Sql/managedInstances","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"ResourceUsageStats","enabled":"[parameters(''logsEnabled'')]"},{"category":"SQLSecurityAuditEvents","enabled":"[parameters(''logsEnabled'')]"},{"category":"DevOpsOperationsAudit","enabled":"[parameters(''logsEnabled'')]"}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Sql/managedInstances/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SearchServices"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SearchServices
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Search Services to stream to a Log Analytics workspace when any Search Services which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Search Services to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-SearchServices
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Search/searchServices","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"OperationLogs","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Search/searchServices/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ServiceBus"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ServiceBus
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for ServiceBus to stream to a Log Analytics workspace when any ServiceBus which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Service Bus namespaces  to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-ServiceBus
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.ServiceBus/namespaces","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"OperationalLogs","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.ServiceBus/namespaces/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SignalR"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SignalR
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for SignalR to stream to a Log Analytics workspace when any SignalR which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for SignalR to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-SignalR
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.SignalRService/SignalR","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"AllLogs","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.SignalRService/SignalR/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-StreamAnalytics"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-StreamAnalytics
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Stream Analytics to stream to a Log Analytics workspace when any Stream Analytics which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Stream Analytics to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-StreamAnalytics
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.StreamAnalytics/streamingjobs","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"Execution","enabled":"[parameters(''logsEnabled'')]"},{"category":"Authoring","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.StreamAnalytics/streamingjobs/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TimeSeriesInsights"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TimeSeriesInsights
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Time Series Insights to stream to a Log Analytics workspace when any Time Series Insights which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Time Series Insights to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-TimeSeriesInsights
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.TimeSeriesInsights/environments","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"Ingress","enabled":"[parameters(''logsEnabled'')]"},{"category":"Management","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.TimeSeriesInsights/environments/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TrafficManager"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TrafficManager
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Traffic Manager to stream to a Log Analytics workspace when any Traffic Manager which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Traffic Manager to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-TrafficManager
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Network/trafficManagerProfiles","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"ProbeHealthStatusEvents","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Network/trafficManagerProfiles/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VM"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VM
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Virtual Machines to stream to a Log Analytics workspace when any Virtual Machines which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Virtual Machines to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-VM
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Compute/virtualMachines","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false}}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Compute/virtualMachines/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VMSS"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VMSS
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Virtual Machine Scale Sets  to stream to a Log Analytics workspace when any Virtual Machine Scale Sets  which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Virtual Machine Scale Sets to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-VMSS
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Compute/virtualMachineScaleSets","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false}}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Compute/virtualMachineScaleSets/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VNetGW"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VNetGW
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for VPN Gateway to stream to a Log Analytics workspace when any VPN Gateway which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled.
          display_name: Deploy Diagnostic Settings for VPN Gateway to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-VNetGW
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Network/virtualNetworkGateways","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"GatewayDiagnosticLog","enabled":"[parameters(''logsEnabled'')]"},{"category":"IKEDiagnosticLog","enabled":"[parameters(''logsEnabled'')]"},{"category":"P2SDiagnosticLog","enabled":"[parameters(''logsEnabled'')]"},{"category":"RouteDiagnosticLog","enabled":"[parameters(''logsEnabled'')]"},{"category":"RouteDiagnosticLog","enabled":"[parameters(''logsEnabled'')]"},{"category":"TunnelDiagnosticLog","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Network/virtualNetworkGateways/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VirtualNetwork"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VirtualNetwork
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Virtual Network to stream to a Log Analytics workspace when any Virtual Network which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Virtual Network to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-VirtualNetwork
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Network/virtualNetworks","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"VMProtectionAlerts","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false}}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Network/virtualNetworks/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDAppGroup"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDAppGroup
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for WVD Application group to stream to a Log Analytics workspace when any application group which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all and categorys enabled.
          display_name: Deploy Diagnostic Settings for WVD Application group to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-WVDAppGroup
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.DesktopVirtualization/applicationGroups","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"Checkpoint","enabled":"[parameters(''logsEnabled'')]"},{"category":"Error","enabled":"[parameters(''logsEnabled'')]"},{"category":"Management","enabled":"[parameters(''logsEnabled'')]"}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.DesktopVirtualization/applicationGroups/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDHostPools"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDHostPools
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for WVD Host Pools to stream to a Log Analytics workspace when any Host Pools which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all and categorys enabled.
          display_name: Deploy Diagnostic Settings for WVD Host Pools to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-WVDHostPools
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.DesktopVirtualization/hostpools","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"Checkpoint","enabled":"[parameters(''logsEnabled'')]"},{"category":"Error","enabled":"[parameters(''logsEnabled'')]"},{"category":"Management","enabled":"[parameters(''logsEnabled'')]"},{"category":"Connection","enabled":"[parameters(''logsEnabled'')]"},{"category":"HostRegistration","enabled":"[parameters(''logsEnabled'')]"},{"category":"AgentHealthStatus","enabled":"[parameters(''logsEnabled'')]"}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.DesktopVirtualization/hostpools/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDWorkspace"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDWorkspace
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for WVD Workspace to stream to a Log Analytics workspace when any Workspace which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all and categorys enabled.
          display_name: Deploy Diagnostic Settings for WVD Workspace to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-WVDWorkspace
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.DesktopVirtualization/workspaces","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"Checkpoint","enabled":"[parameters(''logsEnabled'')]"},{"category":"Error","enabled":"[parameters(''logsEnabled'')]"},{"category":"Management","enabled":"[parameters(''logsEnabled'')]"},{"category":"Feed","enabled":"[parameters(''logsEnabled'')]"}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.DesktopVirtualization/workspaces/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WebServerFarm"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WebServerFarm
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for App Service Plan to stream to a Log Analytics workspace when any App Service Plan which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for App Service Plan to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-WebServerFarm
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Web/serverfarms","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Web/serverfarms/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Website"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Website
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Web App to stream to a Log Analytics workspace when any Web App which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for App Service to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-Website
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Web/sites","field":"type"},{"notContains":"functionapp","value":"[field(''kind'')]"}]},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"AppServiceAntivirusScanAuditLogs","enabled":"[parameters(''logsEnabled'')]"},{"category":"AppServiceHTTPLogs","enabled":"[parameters(''logsEnabled'')]"},{"category":"AppServiceConsoleLogs","enabled":"[parameters(''logsEnabled'')]"},{"category":"AppServiceHTTPLogs","enabled":"[parameters(''logsEnabled'')]"},{"category":"AppServiceAppLogs","enabled":"[parameters(''logsEnabled'')]"},{"category":"AppServiceFileAuditLogs","enabled":"[parameters(''logsEnabled'')]"},{"category":"AppServiceAuditLogs","enabled":"[parameters(''logsEnabled'')]"},{"category":"AppServiceIPSecAuditLogs","enabled":"[parameters(''logsEnabled'')]"},{"category":"AppServicePlatformLogs","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Web/sites/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-iotHub"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-iotHub
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for IoT Hub to stream to a Log Analytics workspace when any IoT Hub which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for IoT Hub to Log Analytics workspace
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-iotHub
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Devices/IotHubs","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"Connections","enabled":"[parameters(''logsEnabled'')]"},{"category":"DeviceTelemetry","enabled":"[parameters(''logsEnabled'')]"},{"category":"C2DCommands","enabled":"[parameters(''logsEnabled'')]"},{"category":"DeviceIdentityOperations","enabled":"[parameters(''logsEnabled'')]"},{"category":"FileUploadOperations","enabled":"[parameters(''logsEnabled'')]"},{"category":"Routes","enabled":"[parameters(''logsEnabled'')]"},{"category":"D2CTwinOperations","enabled":"[parameters(''logsEnabled'')]"},{"category":"C2DTwinOperations","enabled":"[parameters(''logsEnabled'')]"},{"category":"TwinQueries","enabled":"[parameters(''logsEnabled'')]"},{"category":"JobsOperations","enabled":"[parameters(''logsEnabled'')]"},{"category":"DirectMethods","enabled":"[parameters(''logsEnabled'')]"},{"category":"DistributedTracing","enabled":"[parameters(''logsEnabled'')]"},{"category":"Configurations","enabled":"[parameters(''logsEnabled'')]"},{"category":"DeviceStreams","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Devices/IotHubs/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-FirewallPolicy"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-FirewallPolicy
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys Azure Firewall Manager policy in subscription where the policy is assigned.
          display_name: Deploy Azure Firewall Manager policy in the subscription
          management_group_name: myorg-2
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: All
          name: Deploy-FirewallPolicy
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"fwPolicyRegion":{"metadata":{"description":"Select Azure region for Azure Firewall Policy","displayName":"fwPolicyRegion","strongType":"location"},"type":"String"},"fwpolicy":{"defaultValue":{},"metadata":{"description":"Object describing Azure Firewall Policy","displayName":"fwpolicy"},"type":"Object"},"rgName":{"metadata":{"description":"Provide name for resource group.","displayName":"rgName"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"Incremental","parameters":{"fwPolicy":{"value":"[parameters(''fwPolicy'')]"},"fwPolicyRegion":{"value":"[parameters(''fwPolicyRegion'')]"},"rgName":{"value":"[parameters(''rgName'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json","contentVersion":"1.0.0.0","outputs":{},"parameters":{"fwPolicy":{"type":"object"},"fwPolicyRegion":{"type":"String"},"rgName":{"type":"String"}},"resources":[{"apiVersion":"2018-05-01","location":"[deployment().location]","name":"[parameters(''rgName'')]","properties":{},"type":"Microsoft.Resources/resourceGroups"},{"apiVersion":"2018-05-01","dependsOn":["[resourceId(''Microsoft.Resources/resourceGroups/'', parameters(''rgName''))]"],"name":"fwpolicies","properties":{"mode":"Incremental","template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json","contentVersion":"1.0.0.0","outputs":{},"parameters":{},"resources":[{"apiVersion":"2019-09-01","dependsOn":[],"location":"[parameters(''fwpolicy'').location]","name":"[parameters(''fwpolicy'').firewallPolicyName]","properties":{},"resources":[{"apiVersion":"2019-09-01","dependsOn":["[resourceId(''Microsoft.Network/firewallPolicies'',parameters(''fwpolicy'').firewallPolicyName)]"],"name":"[parameters(''fwpolicy'').ruleGroups.name]","properties":{"priority":"[parameters(''fwpolicy'').ruleGroups.properties.priority]","rules":"[parameters(''fwpolicy'').ruleGroups.properties.rules]"},"type":"ruleGroups"}],"tags":{},"type":"Microsoft.Network/firewallPolicies"}],"variables":{}}},"resourceGroup":"[parameters(''rgName'')]","type":"Microsoft.Resources/deployments"}]}}},"deploymentScope":"Subscription","existenceScope":"ResourceGroup","resourceGroupName":"[parameters(''rgName'')]","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"],"type":"Microsoft.Network/firewallPolicies"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-HUB"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-HUB
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys Virtual Network to be used as hub virtual network in desired region in the subscription where this policy is assigned.
          display_name: Deploy Virtual Network to be used as hub virtual network in desired region
          management_group_name: myorg-2
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: All
          name: Deploy-HUB
          parameters: '{"HUB":{"metadata":{"description":"Object describing HUB","displayName":"HUB"},"type":"Object"},"azfw":{"defaultValue":{},"metadata":{"description":"Object describing Azure Firewall","displayName":"azfw"},"type":"Object"},"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"ergw":{"defaultValue":{},"metadata":{"description":"Object describing ExpressRoute gateway","displayName":"ergw"},"type":"Object"},"hubName":{"metadata":{"description":"Name of the Hub","displayName":"hubName"},"type":"String"},"rgName":{"metadata":{"description":"Provide name for resource group.","displayName":"rgName"},"type":"String"},"vpngw":{"defaultValue":{},"metadata":{"description":"Object describing VPN gateway","displayName":"vpngw"},"type":"Object"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"Incremental","parameters":{"HUB":{"value":"[parameters(''HUB'')]"},"azfw":{"value":"[parameters(''azfw'')]"},"ergw":{"value":"[parameters(''ergw'')]"},"hubName":{"value":"[parameters(''hubName'')]"},"rgName":{"value":"[parameters(''rgName'')]"},"vpngw":{"value":"[parameters(''vpngw'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json","contentVersion":"1.0.0.0","parameters":{"HUB":{"metadata":{"description":"Object describing HUB"},"type":"object"},"azfw":{"defaultValue":{},"metadata":{"description":"Object describing the Azure Firewall"},"type":"object"},"ergw":{"defaultValue":{},"metadata":{"description":"Object describing ExpressRoute gateway"},"type":"object"},"hubName":{"metadata":{"description":"Name of the HUB"},"type":"String"},"rgName":{"metadata":{"description":"Provide name for resource group.","displayName":"rgName"},"type":"String"},"vpngw":{"defaultValue":{},"metadata":{"description":"Object describing VPN gateway"},"type":"object"}},"resources":[{"apiVersion":"2020-06-01","location":"[deployment().location]","name":"[parameters(''rgName'')]","properties":{},"type":"Microsoft.Resources/resourceGroups"},{"apiVersion":"2020-06-01","dependsOn":["[resourceId(''Microsoft.Resources/resourceGroups/'', parameters(''rgName''))]"],"name":"[concat(parameters(''hubName''),''-'', parameters(''HUB'').location)]","properties":{"mode":"Incremental","template":{"$schema":"https: //schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","parameters":{},"resources":[{"apiVersion":"2020-04-01","location":"[parameters(''HUB'').location]","name":"[parameters(''hubName'')]","properties":{"addressSpace":{"addressPrefixes":["[parameters(''HUB'').addressPrefix]"]},"subnets":[{"name":"Infrastructure","properties":{"addressPrefix":"[if(not(empty(parameters(''HUB'').subnets.infra)),parameters(''HUB'').subnets.infra, json(''null''))]"}},{"name":"AzureFirewallSubnet","properties":{"addressPrefix":"[if(not(empty(parameters(''HUB'').subnets.azfw)),parameters(''HUB'').subnets.azfw, json(''null''))]"}},{"name":"GatewaySubnet","properties":{"addressPrefix":"[if(not(empty(parameters(''HUB'').subnets.gw)),parameters(''HUB'').subnets.gw, json(''null''))]"}}]},"type":"Microsoft.Network/virtualNetworks"}],"variables":{}}},"resourceGroup":"[parameters(''rgName'')]","type":"Microsoft.Resources/deployments"},{"apiVersion":"2020-06-01","condition":"[greater(length(parameters(''vpngw'')),0)]","dependsOn":["[concat(parameters(''hubName''),''-'', parameters(''HUB'').location)]"],"name":"[concat(parameters(''hubName''),''-vpngw'')]","properties":{"mode":"Incremental","template":{"$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","parameters":{},"resources":[{"apiVersion":"2020-05-01","location":"[parameters(''HUB'').location]","name":"[concat(parameters(''vpngw'').name,''-pip'')]","properties":{"publicIPAllocationMethod":"Dynamic"},"tags":{},"type":"Microsoft.Network/publicIpAddresses"},{"apiVersion":"2020-05-01","dependsOn":["[concat(''Microsoft.Network/publicIPAddresses/'', parameters(''vpngw'').name,''-pip'')]"],"location":"[parameters(''HUB'').location]","name":"[parameters(''vpngw'').name]","properties":{"gatewayType":"Vpn","ipConfigurations":[{"name":"default","properties":{"privateIPAllocationMethod":"Dynamic","publicIpAddress":{"id":"[concat(subscription().id,''/resourceGroups/'',parameters(''rgName''), ''/providers'',''/Microsoft.Network/publicIPAddresses/'', parameters(''vpngw'').name,''-pip'')]"},"subnet":{"id":"[concat(subscription().id,''/resourceGroups/'',parameters(''rgName''), ''/providers'',''/Microsoft.Network/virtualNetworks/'', parameters(''hubName''),''/subnets/GatewaySubnet'')]"}}}],"sku":{"name":"[parameters(''vpngw'').sku]","tier":"[parameters(''vpngw'').sku]"},"vpnType":"[parameters(''vpngw'').vpnType]"},"tags":{},"type":"Microsoft.Network/virtualNetworkGateways"}],"variables":{}}},"resourceGroup":"[parameters(''rgName'')]","type":"Microsoft.Resources/deployments"},{"apiVersion":"2020-06-01","condition":"[greater(length(parameters(''ergw'')),0)]","dependsOn":["[concat(parameters(''hubName''),''-'', parameters(''HUB'').location)]"],"name":"[concat(parameters(''hubName''),''-ergw'')]","properties":{"mode":"Incremental","template":{"$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","parameters":{},"resources":[{"apiVersion":"2020-05-01","location":"[parameters(''HUB'').location]","name":"[concat(parameters(''ergw'').name,''-pip'')]","properties":{"publicIPAllocationMethod":"Dynamic"},"tags":{},"type":"Microsoft.Network/publicIpAddresses"},{"apiVersion":"2020-05-01","dependsOn":["[concat(''Microsoft.Network/publicIPAddresses/'', parameters(''ergw'').name,''-pip'')]"],"location":"[parameters(''HUB'').location]","name":"[parameters(''ergw'').name]","properties":{"gatewayType":"ExpressRoute","ipConfigurations":[{"name":"default","properties":{"privateIPAllocationMethod":"Dynamic","publicIpAddress":{"id":"[concat(subscription().id,''/resourceGroups/'',parameters(''rgName''), ''/providers'',''/Microsoft.Network/publicIPAddresses/'', parameters(''ergw'').name,''-pip'')]"},"subnet":{"id":"[concat(subscription().id,''/resourceGroups/'',parameters(''rgName''), ''/providers'',''/Microsoft.Network/virtualNetworks/'', parameters(''hubName''),''/subnets/GatewaySubnet'')]"}}}],"sku":{"name":"[parameters(''ergw'').sku]","tier":"[parameters(''ergw'').sku]"}},"tags":{},"type":"Microsoft.Network/virtualNetworkGateways"}],"variables":{}}},"resourceGroup":"[parameters(''rgName'')]","type":"Microsoft.Resources/deployments"},{"apiVersion":"2020-06-01","condition":"[greater(length(parameters(''azfw'')),0)]","dependsOn":["[concat(parameters(''hubName''),''-'', parameters(''HUB'').location)]"],"name":"[concat(parameters(''hubName''),''-azfw'')]","properties":{"mode":"Incremental","template":{"$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","parameters":{},"resources":[{"apiVersion":"2020-05-01","location":"[parameters(''azfw'').location]","name":"[concat(parameters(''azfw'').name,''-pip'')]","properties":{"publicIPAllocationMethod":"Static"},"sku":{"name":"Standard"},"tags":{},"type":"Microsoft.Network/publicIpAddresses","zones":"[if(contains(parameters(''azfw''),''pipZones''),parameters(''azfw'').pipZones,json(''null''))]"},{"apiVersion":"2020-05-01","dependsOn":["[concat(parameters(''azfw'').name,''-pip'')]"],"location":"[parameters(''azfw'').location]","name":"[parameters(''azfw'').name]","properties":{"additionalProperties":"[if(contains(parameters(''azfw''),''additionalProperties''),parameters(''azfw'').additionalProperties,json(''null''))]","firewallPolicy":"[if(contains(parameters(''azfw''),''firewallPolicy''),parameters(''azfw'').firewallPolicy,json(''null''))]","ipConfigurations":[{"name":"[concat(parameters(''azfw'').name,''-pip'')]","properties":{"publicIPAddress":{"id":"[concat(subscription().id,''/resourceGroups/'',parameters(''rgName''), ''/providers'',''/Microsoft.Network/publicIPAddresses/'', parameters(''azfw'').name,''-pip'')]"},"subnet":{"id":"[concat(subscription().id,''/resourceGroups/'',parameters(''rgName''), ''/providers'',''/Microsoft.Network/virtualNetworks/'', parameters(''hubName''),''/subnets/AzureFirewallSubnet'')]"}}}],"sku":"[if(contains(parameters(''azfw''),''sku''),parameters(''azfw'').sku,json(''null''))]","threatIntelMode":"[parameters(''azfw'').threatIntelMode]"},"tags":{},"type":"Microsoft.Network/azureFirewalls","zones":"[if(contains(parameters(''azfw''),''fwZones''),parameters(''azfw'').fwZones,json(''null''))]"}],"variables":{}}},"resourceGroup":"[parameters(''rgName'')]","type":"Microsoft.Resources/deployments"}],"variables":{}}}},"deploymentScope":"Subscription","existenceScope":"ResourceGroup","name":"[parameters(''hubName'')]","resourceGroupName":"[parameters(''rgName'')]","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"],"type":"Microsoft.Network/virtualNetworks"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-LA-Config"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-LA-Config
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: 'Deploy the configurations to the Log Analytics in the subscription. This includes a list of solutions like update, automation etc and  enables the vminsight counters. '
          display_name: Deploy the configurations to the Log Analytics in the subscription
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-LA-Config
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"workspaceName":{"metadata":{"description":"Provide name of existing Log Analytics workspace","displayName":"workspaceName"},"type":"String"},"workspaceRegion":{"metadata":{"description":"Select region of existing Log Analytics workspace","displayName":"workspaceRegion"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.OperationalInsights/workspaces","field":"type"}]},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"workspaceName":{"value":"[parameters(''workspaceName'')]"},"workspaceRegion":{"value":"[parameters(''workspaceRegion'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"workspaceName":{"type":"String"},"workspaceRegion":{"type":"String"}},"resources":[{"apiVersion":"2015-11-01-preview","kind":"LinuxPerformanceCollection","name":"[concat(parameters(''workspaceName''), ''/LinuxPerfCollection'')]","properties":{"state":"Enabled"},"type":"Microsoft.OperationalInsights/workspaces/datasources"},{"apiVersion":"2015-11-01-preview","kind":"LinuxPerformanceObject","name":"[concat(parameters(''workspaceName''), ''/'', variables(''vmInsightsPerfCounters'').linuxDiskObject.armResourceName)]","properties":{"instanceName":"[variables(''vmInsightsPerfCounters'').linuxDiskObject.instanceName]","intervalSeconds":"[variables(''vmInsightsPerfCounters'').linuxDiskObject.intervalSeconds]","objectName":"[variables(''vmInsightsPerfCounters'').linuxDiskObject.objectName]","performanceCounters":"[variables(''vmInsightsPerfCounters'').linuxDiskArray]"},"type":"Microsoft.OperationalInsights/workspaces/dataSources"},{"apiVersion":"2015-11-01-preview","kind":"LinuxPerformanceObject","name":"[concat(parameters(''workspaceName''), ''/'', variables(''vmInsightsPerfCounters'').linuxMemoryObject.armResourceName)]","properties":{"instanceName":"[variables(''vmInsightsPerfCounters'').linuxMemoryObject.instanceName]","intervalSeconds":"[variables(''vmInsightsPerfCounters'').linuxMemoryObject.intervalSeconds]","objectName":"[variables(''vmInsightsPerfCounters'').linuxMemoryObject.objectName]","performanceCounters":"[variables(''vmInsightsPerfCounters'').linuxMemoryArray]"},"type":"Microsoft.OperationalInsights/workspaces/dataSources"},{"apiVersion":"2015-11-01-preview","kind":"LinuxPerformanceObject","name":"[concat(parameters(''workspaceName''), ''/'', variables(''vmInsightsPerfCounters'').linuxCpuObject.armResourceName)]","properties":{"instanceName":"[variables(''vmInsightsPerfCounters'').linuxCpuObject.instanceName]","intervalSeconds":"[variables(''vmInsightsPerfCounters'').linuxCpuObject.intervalSeconds]","objectName":"[variables(''vmInsightsPerfCounters'').linuxCpuObject.objectName]","performanceCounters":"[variables(''vmInsightsPerfCounters'').linuxCpuArray]"},"type":"Microsoft.OperationalInsights/workspaces/dataSources"},{"apiVersion":"2015-11-01-preview","kind":"LinuxPerformanceObject","name":"[concat(parameters(''workspaceName''), ''/'', variables(''vmInsightsPerfCounters'').linuxNetworkObject.armResourceName)]","properties":{"instanceName":"[variables(''vmInsightsPerfCounters'').linuxNetworkObject.instanceName]","intervalSeconds":"[variables(''vmInsightsPerfCounters'').linuxNetworkObject.intervalSeconds]","objectName":"[variables(''vmInsightsPerfCounters'').linuxNetworkObject.objectName]","performanceCounters":"[variables(''vmInsightsPerfCounters'').linuxNetworkArray]"},"type":"Microsoft.OperationalInsights/workspaces/dataSources"},{"apiVersion":"2015-11-01-preview","copy":{"count":"[length(variables(''vmInsightsPerfCounters'').windowsArray)]","name":"counterCopy"},"kind":"WindowsPerformanceCounter","name":"[concat(parameters(''workspaceName''), ''/'', variables(''vmInsightsPerfCounters'').windowsArray[copyIndex()].armName)]","properties":{"counterName":"[variables(''vmInsightsPerfCounters'').windowsArray[copyIndex()].counterName]","instanceName":"[variables(''vmInsightsPerfCounters'').windowsArray[copyIndex()].instanceName]","intervalSeconds":"[variables(''vmInsightsPerfCounters'').windowsArray[copyIndex()].intervalSeconds]","objectName":"[variables(''vmInsightsPerfCounters'').windowsArray[copyIndex()].objectName]"},"type":"Microsoft.OperationalInsights/workspaces/dataSources"},{"apiVersion":"2015-11-01-preview","copy":{"count":"[length(variables(''batch1'').solutions)]","name":"solutionCopy"},"location":"[parameters(''workspaceRegion'')]","name":"[concat(variables(''batch1'').solutions[copyIndex()].Name)]","plan":{"name":"[variables(''batch1'').solutions[copyIndex()].name]","product":"[concat(''OMSGallery/'', variables(''batch1'').solutions[copyIndex()].marketplaceName)]","promotionCode":"","publisher":"Microsoft"},"properties":{"workspaceResourceId":"[resourceId(''Microsoft.OperationalInsights/workspaces/'', parameters(''workspaceName''))]"},"type":"Microsoft.OperationsManagement/solutions"}],"variables":{"batch1":{"solutions":[{"marketplaceName":"Security","name":"[concat(''Security'', ''('', parameters(''workspaceName''), '')'')]"},{"marketplaceName":"AgentHealthAssessment","name":"[concat(''AgentHealthAssessment'', ''('', parameters(''workspaceName''), '')'')]"},{"marketplaceName":"ChangeTracking","name":"[concat(''ChangeTracking'', ''('', parameters(''workspaceName''), '')'')]"},{"marketplaceName":"Updates","name":"[concat(''Updates'', ''('', parameters(''workspaceName''), '')'')]"},{"marketplaceName":"AzureActivity","name":"[concat(''AzureActivity'', ''('', parameters(''workspaceName''), '')'')]"},{"marketplaceName":"AzureAutomation","name":"[concat(''AzureAutomation'', ''('', parameters(''workspaceName''), '')'')]"},{"marketplaceName":"ADAssessment","name":"[concat(''ADAssessment'', ''('', parameters(''workspaceName''), '')'')]"},{"marketplaceName":"SQLAssessment","name":"[concat(''SQLAssessment'', ''('', parameters(''workspaceName''), '')'')]"},{"marketplaceName":"VMInsights","name":"[concat(''VMInsights'', ''('', parameters(''workspaceName''), '')'')]"},{"marketplaceName":"ServiceMap","name":"[concat(''ServiceMap'', ''('', parameters(''workspaceName''), '')'')]"},{"marketplaceName":"SecurityInsights","name":"[concat(''SecurityInsights'', ''('', parameters(''workspaceName''), '')'')]"}]},"vmInsightsPerfCounters":{"linuxCpuArray":[{"counterName":"% Processor Time"}],"linuxCpuObject":{"armResourceName":"Processor","instanceName":"*","intervalSeconds":10,"objectName":"Processor"},"linuxDiskArray":[{"counterName":"% Used Inodes"},{"counterName":"Free Megabytes"},{"counterName":"% Used Space"},{"counterName":"Disk Transfers/sec"},{"counterName":"Disk Reads/sec"},{"counterName":"Disk writes/sec"}],"linuxDiskObject":{"armResourceName":"Disk","instanceName":"*","intervalSeconds":10,"objectName":"Logical Disk"},"linuxMemoryArray":[{"counterName":"Available MBytes Memory"}],"linuxMemoryObject":{"armResourceName":"Memory","instanceName":"*","intervalSeconds":10,"objectName":"Memory"},"linuxNetworkArray":[{"counterName":"Total Bytes Received"},{"counterName":"Total Bytes Transmitted"}],"linuxNetworkObject":{"armResourceName":"Network","instanceName":"*","intervalSeconds":10,"objectName":"Network"},"windowsArray":[{"armName":"counter1","counterName":"% Free Space","instanceName":"*","intervalSeconds":10,"objectName":"LogicalDisk"},{"armName":"counter2","counterName":"Avg. Disk sec/Read","instanceName":"*","intervalSeconds":10,"objectName":"LogicalDisk"},{"armName":"counter3","counterName":"Avg. Disk sec/Transfer","instanceName":"*","intervalSeconds":10,"objectName":"LogicalDisk"},{"armName":"counter4","counterName":"Avg. Disk sec/Write","instanceName":"*","intervalSeconds":10,"objectName":"LogicalDisk"},{"armName":"counter5","counterName":"Disk Read Bytes/sec","instanceName":"*","intervalSeconds":10,"objectName":"LogicalDisk"},{"armName":"counter6","counterName":"Disk Reads/sec","instanceName":"*","intervalSeconds":10,"objectName":"LogicalDisk"},{"armName":"counter7","counterName":"Disk Transfers/sec","instanceName":"*","intervalSeconds":10,"objectName":"LogicalDisk"},{"armName":"counter8","counterName":"Disk Write Bytes/sec","instanceName":"*","intervalSeconds":10,"objectName":"LogicalDisk"},{"armName":"counter9","counterName":"Disk Writes/sec","instanceName":"*","intervalSeconds":10,"objectName":"LogicalDisk"},{"armName":"counter10","counterName":"Free Megabytes","instanceName":"*","intervalSeconds":10,"objectName":"LogicalDisk"},{"armName":"counter11","counterName":"Available MBytes","instanceName":"*","intervalSeconds":10,"objectName":"Memory"},{"armName":"counter12","counterName":"Bytes Received/sec","instanceName":"*","intervalSeconds":10,"objectName":"Network Adapter"},{"armName":"counter13","counterName":"Bytes Sent/sec","instanceName":"*","intervalSeconds":10,"objectName":"Network Adapter"},{"armName":"counter14","counterName":"% Processor Time","instanceName":"*","intervalSeconds":10,"objectName":"Processor"}]}}}}},"deploymentScope":"resourceGroup","existenceCondition":{"allOf":[{"field":"name","like":"[parameters(''workspaceName'')]"},{"equals":"[parameters(''workspaceRegion'')]","field":"location"}]},"existenceScope":"Subscription","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.OperationalInsights/workspaces"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Log-Analytics"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Log-Analytics
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys Log Analytics and Automation account to the subscription where the policy is assigned.
          display_name: Deploy the Log Analytics in the subscription
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: All
          name: Deploy-Log-Analytics
          parameters: '{"automationAccountName":{"metadata":{"description":"Provide name for automation account","displayName":"automationAccountName"},"type":"String"},"automationRegion":{"metadata":{"description":"Select Azure region for Automation account","displayName":"automationRegion"},"type":"String"},"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"retentionInDays":{"defaultValue":"30","metadata":{"description":"Select data retention (days) for Log Analytics.","displayName":"Data retention"},"type":"String"},"rgName":{"metadata":{"description":"Provide name for resource group.","displayName":"rgName"},"type":"String"},"workspaceName":{"metadata":{"description":"Provide name for log analytics workspace","displayName":"workspaceName"},"type":"String"},"workspaceRegion":{"metadata":{"description":"Select Azure region for Log Analytics","displayName":"workspaceRegion"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"Incremental","parameters":{"automationAccountName":{"value":"[parameters(''automationAccountName'')]"},"automationRegion":{"value":"[parameters(''automationRegion'')]"},"retentionInDays":{"value":"[parameters(''retentionInDays'')]"},"rgName":{"value":"[parameters(''rgName'')]"},"workspaceName":{"value":"[parameters(''workspaceName'')]"},"workspaceRegion":{"value":"[parameters(''workspaceRegion'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json","contentVersion":"1.0.0.0","outputs":{},"parameters":{"automationAccountName":{"type":"String"},"automationRegion":{"type":"String"},"retentionInDays":{"type":"String"},"rgName":{"type":"String"},"workspaceName":{"type":"String"},"workspaceRegion":{"type":"String"}},"resources":[{"apiVersion":"2018-05-01","location":"[deployment().location]","name":"[parameters(''rgName'')]","properties":{},"type":"Microsoft.Resources/resourceGroups"},{"apiVersion":"2018-05-01","dependsOn":["[resourceId(''Microsoft.Resources/resourceGroups/'', parameters(''rgName''))]"],"name":"log-analytics","properties":{"mode":"Incremental","template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json","contentVersion":"1.0.0.0","outputs":{},"parameters":{},"resources":[{"apiVersion":"2015-10-31","comments":"Automation account for ","location":"[parameters(''AutomationRegion'')]","name":"[parameters(''AutomationAccountName'')]","properties":{"sku":{"name":"Basic"}},"type":"Microsoft.Automation/automationAccounts"},{"apiVersion":"2020-08-01","location":"[parameters(''workspaceRegion'')]","name":"[parameters(''workspaceName'')]","properties":{"enableLogAccessUsingOnlyResourcePermissions":true,"retentionInDays":"[int(parameters(''retentionInDays''))]","sku":{"name":"PerGB2018"}},"resources":[{"apiVersion":"2020-08-01","dependsOn":["[resourceId(''Microsoft.OperationalInsights/workspaces/'', parameters(''workspaceName''))]","[resourceId(''Microsoft.Automation/automationAccounts/'', parameters(''AutomationAccountName''))]"],"name":"Automation","properties":{"resourceId":"[concat(subscription().id, ''/resourceGroups/'', parameters(''rgName''), ''/providers/Microsoft.Automation/automationAccounts/'', parameters(''AutomationAccountName''))]"},"type":"linkedServices"}],"type":"Microsoft.OperationalInsights/workspaces"}],"variables":{}}},"resourceGroup":"[parameters(''rgName'')]","type":"Microsoft.Resources/deployments"}],"variables":{}}}},"deploymentScope":"Subscription","existenceCondition":{"allOf":[{"field":"name","like":"[parameters(''workspaceName'')]"}]},"existenceScope":"Subscription","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.OperationalInsights/workspaces"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-MySQL-sslEnforcement"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-MySQL-sslEnforcement
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy a specific min TLS version requirement and enforce SSL on Azure Database for MySQL server. Enforce the Server to client applications using minimum version of Tls to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.
          display_name: Azure Database for MySQL server deploy a specific min TLS version and enforce SSL.
          management_group_name: myorg-2
          metadata: '{"category":"SQL","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-MySQL-sslEnforcement
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy minimum TLS version Azure Database for MySQL server","displayName":"Effect minimum TLS version Azure Database for MySQL server"},"type":"String"},"minimalTlsVersion":{"allowedValues":["TLS1_2","TLS1_0","TLS1_1","TLSEnforcementDisabled"],"defaultValue":"TLS1_2","metadata":{"description":"Select version  minimum TLS version Azure Database for MySQL server to enforce","displayName":"Select version minimum TLS for MySQL server"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.DBforMySQL/servers","field":"type"},{"anyOf":[{"field":"Microsoft.DBforMySQL/servers/sslEnforcement","notEquals":"Enabled"},{"field":"Microsoft.DBforMySQL/servers/minimalTlsVersion","notequals":"[parameters(''minimalTlsVersion'')]"}]}]},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"minimalTlsVersion":{"value":"[parameters(''minimalTlsVersion'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"minimalTlsVersion":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-12-01","location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''))]","properties":{"minimalTlsVersion":"[parameters(''minimalTlsVersion'')]","sslEnforcement":"[if(equals(parameters(''minimalTlsVersion''), ''TLSEnforcementDisabled''),''Disabled'', ''Enabled'')]"},"type":"Microsoft.DBforMySQL/servers"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"Enabled","field":"Microsoft.DBforMySQL/servers/sslEnforcement"},{"equals":"[parameters(''minimalTlsVersion'')]","field":"Microsoft.DBforMySQL/servers/minimalTlsVersion"}]},"roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/8e3af657-a8ff-443c-a75c-2fe8c4bcb635"],"type":"Microsoft.DBforMySQL/servers"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys NSG flow logs and traffic analytics to a storageaccountid with a specfied retention period.
          display_name: Deploys NSG flow logs and traffic analytics
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Nsg-FlowLogs
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"flowAnalyticsEnabled":{"defaultValue":false,"metadata":{"displayName":"Enable Traffic Analytics"},"type":"Boolean"},"logAnalytics":{"defaultValue":"","metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Resource ID of Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"retention":{"defaultValue":5,"metadata":{"displayName":"Retention"},"type":"Integer"},"storageAccountResourceId":{"metadata":{"displayName":"Storage Account Resource Id","strongType":"Microsoft.Storage/storageAccounts"},"type":"String"},"trafficAnalyticsInterval":{"defaultValue":60,"metadata":{"displayName":"Traffic Analytics processing interval mins (10/60)"},"type":"Integer"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Network/networkSecurityGroups","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"flowAnalyticsEnabled":{"value":"[parameters(''flowAnalyticsEnabled'')]"},"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"networkSecurityGroupName":{"value":"[field(''name'')]"},"resourceGroupName":{"value":"[resourceGroup().name]"},"retention":{"value":"[parameters(''retention'')]"},"storageAccountResourceId":{"value":"[parameters(''storageAccountResourceId'')]"},"trafficAnalyticsInterval":{"value":"[parameters(''trafficAnalyticsInterval'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"flowAnalyticsEnabled":{"type":"bool"},"location":{"type":"String"},"logAnalytics":{"type":"String"},"networkSecurityGroupName":{"type":"String"},"resourceGroupName":{"type":"String"},"retention":{"type":"int"},"storageAccountResourceId":{"type":"String"},"trafficAnalyticsInterval":{"type":"int"}},"resources":[{"apiVersion":"2020-05-01","location":"[parameters(''location'')]","name":"[take(concat(''NetworkWatcher_'', toLower(parameters(''location'')),  ''/'', parameters(''networkSecurityGroupName''), ''-'', parameters(''resourceGroupName''), ''-flowlog'' ), 80)]","properties":{"enabled":true,"flowAnalyticsConfiguration":{"networkWatcherFlowAnalyticsConfiguration":{"enabled":"[bool(parameters(''flowAnalyticsEnabled''))]","trafficAnalyticsInterval":"[parameters(''trafficAnalyticsInterval'')]","workspaceId":"[if(not(empty(parameters(''logAnalytics''))), reference(parameters(''logAnalytics''), ''2020-03-01-preview'', ''Full'').properties.customerId, json(''null'')) ]","workspaceRegion":"[if(not(empty(parameters(''logAnalytics''))), reference(parameters(''logAnalytics''), ''2020-03-01-preview'', ''Full'').location, json(''null'')) ]","workspaceResourceId":"[if(not(empty(parameters(''logAnalytics''))), parameters(''logAnalytics''), json(''null''))]"}},"format":{"type":"JSON","version":2},"retentionPolicy":{"days":"[parameters(''retention'')]","enabled":true},"storageId":"[parameters(''storageAccountResourceId'')]","targetResourceId":"[resourceId(parameters(''resourceGroupName''), ''Microsoft.Network/networkSecurityGroups'', parameters(''networkSecurityGroupName''))]"},"type":"Microsoft.Network/networkWatchers/flowLogs"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Network/networkWatchers/flowLogs/enabled"},{"equals":"[parameters(''flowAnalyticsEnabled'')]","field":"Microsoft.Network/networkWatchers/flowLogs/flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.enabled"}]},"resourceGroupName":"NetworkWatcherRG","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Network/networkWatchers/flowLogs"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs-to-LA"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs-to-LA
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys NSG flow logs and traffic analytics to Log Analytics with a specfied retention period.
          display_name: Deploys NSG flow logs and traffic analytics to Log Analytics
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.1.0"}'
          mode: Indexed
          name: Deploy-Nsg-FlowLogs-to-LA
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"interval":{"defaultValue":60,"metadata":{"displayName":"Traffic Analytics processing interval mins (10/60)"},"type":"Integer"},"retention":{"defaultValue":5,"metadata":{"displayName":"Retention"},"type":"Integer"},"workspace":{"defaultValue":"","metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Resource ID of Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Network/networkSecurityGroups","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"Incremental","parameters":{"interval":{"value":"[parameters(''interval'')]"},"location":{"value":"[field(''location'')]"},"networkSecurityGroup":{"value":"[field(''id'')]"},"retention":{"value":"[parameters(''retention'')]"},"workspace":{"value":"[parameters(''workspace'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"interval":{"type":"int"},"location":{"type":"String"},"networkSecurityGroup":{"type":"String"},"retention":{"type":"int"},"time":{"defaultValue":"[utcNow()]","type":"String"},"workspace":{"type":"String"}},"resources":[{"apiVersion":"2019-10-01","name":"[concat(variables(''resourceGroupName''), ''.'', variables(''securityGroupName''))]","properties":{"mode":"Incremental","template":{"$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","resources":[{"apiVersion":"2019-06-01","kind":"StorageV2","location":"[parameters(''location'')]","name":"[variables(''storageAccountName'')]","properties":{},"sku":{"name":"Standard_LRS","tier":"Standard"},"type":"Microsoft.Storage/storageAccounts"}]}},"resourceGroup":"[variables(''resourceGroupName'')]","type":"Microsoft.Resources/deployments"},{"apiVersion":"2019-10-01","dependsOn":["[concat(variables(''resourceGroupName''), ''.'', variables(''securityGroupName''))]"],"name":"[concat(''NetworkWatcherRG'', ''.'', variables(''securityGroupName''))]","properties":{"mode":"Incremental","template":{"$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","resources":[{"apiVersion":"2020-05-01","location":"[parameters(''location'')]","name":"[concat(''NetworkWatcher_'', toLower(parameters(''location'')))]","properties":{},"resources":[{"apiVersion":"2019-11-01","dependsOn":["[concat(''NetworkWatcher_'', toLower(parameters(''location'')))]"],"location":"[parameters(''location'')]","name":"[concat(variables(''securityGroupName''), ''-Network-flowlog'')]","properties":{"enabled":true,"flowAnalyticsConfiguration":{"networkWatcherFlowAnalyticsConfiguration":{"enabled":true,"trafficAnalyticsInterval":"[parameters(''interval'')]","workspaceResourceId":"[parameters(''workspace'')]"}},"format":{"type":"JSON","version":2},"retentionPolicy":{"days":"[parameters(''retention'')]","enabled":true},"storageId":"[concat(subscription().id, ''/resourceGroups/'', variables(''resourceGroupName''), ''/providers/Microsoft.Storage/storageAccounts/'', variables(''storageAccountName''))]","targetResourceId":"[parameters(''networkSecurityGroup'')]"},"type":"flowLogs"}],"type":"Microsoft.Network/networkWatchers"}]}},"resourceGroup":"NetworkWatcherRG","type":"Microsoft.Resources/deployments"}],"variables":{"resourceGroupName":"[split(parameters(''networkSecurityGroup''), ''/'')[4]]","securityGroupName":"[split(parameters(''networkSecurityGroup''), ''/'')[8]]","storageAccountName":"[concat(''es'', uniqueString(variables(''securityGroupName''), parameters(''time'')))]"}}}},"deploymentScope":"subscription","existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Network/networkWatchers/flowLogs/enabled"}]},"existenceScope":"resourceGroup","name":"[if(empty(coalesce(field(''Microsoft.Network/networkSecurityGroups/flowLogs[*].id''))), ''null/null'', concat(split(first(field(''Microsoft.Network/networkSecurityGroups/flowLogs[*].id'')), ''/'')[8], ''/'', split(first(field(''Microsoft.Network/networkSecurityGroups/flowLogs[*].id'')), ''/'')[10]))]","resourceGroupName":"[if(empty(coalesce(field(''Microsoft.Network/networkSecurityGroups/flowLogs''))), ''NetworkWatcherRG'', split(first(field(''Microsoft.Network/networkSecurityGroups/flowLogs[*].id'')), ''/'')[4])]","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7","/providers/Microsoft.Authorization/roleDefinitions/81a9662b-bebf-436f-a333-f67b29880f12","/providers/Microsoft.Authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293","/providers/Microsoft.Authorization/roleDefinitions/17d1049b-9a84-46fb-8f53-869881c3d3ab","/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"],"type":"Microsoft.Network/networkWatchers/flowlogs"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-PostgreSQL-sslEnforcement"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-PostgreSQL-sslEnforcement
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy a specific min TLS version requirement and enforce SSL on Azure Database for PostgreSQL server. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.
          display_name: 'Azure Database for PostgreSQL server deploy a specific min TLS version requirement and enforce SSL '
          management_group_name: myorg-2
          metadata: '{"category":"SQL","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-PostgreSQL-sslEnforcement
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy minimum TLS version Azure Database for PostgreSQL server","displayName":"Effect Azure Database for PostgreSQL server"},"type":"String"},"minimalTlsVersion":{"allowedValues":["TLS1_2","TLS1_0","TLS1_1","TLSEnforcementDisabled"],"defaultValue":"TLS1_2","metadata":{"description":"Select version minimum TLS version Azure Database for PostgreSQL server to enforce","displayName":"Select version for PostgreSQL server"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.DBforPostgreSQL/servers","field":"type"},{"anyOf":[{"field":"Microsoft.DBforPostgreSQL/servers/sslEnforcement","notEquals":"Enabled"},{"field":"Microsoft.DBforPostgreSQL/servers/minimalTlsVersion","notEquals":"[parameters(''minimalTlsVersion'')]"}]}]},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"minimalTlsVersion":{"value":"[parameters(''minimalTlsVersion'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"minimalTlsVersion":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-12-01","location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''))]","properties":{"minimalTlsVersion":"[parameters(''minimalTlsVersion'')]","sslEnforcement":"[if(equals(parameters(''minimalTlsVersion''), ''TLSEnforcementDisabled''),''Disabled'', ''Enabled'')]"},"type":"Microsoft.DBforPostgreSQL/servers"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"Enabled","field":"Microsoft.DBforPostgreSQL/servers/sslEnforcement"},{"equals":"[parameters(''minimalTlsVersion'')]","field":"Microsoft.DBforPostgreSQL/servers/minimalTlsVersion"}]},"name":"current","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/8e3af657-a8ff-443c-a75c-2fe8c4bcb635"],"type":"Microsoft.DBforPostgreSQL/servers"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-SQL-minTLS"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-SQL-minTLS
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys a specific min TLS version requirement and enforce SSL on SQL servers. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.
          display_name: SQL servers deploys a specific min TLS version requirement.
          management_group_name: myorg-2
          metadata: '{"category":"SQL","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-SQL-minTLS
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy minimum TLS version SQL servers","displayName":"Effect SQL servers"},"type":"String"},"minimalTlsVersion":{"allowedValues":["1.2","1.1","1.0"],"defaultValue":"1.2","metadata":{"description":"Select version minimum TLS version SQL servers to enforce","displayName":"Select version for SQL server"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Sql/servers","field":"type"},{"field":"Microsoft.Sql/servers/minimalTlsVersion","notequals":"[parameters(''minimalTlsVersion'')]"}]},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"minimalTlsVersion":{"value":"[parameters(''minimalTlsVersion'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"minimalTlsVersion":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2019-06-01-preview","location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''))]","properties":{"minimalTlsVersion":"[parameters(''minimalTlsVersion'')]"},"type":"Microsoft.Sql/servers"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"[parameters(''minimalTlsVersion'')]","field":"Microsoft.Sql/servers/minimalTlsVersion"}]},"name":"current","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/8e3af657-a8ff-443c-a75c-2fe8c4bcb635"],"type":"Microsoft.Sql/servers"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-AuditingSettings"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-AuditingSettings
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy auditing settings to SQL Database when it not exist in the deployment
          display_name: Deploy SQL database auditing settings
          management_group_name: myorg-2
          metadata: '{"category":"SQL","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Sql-AuditingSettings
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Sql/servers/databases","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"sqlServerDataBaseName":{"value":"[field(''name'')]"},"sqlServerName":{"value":"[first(split(field(''fullname''),''/''))]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"sqlServerDataBaseName":{"type":"String"},"sqlServerName":{"type":"String"}},"resources":[{"apiVersion":"2017-03-01-preview","name":"[concat( parameters(''sqlServerName''),''/'',parameters(''sqlServerDataBaseName''),''/default'')]","properties":{"auditActionsAndGroups":["BATCH_COMPLETED_GROUP","DATABASE_OBJECT_CHANGE_GROUP","SCHEMA_OBJECT_CHANGE_GROUP","BACKUP_RESTORE_GROUP","APPLICATION_ROLE_CHANGE_PASSWORD_GROUP","DATABASE_PRINCIPAL_CHANGE_GROUP","DATABASE_PRINCIPAL_IMPERSONATION_GROUP","DATABASE_ROLE_MEMBER_CHANGE_GROUP","USER_CHANGE_PASSWORD_GROUP","DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP","DATABASE_OBJECT_PERMISSION_CHANGE_GROUP","DATABASE_PERMISSION_CHANGE_GROUP","SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP","SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP","FAILED_DATABASE_AUTHENTICATION_GROUP"],"isAzureMonitorTargetEnabled":true,"state":"enabled"},"type":"Microsoft.Sql/servers/databases/auditingSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"enabled","field":"Microsoft.Sql/servers/databases/auditingSettings/state"},{"equals":"true","field":"Microsoft.Sql/servers/databases/auditingSettings/isAzureMonitorTargetEnabled"}]},"name":"default","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/056cd41c-7e88-42e1-933e-88ba6a50c9c3"],"type":"Microsoft.Sql/servers/databases/auditingSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-SecurityAlertPolicies"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-SecurityAlertPolicies
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy the security Alert Policies configuration with email admin accounts when it not exist in current configuration
          display_name: Deploy SQL Database security Alert Policies configuration with email admin accounts
          management_group_name: myorg-2
          metadata: '{"category":"SQL","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Sql-SecurityAlertPolicies
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Sql/servers/databases","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"sqlServerDataBaseName":{"value":"[field(''name'')]"},"sqlServerName":{"value":"[first(split(field(''fullname''),''/''))]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"sqlServerDataBaseName":{"type":"String"},"sqlServerName":{"type":"String"}},"resources":[{"apiVersion":"2018-06-01-preview","name":"[concat(parameters(''sqlServerName''),''/'',parameters(''sqlServerDataBaseName''),''/default'')]","properties":{"disabledAlerts":[""],"emailAccountAdmins":true,"emailAddresses":["admin@contoso.com"],"retentionDays":0,"state":"Enabled","storageAccountAccessKey":"","storageEndpoint":null},"type":"Microsoft.Sql/servers/databases/securityAlertPolicies"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"Enabled","field":"Microsoft.Sql/servers/databases/securityAlertPolicies/state"}]},"roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/056cd41c-7e88-42e1-933e-88ba6a50c9c3"],"type":"Microsoft.Sql/servers/databases/securityAlertPolicies"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-Tde"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-Tde
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy the Transparent Data Encryption when it is not enabled in the deployment
          display_name: 'Deploy SQL Database Transparent Data Encryption '
          management_group_name: myorg-2
          metadata: '{"category":"SQL","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Sql-Tde
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Sql/servers/databases","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"sqlServerDataBaseName":{"value":"[field(''name'')]"},"sqlServerName":{"value":"[first(split(field(''fullname''),''/''))]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"sqlServerDataBaseName":{"type":"String"},"sqlServerName":{"type":"String"}},"resources":[{"apiVersion":"2014-04-01","name":"[concat( parameters(''sqlServerName''),''/'',parameters(''sqlServerDataBaseName''),''/current'')]","properties":{"status":"Enabled"},"type":"Microsoft.Sql/servers/databases/transparentDataEncryption"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"Enabled","field":"Microsoft.Sql/transparentDataEncryption.status"}]},"roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/056cd41c-7e88-42e1-933e-88ba6a50c9c3"],"type":"Microsoft.Sql/servers/databases/transparentDataEncryption"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-vulnerabilityAssessments"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-vulnerabilityAssessments
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy SQL Database vulnerability Assessments when it not exist in the deployment. To the specific  storage account in the parameters
          display_name: Deploy SQL Database vulnerability Assessments
          management_group_name: myorg-2
          metadata: '{"category":"SQL","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Sql-vulnerabilityAssessments
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"vulnerabilityAssessmentsEmail":{"metadata":{"description":"The email address to send alerts","displayName":"The email address to send alerts"},"type":"String"},"vulnerabilityAssessmentsStorageID":{"metadata":{"description":"The storage account ID to store assessments","displayName":"The storage account ID to store assessments"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Sql/servers/databases","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"sqlServerDataBaseName":{"value":"[field(''name'')]"},"sqlServerName":{"value":"[first(split(field(''fullname''),''/''))]"},"vulnerabilityAssessmentsEmail":{"value":"[parameters(''vulnerabilityAssessmentsEmail'')]"},"vulnerabilityAssessmentsStorageID":{"value":"[parameters(''vulnerabilityAssessmentsStorageID'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"sqlServerDataBaseName":{"type":"String"},"sqlServerName":{"type":"String"},"vulnerabilityAssessmentsEmail":{"type":"String"},"vulnerabilityAssessmentsStorageID":{"type":"String"}},"resources":[{"apiVersion":"2017-03-01-preview","name":"[concat(parameters(''sqlServerName''),''/'',parameters(''sqlServerDataBaseName''),''/default'')]","properties":{"recurringScans":{"emailSubscriptionAdmins":false,"emails":["[parameters(''vulnerabilityAssessmentsEmail'')]"],"isEnabled":true},"storageAccountAccessKey":"[listkeys(parameters(''vulnerabilityAssessmentsStorageID''), providers(''Microsoft.Storage'', ''storageAccounts'').apiVersions[0]).keys[0].value]","storageContainerPath":"[concat(''https://'', last( split(parameters(''vulnerabilityAssessmentsStorageID'') ,  ''/'') ) , ''.blob.core.windows.net/vulneraabilitylogs'')]"},"type":"Microsoft.Sql/servers/databases/vulnerabilityAssessments"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"[parameters(''vulnerabilityAssessmentsEmail'')]","field":"Microsoft.Sql/servers/databases/vulnerabilityAssessments/recurringScans.emails"},{"equals":true,"field":"Microsoft.Sql/servers/databases/vulnerabilityAssessments/recurringScans.isEnabled"}]},"roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/056cd41c-7e88-42e1-933e-88ba6a50c9c3","/providers/Microsoft.Authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa"],"type":"Microsoft.Sql/servers/databases/vulnerabilityAssessments"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-SqlMi-minTLS"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-SqlMi-minTLS
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy a specific min TLS version requirement and enforce SSL on SQL managed instances. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.
          display_name: SQL managed instances deploy a specific min TLS version requirement.
          management_group_name: myorg-2
          metadata: '{"category":"SQL","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-SqlMi-minTLS
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy minimum TLS version SQL servers","displayName":"Effect SQL servers"},"type":"String"},"minimalTlsVersion":{"allowedValues":["1.2","1.1","1.0"],"defaultValue":"1.2","metadata":{"description":"Select version minimum TLS version SQL servers to enforce","displayName":"Select version for SQL server"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Sql/managedInstances","field":"type"},{"field":"Microsoft.Sql/managedInstances/minimalTlsVersion","notequals":"[parameters(''minimalTlsVersion'')]"}]},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"minimalTlsVersion":{"value":"[parameters(''minimalTlsVersion'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"minimalTlsVersion":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2020-02-02-preview","location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''))]","properties":{"minimalTlsVersion":"[parameters(''minimalTlsVersion'')]"},"type":"Microsoft.Sql/managedInstances"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"[parameters(''minimalTlsVersion'')]","field":"Microsoft.Sql/managedInstances/minimalTlsVersion"}]},"name":"current","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/8e3af657-a8ff-443c-a75c-2fe8c4bcb635"],"type":"Microsoft.Sql/managedInstances"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Storage-sslEnforcement"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Storage-sslEnforcement
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy a specific min TLS version requirement and enforce SSL on Azure STorage. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.
          display_name: 'Azure Storage deploy a specific min TLS version requirement and enforce SSL/HTTPS '
          management_group_name: myorg-2
          metadata: '{"category":"Storage","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Storage-sslEnforcement
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy minimum TLS version Azure STorage","displayName":"Effect Azure STorage"},"type":"String"},"minimumTlsVersion":{"allowedValues":["TLS1_2","TLS1_1","TLS1_0"],"defaultValue":"TLS1_2","metadata":{"description":"Select version minimum TLS version Azure STorage to enforce","displayName":"Select version for PostgreSQL server"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Storage/storageAccounts","field":"type"},{"anyOf":[{"field":"Microsoft.Storage/storageAccounts/supportsHttpsTrafficOnly","notEquals":"true"},{"field":"Microsoft.Storage/storageAccounts/minimumTlsVersion","notEquals":"[parameters(''minimumTlsVersion'')]"}]}]},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"minimumTlsVersion":{"value":"[parameters(''minimumTlsVersion'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"minimumTlsVersion":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2019-06-01","location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''))]","properties":{"minimumTlsVersion":"[parameters(''minimumTlsVersion'')]","supportsHttpsTrafficOnly":true},"type":"Microsoft.Storage/storageAccounts"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Storage/storageAccounts/supportsHttpsTrafficOnly"},{"equals":"[parameters(''minimumTlsVersion'')]","field":"Microsoft.Storage/storageAccounts/minimumTlsVersion"},{"equals":"false","field":"Microsoft.Storage/storageAccounts/supportsHttpsTrafficOnly"}]},"name":"current","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/8e3af657-a8ff-443c-a75c-2fe8c4bcb635"],"type":"Microsoft.DBforPostgreSQL/servers"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-VNET-HubSpoke"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-VNET-HubSpoke
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy deploys virtual network and peer to the hub
          display_name: Deploys virtual network peering to hub
          management_group_name: myorg-2
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: All
          name: Deploy-VNET-HubSpoke
          parameters: '{"hubResourceId":{"metadata":{"description":"Resource ID for the HUB vNet","displayName":"hubResourceId"},"type":"String"},"vNetCidrRange":{"metadata":{"description":"CIDR Range for the vNet","displayName":"vNetCidrRange"},"type":"String"},"vNetLocation":{"metadata":{"description":"Location for the vNet","displayName":"vNetLocation"},"type":"String"},"vNetName":{"metadata":{"description":"Name of the landing zone vNet","displayName":"vNetName"},"type":"String"},"vNetRgName":{"metadata":{"description":"Name of the landing zone vNet RG","displayName":"vNetRgName"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"ResourceGroupName":"[parameters(''vNetRgName'')]","deployment":{"location":"northeurope","properties":{"mode":"Incremental","parameters":{"hubResourceId":{"value":"[parameters(''hubResourceId'')]"},"vNetCidrRange":{"value":"[parameters(''vNetCidrRange'')]"},"vNetLocation":{"value":"[parameters(''vNetLocation'')]"},"vNetName":{"value":"[parameters(''vNetName'')]"},"vNetRgName":{"value":"[parameters(''vNetRgName'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json","contentVersion":"1.0.0.0","outputs":{},"parameters":{"hubResourceId":{"type":"String"},"vNetCidrRange":{"type":"String"},"vNetLocation":{"type":"String"},"vNetName":{"type":"String"},"vNetPeerUseRemoteGateway":{"defaultValue":false,"type":"bool"},"vNetRgName":{"type":"String"}},"resources":[{"apiVersion":"2020-06-01","dependsOn":[],"location":"[parameters(''vNetLocation'')]","name":"[concat(''es-lz-vnet-'',substring(uniqueString(subscription().id),0,6),''-rg'')]","properties":{"mode":"Incremental","template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{},"resources":[{"apiVersion":"2020-06-01","location":"[parameters(''vNetLocation'')]","name":"[parameters(''vNetRgName'')]","properties":{},"type":"Microsoft.Resources/resourceGroups"},{"apiVersion":"2020-06-01","location":"[parameters(''vNetLocation'')]","name":"NetworkWatcherRG","properties":{},"type":"Microsoft.Resources/resourceGroups"}],"variables":{}}},"type":"Microsoft.Resources/deployments"},{"apiVersion":"2020-06-01","dependsOn":["[concat(''es-lz-vnet-'',substring(uniqueString(subscription().id),0,6),''-rg'')]"],"name":"[concat(''es-lz-vnet-'',substring(uniqueString(subscription().id),0,6))]","properties":{"mode":"Incremental","template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{},"resources":[{"apiVersion":"2020-06-01","dependsOn":[],"location":"[parameters(''vNetLocation'')]","name":"[parameters(''vNetName'')]","properties":{"addressSpace":{"addressPrefixes":["[parameters(''vNetCidrRange'')]"]}},"type":"Microsoft.Network/virtualNetworks"},{"apiVersion":"2020-05-01","dependsOn":["[parameters(''vNetName'')]"],"name":"[concat(parameters(''vNetName''), ''/peerToHub'')]","properties":{"allowForwardedTraffic":true,"allowGatewayTransit":true,"allowVirtualNetworkAccess":true,"remoteVirtualNetwork":{"id":"[parameters(''hubResourceId'')]"},"useRemoteGateways":"[parameters(''vNetPeerUseRemoteGateway'')]"},"type":"Microsoft.Network/virtualNetworks/virtualNetworkPeerings"},{"apiVersion":"2020-06-01","dependsOn":["[parameters(''vNetName'')]"],"name":"[concat(''es-lz-hub-'',substring(uniqueString(subscription().id),0,6),''-peering'')]","properties":{"expressionEvaluationOptions":{"scope":"inner"},"mode":"Incremental","parameters":{"hubName":{"value":"[split(parameters(''hubResourceId''),''/'')[8]]"},"remoteVirtualNetwork":{"value":"[concat(subscription().id,''/resourceGroups/'',parameters(''vNetRgName''), ''/providers/'',''Microsoft.Network/virtualNetworks/'', parameters(''vNetName''))]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"hubName":{"defaultValue":false,"type":"String"},"remoteVirtualNetwork":{"defaultValue":false,"type":"String"}},"resources":[{"apiVersion":"2020-05-01","name":"[[concat(parameters(''hubName''),''/'',last(split(parameters(''remoteVirtualNetwork''),''/'')))]","properties":{"allowForwardedTraffic":true,"allowGatewayTransit":true,"allowVirtualNetworkAccess":true,"remoteVirtualNetwork":{"id":"[[parameters(''remoteVirtualNetwork'')]"},"useRemoteGateways":false},"type":"Microsoft.Network/virtualNetworks/virtualNetworkPeerings"}],"variables":{}}},"resourceGroup":"[split(parameters(''hubResourceId''),''/'')[4]]","subscriptionId":"[split(parameters(''hubResourceId''),''/'')[2]]","type":"Microsoft.Resources/deployments"}],"variables":{}}},"resourceGroup":"[parameters(''vNetRgName'')]","type":"Microsoft.Resources/deployments"}],"variables":{}}}},"deploymentScope":"Subscription","existenceCondition":{"allOf":[{"field":"name","like":"[parameters(''vNetName'')]"},{"equals":"[parameters(''vNetLocation'')]","field":"location"}]},"existenceScope":"ResourceGroup","name":"[parameters(''vNetName'')]","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"],"type":"Microsoft.Network/virtualNetworks"},"effect":"deployIfNotExists"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Windows-DomainJoin"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Windows-DomainJoin
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy Windows Domain Join Extension with keyvault configuration when the extension does not exist on a given windows Virtual Machine
          display_name: Deploy Windows Domain Join Extension with keyvault configuration
          management_group_name: myorg-2
          metadata: '{"category":"Guest Configuration","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Windows-DomainJoin
          parameters: '{"domainFQDN":{"metadata":{"displayName":"domainFQDN"},"type":"String"},"domainOUPath":{"metadata":{"displayName":"domainOUPath"},"type":"String"},"domainPassword":{"metadata":{"displayName":"domainPassword"},"type":"String"},"domainUsername":{"metadata":{"displayName":"domainUsername"},"type":"String"},"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"keyVaultResourceId":{"metadata":{"displayName":"keyVaultResourceId"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Compute/virtualMachines","field":"type"},{"equals":"MicrosoftWindowsServer","field":"Microsoft.Compute/imagePublisher"},{"equals":"WindowsServer","field":"Microsoft.Compute/imageOffer"},{"field":"Microsoft.Compute/imageSKU","in":["2008-R2-SP1","2008-R2-SP1-smalldisk","2008-R2-SP1-zhcn","2012-Datacenter","2012-datacenter-gensecond","2012-Datacenter-smalldisk","2012-datacenter-smalldisk-g2","2012-Datacenter-zhcn","2012-datacenter-zhcn-g2","2012-R2-Datacenter","2012-r2-datacenter-gensecond","2012-R2-Datacenter-smalldisk","2012-r2-datacenter-smalldisk-g2","2012-R2-Datacenter-zhcn","2012-r2-datacenter-zhcn-g2","2016-Datacenter","2016-datacenter-gensecond","2016-datacenter-gs","2016-Datacenter-Server-Core","2016-datacenter-server-core-g2","2016-Datacenter-Server-Core-smalldisk","2016-datacenter-server-core-smalldisk-g2","2016-Datacenter-smalldisk","2016-datacenter-smalldisk-g2","2016-Datacenter-with-Containers","2016-datacenter-with-containers-g2","2016-Datacenter-with-RDSH","2016-Datacenter-zhcn","2016-datacenter-zhcn-g2","2019-Datacenter","2019-Datacenter-Core","2019-datacenter-core-g2","2019-Datacenter-Core-smalldisk","2019-datacenter-core-smalldisk-g2","2019-Datacenter-Core-with-Containers","2019-datacenter-core-with-containers-g2","2019-Datacenter-Core-with-Containers-smalldisk","2019-datacenter-core-with-containers-smalldisk-g2","2019-datacenter-gensecond","2019-datacenter-gs","2019-Datacenter-smalldisk","2019-datacenter-smalldisk-g2","2019-Datacenter-with-Containers","2019-datacenter-with-containers-g2","2019-Datacenter-with-Containers-smalldisk","2019-datacenter-with-containers-smalldisk-g2","2019-Datacenter-zhcn","2019-datacenter-zhcn-g2","Datacenter-Core-1803-with-Containers-smalldisk","datacenter-core-1803-with-containers-smalldisk-g2","Datacenter-Core-1809-with-Containers-smalldisk","datacenter-core-1809-with-containers-smalldisk-g2","Datacenter-Core-1903-with-Containers-smalldisk","datacenter-core-1903-with-containers-smalldisk-g2","datacenter-core-1909-with-containers-smalldisk","datacenter-core-1909-with-containers-smalldisk-g1","datacenter-core-1909-with-containers-smalldisk-g2"]}]},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"domainFQDN":{"value":"[parameters(''domainFQDN'')]"},"domainOUPath":{"value":"[parameters(''domainOUPath'')]"},"domainPassword":{"reference":{"keyVault":{"id":"[parameters(''keyVaultResourceId'')]"},"secretName":"[parameters(''domainPassword'')]"}},"domainUsername":{"reference":{"keyVault":{"id":"[parameters(''keyVaultResourceId'')]"},"secretName":"[parameters(''domainUsername'')]"}},"keyVaultResourceId":{"value":"[parameters(''keyVaultResourceId'')]"},"location":{"value":"[field(''location'')]"},"vmName":{"value":"[field(''name'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"domainFQDN":{"type":"String"},"domainOUPath":{"type":"String"},"domainPassword":{"type":"securestring"},"domainUsername":{"type":"String"},"keyVaultResourceId":{"type":"String"},"location":{"type":"String"},"vmName":{"type":"String"}},"resources":[{"apiVersion":"2015-06-15","location":"[resourceGroup().location]","name":"[concat(variables(''vmName''),''/joindomain'')]","properties":{"autoUpgradeMinorVersion":true,"protectedSettings":{"Password":"[parameters(''domainPassword'')]"},"publisher":"Microsoft.Compute","settings":{"Name":"[parameters(''domainFQDN'')]","OUPath":"[parameters(''domainOUPath'')]","Options":"[variables(''domainJoinOptions'')]","Restart":"true","User":"[parameters(''domainUserName'')]"},"type":"JsonADDomainExtension","typeHandlerVersion":"1.3"},"type":"Microsoft.Compute/virtualMachines/extensions"}],"variables":{"domainJoinOptions":3,"vmName":"[parameters(''vmName'')]"}}}},"existenceCondition":{"allOf":[{"equals":"JsonADDomainExtension","field":"Microsoft.Compute/virtualMachines/extensions/type"},{"equals":"Microsoft.Compute","field":"Microsoft.Compute/virtualMachines/extensions/publisher"}]},"roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/9980e02c-c2be-4d73-94e8-173b1dc7cf3c"],"type":"Microsoft.Compute/virtualMachines/extensions"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-vHUB"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-vHUB
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: 'Deploy Virtual Hub network with Virtual Wan and Gateway and Firewall configured in the desired region. '
          display_name: Deploy Virtual Hub network with Virtual Wan and Gateway and Firewall configured.
          management_group_name: myorg-2
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: All
          name: Deploy-vHUB
          parameters: '{"azfw":{"defaultValue":{},"metadata":{"description":"Object describing the Azure Firewall in vHUB","displayName":"azfw"},"type":"Object"},"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"ergw":{"defaultValue":{},"metadata":{"description":"Object describing ExpressRoute gateway","displayName":"ergw"},"type":"Object"},"rgName":{"metadata":{"description":"Provide name for resource group.","displayName":"rgName"},"type":"String"},"vHUB":{"metadata":{"description":"Object describing Virtual WAN vHUB","displayName":"vHUB"},"type":"Object"},"vHubName":{"defaultValue":"","metadata":{"description":"Name of the vHUB","displayName":"vHubName"},"type":"String"},"vpngw":{"defaultValue":{},"metadata":{"description":"Object describing VPN gateway","displayName":"vpngw"},"type":"Object"},"vwanname":{"metadata":{"description":"Name of the Virtual WAN","displayName":"vwanname"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"Incremental","parameters":{"azfw":{"value":"[parameters(''azfw'')]"},"ergw":{"value":"[parameters(''ergw'')]"},"rgName":{"value":"[parameters(''rgName'')]"},"vHUB":{"value":"[parameters(''vHUB'')]"},"vHUBName":{"value":"[parameters(''vHUBName'')]"},"vpngw":{"value":"[parameters(''vpngw'')]"},"vwanname":{"value":"[parameters(''vwanname'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json","contentVersion":"1.0.0.0","parameters":{"azfw":{"defaultValue":{},"metadata":{"description":"Object describing the Azure Firewall in vHUB"},"type":"object"},"ergw":{"defaultValue":{},"metadata":{"description":"Object describing ExpressRoute gateway"},"type":"object"},"rgName":{"metadata":{"description":"Provide name for resource group.","displayName":"rgName"},"type":"String"},"vHUB":{"metadata":{"description":"Object describing Virtual WAN vHUB"},"type":"object"},"vHUBName":{"metadata":{"description":"Name of the vHUB","displayName":"vHUBName"},"type":"String"},"vpngw":{"defaultValue":{},"metadata":{"description":"Object describing VPN gateway"},"type":"object"},"vwanname":{"metadata":{"description":"Name of the Virtual WAN"},"type":"String"}},"resources":[{"apiVersion":"2018-05-01","location":"[deployment().location]","name":"[parameters(''rgName'')]","properties":{},"type":"Microsoft.Resources/resourceGroups"},{"apiVersion":"2018-05-01","dependsOn":["[resourceId(''Microsoft.Resources/resourceGroups/'', parameters(''rgName''))]"],"name":"[concat(''vHUBdeploy-'',parameters(''vHUB'').location)]","properties":{"mode":"Incremental","template":{"$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","parameters":{},"resources":[{"apiVersion":"2020-05-01","location":"[parameters(''vHUB'').location]","name":"[parameters(''vHUBname'')]","properties":{"addressPrefix":"[parameters(''vHUB'').addressPrefix]","sku":"[variables(''vhubsku'')]","virtualWan":{"id":"[variables(''vwanresourceid'')]"}},"type":"Microsoft.Network/virtualHubs"}],"variables":{}}},"resourceGroup":"[parameters(''rgName'')]","type":"Microsoft.Resources/deployments"},{"apiVersion":"2018-05-01","condition":"[greater(length(parameters(''vpngw'')),0)]","dependsOn":["[concat(''vHUBdeploy-'',parameters(''vHUB'').location)]"],"name":"[concat(parameters(''vHUBName''),''-vpngw'')]","properties":{"mode":"Incremental","template":{"$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","parameters":{},"resources":[{"apiVersion":"2020-05-01","location":"[parameters(''vHUB'').location]","name":"[parameters(''vpngw'').name]","properties":{"bgpSettings":"[parameters(''vpngw'').bgpSettings]","virtualHub":{"id":"[variables(''vwanhub'')]"},"vpnGatewayScaleUnit":"[parameters(''vpngw'').vpnGatewayScaleUnit]"},"type":"Microsoft.Network/vpnGateways"}],"variables":{}}},"resourceGroup":"[parameters(''rgName'')]","type":"Microsoft.Resources/deployments"},{"apiVersion":"2018-05-01","condition":"[greater(length(parameters(''ergw'')),0)]","dependsOn":["[concat(''vHUBdeploy-'',parameters(''vHUB'').location)]"],"name":"[concat(parameters(''vHUBName''),''-ergw'')]","properties":{"mode":"Incremental","template":{"$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","parameters":{},"resources":[{"apiVersion":"2020-05-01","location":"[parameters(''vHUB'').location]","name":"[parameters(''ergw'').name]","properties":{"autoScaleConfiguration":"[parameters(''ergw'').autoScaleConfiguration]","virtualHub":{"id":"[variables(''vwanhub'')]"}},"type":"Microsoft.Network/expressRouteGateways"}],"variables":{}}},"resourceGroup":"[parameters(''rgName'')]","type":"Microsoft.Resources/deployments"}],"variables":{"vhubsku":"Standard","vwanhub":"[concat(subscription().id,''/resourceGroups/'',parameters(''rgName''),''/providers/Microsoft.Network/virtualHubs/'',parameters(''vHUBName''))]","vwanresourceid":"[concat(subscription().id,''/resourceGroups/'',parameters(''rgName''),''/providers/Microsoft.Network/virtualWans/'',parameters(''vwanname''))]"}}}},"deploymentScope":"Subscription","existenceScope":"ResourceGroup","name":"[parameters(''vHubName'')]","resourceGroupName":"[parameters(''rgName'')]","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"],"type":"Microsoft.Network/virtualHubs"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-vNet"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-vNet
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy spoke network with configuration to hub network based on ipam configuration object
          display_name: Deploy spoke network with configuration to hub network based on ipam configuration object
          management_group_name: myorg-2
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: All
          name: Deploy-vNet
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"ipam":{"defaultValue":[],"metadata":{"displayName":"ipam"},"type":"Array"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"Incremental","parameters":{"ipam":{"defaultValue":[],"value":"[parameters(''ipam'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json","contentVersion":"1.0.0.0","outputs":{"ipam":{"condition":"[bool(''true'')]","type":"Int","value":"[length(parameters(''ipam''))]"}},"parameters":{"ipam":{"defaultValue":[{"hubVirtualNetworkConnection":{"properties":{"allowHubToRemoteVnetTransit":true,"allowRemoteVnetToUseHubVnetGateways":false,"enableInternetSecurity":true},"vWanVhubResourceId":"/subscriptions/99c2838f-a548-4884-a6e2-38c1f8fb4c0b/resourceGroups/contoso-global-vwan/providers/Microsoft.Network/virtualHubs/contoso-vhub-weu"},"location":"westeurope","name":"bu1-weu-msx3-vNet1","networkSecurityGroups":{"properties":{"securityRules":[]}},"routeTables":{"properties":{"routes":[]}},"virtualNetworks":{"properties":{"addressSpace":{"addressPrefixes":["10.51.217.0/24"]}}}}],"type":"Array"}},"resources":[{"apiVersion":"2020-06-01","condition":"[if(and(not(empty(parameters(''ipam''))), equals(toLower(parameters(''ipam'')[copyIndex()].name),toLower(variables(''vNetName'')))),bool(''true''),bool(''false''))]","copy":{"count":"[length(parameters(''ipam''))]","name":"ipam-rg-loop"},"dependsOn":[],"location":"[parameters(''ipam'')[copyIndex()].location]","name":"[concat(''es-ipam-'',subscription().displayName,''-RG-'',copyIndex())]","properties":{"mode":"Incremental","template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{},"resources":[{"apiVersion":"2020-06-01","location":"[parameters(''ipam'')[copyIndex()].location]","name":"[variables(''vNetRgName'')]","properties":{},"type":"Microsoft.Resources/resourceGroups"},{"apiVersion":"2020-06-01","location":"[parameters(''ipam'')[copyIndex()].location]","name":"NetworkWatcherRG","properties":{},"type":"Microsoft.Resources/resourceGroups"}],"variables":{}}},"type":"Microsoft.Resources/deployments"},{"apiVersion":"2020-06-01","condition":"[if(and(not(empty(parameters(''ipam''))), equals(toLower(parameters(''ipam'')[copyIndex()].name),toLower(variables(''vNetName'')))),bool(''true''),bool(''false''))]","copy":{"count":"[length(parameters(''ipam''))]","name":"ipam-loop"},"dependsOn":["[concat(''es-ipam-'',subscription().displayName,''-RG-'',copyIndex())]"],"name":"[concat(''es-ipam-'',subscription().displayName,''-nsg-udr-vnet-hub-vwan-peering-'',copyIndex())]","properties":{"mode":"Incremental","template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{},"resources":[{"apiVersion":"2020-05-01","condition":"[contains(parameters(''ipam'')[copyIndex()],''networkSecurityGroups'')]","location":"[parameters(''ipam'')[copyIndex()].location]","name":"[concat(subscription().displayName, ''-nsg'')]","properties":"[if(contains(parameters(''ipam'')[copyIndex()],''networkSecurityGroups''),parameters(''ipam'')[copyIndex()].networkSecurityGroups.properties,json(''null''))]","type":"Microsoft.Network/networkSecurityGroups"},{"apiVersion":"2020-05-01","condition":"[contains(parameters(''ipam'')[copyIndex()],''routeTables'')]","location":"[parameters(''ipam'')[copyIndex()].location]","name":"[concat(subscription().displayName, ''-udr'')]","properties":"[if(contains(parameters(''ipam'')[copyIndex()],''routeTables''),parameters(''ipam'')[copyIndex()].routeTables.properties,json(''null''))]","type":"Microsoft.Network/routeTables"},{"apiVersion":"2020-05-01","condition":"[contains(parameters(''ipam'')[copyIndex()],''virtualNetworks'')]","dependsOn":["[concat(subscription().displayName, ''-nsg'')]","[concat(subscription().displayName, ''-udr'')]"],"location":"[parameters(''ipam'')[copyIndex()].location]","name":"[concat(subscription().displayName, ''-vnet'')]","properties":"[if(contains(parameters(''ipam'')[copyIndex()],''virtualNetworks''),parameters(''ipam'')[copyIndex()].virtualNetworks.properties,json(''null''))]","type":"Microsoft.Network/virtualNetworks"},{"apiVersion":"2020-05-01","condition":"[contains(parameters(''ipam'')[copyIndex()],''virtualNetworkPeerings'')]","dependsOn":["[concat(subscription().displayName, ''-vnet'')]"],"name":"[concat(variables(''vNetName''), ''/peerToHub'')]","properties":"[if(contains(parameters(''ipam'')[copyIndex()],''virtualNetworkPeerings''),parameters(''ipam'')[copyIndex()].virtualNetworkPeerings.properties,json(''null''))]","type":"Microsoft.Network/virtualNetworks/virtualNetworkPeerings"},{"apiVersion":"2020-06-01","condition":"[and(contains(parameters(''ipam'')[copyIndex()],''virtualNetworks''),contains(parameters(''ipam'')[copyIndex()],''hubVirtualNetworkConnection''),contains(parameters(''ipam'')[copyIndex()].hubVirtualNetworkConnection,''vWanVhubResourceId''))]","dependsOn":["[concat(subscription().displayName, ''-vnet'')]"],"name":"[concat(''es-ipam-vWan-'',subscription().displayName,''-peering-'',copyIndex())]","properties":{"expressionEvaluationOptions":{"scope":"inner"},"mode":"Incremental","parameters":{"allowHubToRemoteVnetTransit":{"value":"[if(and(contains(parameters(''ipam'')[copyIndex()],''hubVirtualNetworkConnection''),contains(parameters(''ipam'')[copyIndex()].hubVirtualNetworkConnection,''vWanVhubResourceId'')),parameters(''ipam'')[copyIndex()].hubVirtualNetworkConnection.properties.allowHubToRemoteVnetTransit,json(''null''))]"},"allowRemoteVnetToUseHubVnetGateways":{"value":"[if(and(contains(parameters(''ipam'')[copyIndex()],''hubVirtualNetworkConnection''),contains(parameters(''ipam'')[copyIndex()].hubVirtualNetworkConnection,''vWanVhubResourceId'')),parameters(''ipam'')[copyIndex()].hubVirtualNetworkConnection.properties.allowRemoteVnetToUseHubVnetGateways,json(''null''))]"},"enableInternetSecurity":{"value":"[if(and(contains(parameters(''ipam'')[copyIndex()],''hubVirtualNetworkConnection''),contains(parameters(''ipam'')[copyIndex()].hubVirtualNetworkConnection,''vWanVhubResourceId'')),parameters(''ipam'')[copyIndex()].hubVirtualNetworkConnection.properties.enableInternetSecurity,json(''null''))]"},"remoteVirtualNetwork":{"value":"[concat(subscription().id,''/resourceGroups/'',variables(''vNetRgName''), ''/providers/'',''Microsoft.Network/virtualNetworks/'', concat(subscription().displayName, ''-vnet''))]"},"vWanVhubName":{"value":"[if(and(contains(parameters(''ipam'')[copyIndex()],''hubVirtualNetworkConnection''),contains(parameters(''ipam'')[copyIndex()].hubVirtualNetworkConnection,''vWanVhubResourceId'')),split(parameters(''ipam'')[copyIndex()].hubVirtualNetworkConnection.vWanVhubResourceId,''/'')[8],json(''null''))]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"allowHubToRemoteVnetTransit":{"defaultValue":true,"type":"bool"},"allowRemoteVnetToUseHubVnetGateways":{"defaultValue":false,"type":"bool"},"enableInternetSecurity":{"defaultValue":true,"type":"bool"},"remoteVirtualNetwork":{"type":"String"},"vWanVhubName":{"defaultValue":"","type":"String"}},"resources":[{"apiVersion":"2020-05-01","name":"[[concat(parameters(''vWanVhubName''),''/'',last(split(parameters(''remoteVirtualNetwork''),''/'')))]","properties":{"allowHubToRemoteVnetTransit":"[[parameters(''allowHubToRemoteVnetTransit'')]","allowRemoteVnetToUseHubVnetGateways":"[[parameters(''allowRemoteVnetToUseHubVnetGateways'')]","enableInternetSecurity":"[[parameters(''enableInternetSecurity'')]","remoteVirtualNetwork":{"id":"[[parameters(''remoteVirtualNetwork'')]"}},"type":"Microsoft.Network/virtualHubs/hubVirtualNetworkConnections"}],"variables":{}}},"resourceGroup":"[if(and(contains(parameters(''ipam'')[copyIndex()],''hubVirtualNetworkConnection''),contains(parameters(''ipam'')[copyIndex()].hubVirtualNetworkConnection,''vWanVhubResourceId'')),split(parameters(''ipam'')[copyIndex()].hubVirtualNetworkConnection.vWanVhubResourceId,''/'')[4],json(''null''))]","subscriptionId":"[if(and(contains(parameters(''ipam'')[copyIndex()],''hubVirtualNetworkConnection''),contains(parameters(''ipam'')[copyIndex()].hubVirtualNetworkConnection,''vWanVhubResourceId'')),split(parameters(''ipam'')[copyIndex()].hubVirtualNetworkConnection.vWanVhubResourceId,''/'')[2],json(''null''))]","type":"Microsoft.Resources/deployments"},{"apiVersion":"2020-06-01","condition":"[and(contains(parameters(''ipam'')[copyIndex()],''virtualNetworks''),contains(parameters(''ipam'')[copyIndex()],''virtualNetworkPeerings''),contains(parameters(''ipam'')[copyIndex()].virtualNetworkPeerings.properties.remoteVirtualNetwork,''id''))]","dependsOn":["[concat(subscription().displayName, ''-vnet'')]"],"name":"[concat(''es-ipam-hub-'',subscription().displayName,''-peering-'',copyIndex())]","properties":{"expressionEvaluationOptions":{"scope":"inner"},"mode":"Incremental","parameters":{"hubName":{"value":"[if(and(contains(parameters(''ipam'')[copyIndex()],''virtualNetworkPeerings''),contains(parameters(''ipam'')[copyIndex()].virtualNetworkPeerings.properties.remoteVirtualNetwork,''id'')),split(parameters(''ipam'')[copyIndex()].virtualNetworkPeerings.properties.remoteVirtualNetwork.id,''/'')[8],json(''null''))]"},"remoteVirtualNetwork":{"value":"[concat(subscription().id,''/resourceGroups/'',variables(''vNetRgName''), ''/providers/'',''Microsoft.Network/virtualNetworks/'', concat(subscription().displayName, ''-vnet''))]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"hubName":{"defaultValue":false,"type":"String"},"remoteVirtualNetwork":{"defaultValue":false,"type":"String"}},"resources":[{"apiVersion":"2020-05-01","name":"[[concat(parameters(''hubName''),''/'',last(split(parameters(''remoteVirtualNetwork''),''/'')))]","properties":{"allowForwardedTraffic":true,"allowGatewayTransit":true,"allowVirtualNetworkAccess":true,"remoteVirtualNetwork":{"id":"[[parameters(''remoteVirtualNetwork'')]"},"useRemoteGateways":false},"type":"Microsoft.Network/virtualNetworks/virtualNetworkPeerings"}],"variables":{}}},"resourceGroup":"[if(and(contains(parameters(''ipam'')[copyIndex()],''virtualNetworkPeerings''),contains(parameters(''ipam'')[copyIndex()].virtualNetworkPeerings.properties.remoteVirtualNetwork,''id'')),split(parameters(''ipam'')[copyIndex()].virtualNetworkPeerings.properties.remoteVirtualNetwork.id,''/'')[4],json(''null''))]","subscriptionId":"[if(and(contains(parameters(''ipam'')[copyIndex()],''virtualNetworkPeerings''),contains(parameters(''ipam'')[copyIndex()].virtualNetworkPeerings.properties.remoteVirtualNetwork,''id'')),split(parameters(''ipam'')[copyIndex()].virtualNetworkPeerings.properties.remoteVirtualNetwork.id,''/'')[2],json(''null''))]","type":"Microsoft.Resources/deployments"}],"variables":{}}},"resourceGroup":"[variables(''vNetRgName'')]","type":"Microsoft.Resources/deployments"}],"variables":{"vNetName":"[concat(subscription().displayName, ''-vNet'')]","vNetRgName":"[concat(subscription().displayName, ''-network'')]","vNetSubId":"[subscription().subscriptionId]"}}}},"deploymentScope":"Subscription","existenceCondition":{"allOf":[{"equals":"Microsoft.Resources/subscriptions/resourceGroups","field":"type"},{"field":"name","like":"[concat(subscription().displayName, ''-network'')]"}]},"existenceScope":"Subscription","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"],"type":"Microsoft.Resources/resourceGroups"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-vWAN"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-vWAN
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy the Virtual WAN in the specific region.
          display_name: Deploy the Virtual WAN in the specific region
          management_group_name: myorg-2
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: All
          name: Deploy-vWAN
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"rgName":{"metadata":{"description":"Provide name for resource group.","displayName":"rgName"},"type":"String"},"vwanRegion":{"metadata":{"description":"Select Azure region for Virtual WAN","displayName":"vwanRegion","strongType":"location"},"type":"String"},"vwanname":{"metadata":{"description":"Name of the Virtual WAN","displayName":"vwanname"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"Incremental","parameters":{"rgName":{"value":"[parameters(''rgName'')]"},"vwanRegion":{"value":"[parameters(''vwanRegion'')]"},"vwanname":{"value":"[parameters(''vwanname'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json","contentVersion":"1.0.0.0","outputs":{},"parameters":{"rgName":{"type":"String"},"vwanRegion":{"type":"String"},"vwanname":{"type":"String"}},"resources":[{"apiVersion":"2018-05-01","location":"[deployment().location]","name":"[parameters(''rgName'')]","properties":{},"type":"Microsoft.Resources/resourceGroups"},{"apiVersion":"2018-05-01","dependsOn":["[resourceId(''Microsoft.Resources/resourceGroups/'', parameters(''rgName''))]"],"name":"vwan","properties":{"mode":"Incremental","template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json","contentVersion":"1.0.0.0","outputs":{},"parameters":{},"resources":[{"apiVersion":"2020-05-01","location":"[parameters(''vwanRegion'')]","name":"[parameters(''vwanname'')]","properties":{"type":"[variables(''vwansku'')]","virtualHubs":[],"vpnSites":[]},"type":"Microsoft.Network/virtualWans"}]}},"resourceGroup":"[parameters(''rgName'')]","type":"Microsoft.Resources/deployments"}],"variables":{"vwansku":"Standard"}}}},"deploymentScope":"Subscription","existenceScope":"ResourceGroup","name":"[parameters(''vwanname'')]","resourceGroupName":"[parameters(''rgName'')]","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"],"type":"Microsoft.Network/virtualWans"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policySetDefinitions/Deny-PublicEndpoints"]
        mode: managed
        type: azurerm_policy_set_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policySetDefinitions/Deny-PublicEndpoints
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: 'This policy denies creation of Azure PAAS services with exposed public endpoints.  This policy set includes the policy for the following services KeyVault, Storage accounts, AKS, Cosmos, SQL Servers, MariaDB, MySQL and Postgress. '
          display_name: Public network access should be disabled for PAAS services
          management_group_name: myorg-2
          metadata: '{"category":"Network","version":"1.0.0"}'
          name: Deny-PublicEndpoints
          parameters: '{"AKSPublicIpDenyEffect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"This policy denies  the creation of  Azure Kubernetes Service non-private clusters","displayName":"Public network access on AKS API should be disabled"},"type":"String"},"CosmosPublicIpDenyEffect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"This policy denies that  Cosmos database accounts  are created with out public network access is disabled.","displayName":"Public network access should be disabled for CosmosDB"},"type":"String"},"KeyVaultPublicIpDenyEffect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"This policy denies creation of Key Vaults with IP Firewall exposed to all public endpoints","displayName":"Public network access should be disabled for KeyVault"},"type":"String"},"MariaDBPublicIpDenyEffect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"This policy denies the creation of Maria DB accounts with exposed public endpoints","displayName":"Public network access should be disabled for MariaDB"},"type":"String"},"MySQLPublicIpDenyEffect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"This policy denies creation of MySql DB accounts with exposed public endpoints","displayName":"Public network access should be disabled for MySQL"},"type":"String"},"PostgreSQLPublicIpDenyEffect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"This policy denies creation of Postgre SQL DB accounts with exposed public endpoints","displayName":"Public network access should be disabled for PostgreSql"},"type":"String"},"SqlServerPublicIpDenyEffect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"This policy denies creation of Sql servers with exposed public endpoints","displayName":"Public network access on Azure SQL Database should be disabled"},"type":"String"},"StoragePublicIpDenyEffect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"This policy denies creation of storage accounts with IP Firewall exposed to all public endpoints","displayName":"Public network access onStorage accounts should be disabled"},"type":"String"}}'
          policy_definition_group: []
          policy_definition_reference:
            - parameter_values: '{"effect":{"value":"[parameters(''CosmosPublicIpDenyEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-CosmosDB
              policy_group_names: null
              reference_id: CosmosDenyPaasPublicIP
            - parameter_values: '{"effect":{"value":"[parameters(''MariaDBPublicIpDenyEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-MariaDB
              policy_group_names: null
              reference_id: MariaDBDenyPaasPublicIP
            - parameter_values: '{"effect":{"value":"[parameters(''MySQLPublicIpDenyEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-MySQL
              policy_group_names: null
              reference_id: MySQLDenyPaasPublicIP
            - parameter_values: '{"effect":{"value":"[parameters(''PostgreSQLPublicIpDenyEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-PostgreSql
              policy_group_names: null
              reference_id: PostgreSQLDenyPaasPublicIP
            - parameter_values: '{"effect":{"value":"[parameters(''KeyVaultPublicIpDenyEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-KeyVault
              policy_group_names: null
              reference_id: KeyVaultDenyPaasPublicIP
            - parameter_values: '{"effect":{"value":"[parameters(''SqlServerPublicIpDenyEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-Sql
              policy_group_names: null
              reference_id: SqlServerDenyPaasPublicIP
            - parameter_values: '{"effect":{"value":"[parameters(''StoragePublicIpDenyEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-Storage
              policy_group_names: null
              reference_id: StorageDenyPaasPublicIP
            - parameter_values: '{"effect":{"value":"[parameters(''AKSPublicIpDenyEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-Aks
              policy_group_names: null
              reference_id: AKSDenyPaasPublicIP
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policySetDefinitions/Deploy-ASC-Config"]
        mode: managed
        type: azurerm_policy_set_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policySetDefinitions/Deploy-ASC-Config
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy Azure Security Center configuration
          display_name: Deploy Azure Security Center configuration
          management_group_name: myorg-2
          metadata: '{"category":"Security Center","version":"1.0.0"}'
          name: Deploy-ASC-Config
          parameters: '{"ascExportResourceGroupLocation":{"metadata":{"description":"The location where the resource group and the export to Log Analytics workspace configuration are created.","displayName":"Resource Group location for the export to Log Analytics workspace configuration"},"type":"String"},"ascExportResourceGroupName":{"metadata":{"description":"The resource group name where the export to Log Analytics workspace configuration is created. If you enter a name for a resource group that doesn''t exist, it''ll be created in the subscription. Note that each resource group can only have one export to Log Analytics workspace configured.","displayName":"Resource Group name for the export to Log Analytics workspace configuration"},"type":"String"},"emailSecurityContact":{"metadata":{"description":"Provide email address for Azure Security Center contact details","displayName":"Security contacts email address"},"type":"string"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Primary Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"pricingTierAppServices":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier for App Services","displayName":"Azure Defender pricing tier for App Services"},"type":"string"},"pricingTierArm":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier for Azure Resource Manager","displayName":"Azure Defender pricing tier for Azure Resource Manager"},"type":"string"},"pricingTierContainerRegistry":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier for ACR","displayName":"Azure Defender pricing tier for ACR"},"type":"string"},"pricingTierDns":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier for DNS","displayName":"Azure Defender pricing tier for DNS"},"type":"string"},"pricingTierKeyVaults":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier for AKV","displayName":"Azure Defender pricing tier for AKV"},"type":"string"},"pricingTierKubernetesService":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier for AKS","displayName":"Azure Defender pricing tier for AKS"},"type":"string"},"pricingTierSqlServerVirtualMachines":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier for SQL Server Virtual Machines","displayName":"Azure Defender pricing tier for SQL Server Virtual Machines"},"type":"string"},"pricingTierSqlServers":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier for SQL Servers","displayName":"Azure Defender pricing tier for SQL Servers"},"type":"string"},"pricingTierStorageAccounts":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier for Storage Accounts","displayName":"Azure Defender pricing tier for Storage Accounts"},"type":"string"},"pricingTierVMs":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier for Virtual Machines","displayName":"Azure Defender pricing tier for Virtual Machines"},"type":"string"}}'
          policy_definition_group: []
          policy_definition_reference:
            - parameter_values: '{"pricingTier":{"value":"[parameters(''pricingTierVMs'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-VMs
              policy_group_names: null
              reference_id: defenderForVM
            - parameter_values: '{"pricingTier":{"value":"[parameters(''pricingTierSqlServers'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-Sql
              policy_group_names: null
              reference_id: defenderForSqlServers
            - parameter_values: '{"pricingTier":{"value":"[parameters(''pricingTierAppServices'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-AppSrv
              policy_group_names: null
              reference_id: defenderForAppServices
            - parameter_values: '{"pricingTier":{"value":"[parameters(''pricingTierStorageAccounts'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-SA
              policy_group_names: null
              reference_id: defenderForStorageAccounts
            - parameter_values: '{"pricingTier":{"value":"[parameters(''pricingTierSqlServerVirtualMachines'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-SQLVM
              policy_group_names: null
              reference_id: defenderForSqlServerVirtualMachines
            - parameter_values: '{"pricingTier":{"value":"[parameters(''pricingTierKubernetesService'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-AKS
              policy_group_names: null
              reference_id: defenderForKubernetesService
            - parameter_values: '{"pricingTier":{"value":"[parameters(''pricingTierContainerRegistry'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-ACR
              policy_group_names: null
              reference_id: defenderForContainerRegistry
            - parameter_values: '{"pricingTier":{"value":"[parameters(''pricingTierKeyVaults'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-AKV
              policy_group_names: null
              reference_id: defenderForKeyVaults
            - parameter_values: '{"pricingTier":{"value":"[parameters(''pricingTierDns'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-DNS
              policy_group_names: null
              reference_id: defenderForDns
            - parameter_values: '{"pricingTier":{"value":"[parameters(''pricingTierArm'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-ARM
              policy_group_names: null
              reference_id: defenderForArm
            - parameter_values: '{"emailSecurityContact":{"value":"[parameters(''emailSecurityContact'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-SecurityContacts
              policy_group_names: null
              reference_id: securityEmailContact
            - parameter_values: '{"resourceGroupLocation":{"value":"[parameters(''ascExportResourceGroupLocation'')]"},"resourceGroupName":{"value":"[parameters(''ascExportResourceGroupName'')]"},"workspaceResourceId":{"value":"[parameters(''logAnalytics'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/ffb6f416-7bd2-4488-8828-56585fef2be9
              policy_group_names: null
              reference_id: ascExport
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Diag-LogAnalytics"]
        mode: managed
        type: azurerm_policy_set_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Diag-LogAnalytics
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: 'This policy set deploys the configurations of application Azure resources to forward diagnostic logs and metrics to an Azure Log Analytics workspace. See the list of policies of the services that are included '
          display_name: Deploy Diagnostic Settings to Azure Services
          management_group_name: myorg-2
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          name: Deploy-Diag-LogAnalytics
          parameters: '{"ACILogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Container Instances to stream to a Log Analytics workspace when any ACR which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics enabled.","displayName":"Deploy Diagnostic Settings for Container Instances to Log Analytics workspace"},"type":"String"},"ACRLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Container Registry to stream to a Log Analytics workspace when any ACR which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics  enabled.","displayName":"Deploy Diagnostic Settings for Container Registry to Log Analytics workspace"},"type":"String"},"AKSLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Kubernetes Service to stream to a Log Analytics workspace when any Kubernetes Service which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled.","displayName":"Deploy Diagnostic Settings for Kubernetes Service to Log Analytics workspace"},"type":"String"},"APIMgmtLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for API Management to stream to a Log Analytics workspace when any API Management which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for API Management to Log Analytics workspace"},"type":"String"},"APIforFHIRLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Azure API for FHIR to stream to a Log Analytics workspace when any Azure API for FHIR which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Azure API for FHIR to Log Analytics workspace"},"type":"String"},"AnalysisServiceLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Analysis Services to stream to a Log Analytics workspace when any Analysis Services which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Analysis Services to Log Analytics workspace"},"type":"String"},"AppServiceLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for App Service Plan to stream to a Log Analytics workspace when any App Service Plan which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for App Service Plan to Log Analytics workspace"},"type":"String"},"AppServiceWebappLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Web App to stream to a Log Analytics workspace when any Web App which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for App Service to Log Analytics workspace"},"type":"String"},"ApplicationGatewayLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Application Gateway to stream to a Log Analytics workspace when any Application Gateway which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Application Gateway to Log Analytics workspace"},"type":"String"},"AutomationLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Automation to stream to a Log Analytics workspace when any Automation which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Automation to Log Analytics workspace"},"type":"String"},"BatchLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Batch to stream to a Log Analytics workspace when any Batch which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Batch to Log Analytics workspace"},"type":"String"},"CDNEndpointsLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for CDN Endpoint to stream to a Log Analytics workspace when any CDN Endpoint which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for CDN Endpoint to Log Analytics workspace"},"type":"String"},"CognitiveServicesLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Cognitive Services to stream to a Log Analytics workspace when any Cognitive Services which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Cognitive Services to Log Analytics workspace"},"type":"String"},"CosmosLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Cosmos DB to stream to a Log Analytics workspace when any Cosmos DB which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Cosmos DB to Log Analytics workspace"},"type":"String"},"DataExplorerClusterLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Azure Data Explorer Cluster to stream to a Log Analytics workspace when any Azure Data Explorer Cluster which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Azure Data Explorer Cluster to Log Analytics workspace"},"type":"String"},"DataFactoryLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Data Factory to stream to a Log Analytics workspace when any Data Factory which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Data Factory to Log Analytics workspace"},"type":"String"},"DataLakeAnalyticsLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Data Lake Analytics to stream to a Log Analytics workspace when any Data Lake Analytics which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Data Lake Analytics to Log Analytics workspace"},"type":"String"},"DataLakeStoreLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Azure Data Lake Store to stream to a Log Analytics workspace when anyAzure Data Lake Store which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Azure Data Lake Store to Log Analytics workspace"},"type":"String"},"DatabricksLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Databricks to stream to a Log Analytics workspace when any Databricks which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Databricks to Log Analytics workspace"},"type":"String"},"EventGridSubLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Event Grid subscriptions to stream to a Log Analytics workspace when any Event Grid subscriptions which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Event Grid subscriptions to Log Analytics workspace"},"type":"String"},"EventGridTopicLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Event Grid Topic to stream to a Log Analytics workspace when any Event Grid Topic which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Event Grid Topic to Log Analytics workspace"},"type":"String"},"EventHubLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Event Hubs to stream to a Log Analytics workspace when any Event Hubs which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Event Hubs to Log Analytics workspace"},"type":"String"},"EventSystemTopicLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Event Grid System Topic to stream to a Log Analytics workspace when any Event Grid System Topic which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Event Grid System Topic to Log Analytics workspace"},"type":"String"},"ExpressRouteLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for ExpressRoute to stream to a Log Analytics workspace when any ExpressRoute which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for ExpressRoute to Log Analytics workspace"},"type":"String"},"FirewallLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Firewall to stream to a Log Analytics workspace when any Firewall which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Firewall to Log Analytics workspace"},"type":"String"},"FrontDoorLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Front Door to stream to a Log Analytics workspace when any Front Door which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Front Door to Log Analytics workspace"},"type":"String"},"FunctionAppLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Azure Function App to stream to a Log Analytics workspace when any function app which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Azure Function App to Log Analytics workspace"},"type":"String"},"HDInsightLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for HDInsight to stream to a Log Analytics workspace when any HDInsight which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for HDInsight to Log Analytics workspace"},"type":"String"},"IotHubLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for IoT Hub to stream to a Log Analytics workspace when any IoT Hub which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for IoT Hub to Log Analytics workspace"},"type":"String"},"KeyVaultLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Key Vault to stream to a Log Analytics workspace when any Key Vault which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Key Vault to Log Analytics workspace"},"type":"String"},"LoadBalancerLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Load Balancer to stream to a Log Analytics workspace when any Load Balancer which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Load Balancer to Log Analytics workspace"},"type":"String"},"LogicAppsISELogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Logic Apps integration service environment to stream to a Log Analytics workspace when any Logic Apps integration service environment which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Logic Apps integration service environment to Log Analytics workspace"},"type":"String"},"LogicAppsWFLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Logic Apps Workflow runtimeto stream to a Log Analytics workspace when any Logic Apps Workflow runtime which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Logic Apps Workflow runtime to Log Analytics workspace"},"type":"String"},"MariaDBLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for MariaDB to stream to a Log Analytics workspace when any MariaDB  which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for MariaDB to Log Analytics workspace"},"type":"String"},"MediaServiceLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Azure Media Service to stream to a Log Analytics workspace when any Azure Media Service which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Azure Media Service to Log Analytics workspace"},"type":"String"},"MlWorkspaceLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Machine Learning workspace to stream to a Log Analytics workspace when any Machine Learning workspace which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Machine Learning workspace to Log Analytics workspace"},"type":"String"},"MySQLLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Database for MySQL to stream to a Log Analytics workspace when any Database for MySQL which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Database for MySQL to Log Analytics workspace"},"type":"String"},"NetworkNICLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Network Interfaces to stream to a Log Analytics workspace when any Network Interfaces which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Network Interfaces to Log Analytics workspace"},"type":"String"},"NetworkPublicIPNicLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Public IP addresses to stream to a Log Analytics workspace when any Public IP addresses which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Public IP addresses to Log Analytics workspace"},"type":"String"},"NetworkSecurityGroupsLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Network Security Groups to stream to a Log Analytics workspace when any Network Security Groups which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Network Security Groups to Log Analytics workspace"},"type":"String"},"PostgreSQLLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Database for PostgreSQL to stream to a Log Analytics workspace when any Database for PostgreSQL which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Database for PostgreSQL to Log Analytics workspace"},"type":"String"},"PowerBIEmbeddedLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Power BI Embedded to stream to a Log Analytics workspace when any Power BI Embedded which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Power BI Embedded to Log Analytics workspace"},"type":"String"},"RecoveryVaultLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Recovery Services vaults to stream to a Log Analytics workspace when any Recovery Services vaults which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Recovery Services vaults to Log Analytics workspace"},"type":"String"},"RedisCacheLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Redis Cache to stream to a Log Analytics workspace when any Redis Cache which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Redis Cache to Log Analytics workspace"},"type":"String"},"RelayLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Relay to stream to a Log Analytics workspace when any Relay which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Relay to Log Analytics workspace"},"type":"String"},"SQLDBsLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for SQL Databases to stream to a Log Analytics workspace when any SQL Databases  which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for SQL Databases  to Log Analytics workspace"},"type":"String"},"SQLElasticPoolsLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for SQL Elastic Pools to stream to a Log Analytics workspace when any SQL Elastic Pools which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for SQL Elastic Pools to Log Analytics workspace"},"type":"String"},"SQLMLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for SQL Managed Instances to stream to a Log Analytics workspace when any SQL Managed Instances which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for SQL Managed Instances to Log Analytics workspace"},"type":"String"},"SearchServicesLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Search Services to stream to a Log Analytics workspace when any Search Services which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Search Services to Log Analytics workspace"},"type":"String"},"ServiceBusLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for ServiceBus to stream to a Log Analytics workspace when any ServiceBus which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Service Bus namespaces  to Log Analytics workspace"},"type":"String"},"SignalRLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for SignalR to stream to a Log Analytics workspace when any SignalR which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for SignalR to Log Analytics workspace"},"type":"String"},"StorageAccountsLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Storage Accounts to stream to a Log Analytics workspace when any storage account which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Storage Accounts to Log Analytics workspace"},"type":"String"},"StreamAnalyticsLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Stream Analytics to stream to a Log Analytics workspace when any Stream Analytics which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Stream Analytics to Log Analytics workspace"},"type":"String"},"TimeSeriesInsightsLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Time Series Insights to stream to a Log Analytics workspace when any Time Series Insights which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Time Series Insights to Log Analytics workspace"},"type":"String"},"TrafficManagerLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Traffic Manager to stream to a Log Analytics workspace when any Traffic Manager which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Traffic Manager to Log Analytics workspace"},"type":"String"},"VMSSLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Virtual Machine Scale Sets  to stream to a Log Analytics workspace when any Virtual Machine Scale Sets  which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Virtual Machine Scale Sets to Log Analytics workspace"},"type":"String"},"VNetGWLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for VPN Gateway to stream to a Log Analytics workspace when any VPN Gateway which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled.","displayName":"Deploy Diagnostic Settings for VPN Gateway to Log Analytics workspace"},"type":"String"},"VirtualMachinesLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Virtual Machines to stream to a Log Analytics workspace when any Virtual Machines which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Virtual Machines to Log Analytics workspace"},"type":"String"},"VirtualNetworkLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Virtual Network to stream to a Log Analytics workspace when any Virtual Network which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Virtual Network to Log Analytics workspace"},"type":"String"},"WVDAppGroupsLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for WVD Application groups to stream to a Log Analytics workspace when any application groups which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for WVD Application Groups to Log Analytics workspace"},"type":"String"},"WVDHostPoolsLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for WVD Host pools to stream to a Log Analytics workspace when any host pool which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for WVD Host pools to Log Analytics workspace"},"type":"String"},"WVDWorkspaceLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for WVD Workspace to stream to a Log Analytics workspace when any Workspace which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for WVD Workspace to Log Analytics workspace"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_definition_group: []
          policy_definition_reference:
            - parameter_values: '{"effect":{"value":"[parameters(''StorageAccountsLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/6f8f98a4-f108-47cb-8e98-91a0d85cd474
              policy_group_names: null
              reference_id: StorageAccountDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''WVDAppGroupsLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDAppGroup
              policy_group_names: null
              reference_id: WVDAppGroupDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''WVDWorkspaceLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDWorkspace
              policy_group_names: null
              reference_id: WVDWorkspaceDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''WVDHostPoolsLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDHostPools
              policy_group_names: null
              reference_id: WVDHostPoolsDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''ACILogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACI
              policy_group_names: null
              reference_id: ACIDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''ACRLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACR
              policy_group_names: null
              reference_id: ACRDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''AKSLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AKS
              policy_group_names: null
              reference_id: AKSDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''AnalysisServiceLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AnalysisService
              policy_group_names: null
              reference_id: AnalysisServiceDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''APIforFHIRLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApiForFHIR
              policy_group_names: null
              reference_id: APIforFHIRDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''APIMgmtLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-APIMgmt
              policy_group_names: null
              reference_id: APIMgmtDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''ApplicationGatewayLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApplicationGateway
              policy_group_names: null
              reference_id: ApplicationGatewayDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''AutomationLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AA
              policy_group_names: null
              reference_id: AutomationDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''BatchLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Batch
              policy_group_names: null
              reference_id: BatchDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''CDNEndpointsLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CDNEndpoints
              policy_group_names: null
              reference_id: CDNEndpointsDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''CognitiveServicesLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CognitiveServices
              policy_group_names: null
              reference_id: CognitiveServicesDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''CosmosLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CosmosDB
              policy_group_names: null
              reference_id: CosmosDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''DatabricksLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Databricks
              policy_group_names: null
              reference_id: DatabricksDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''DataExplorerClusterLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataExplorerCluster
              policy_group_names: null
              reference_id: DataExplorerClusterDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''DataFactoryLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataFactory
              policy_group_names: null
              reference_id: DataFactoryDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''DataLakeStoreLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataLakeStore
              policy_group_names: null
              reference_id: DataLakeStoreDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''DataLakeAnalyticsLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DLAnalytics
              policy_group_names: null
              reference_id: DataLakeAnalyticsDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''EventGridSubLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSub
              policy_group_names: null
              reference_id: EventGridSubDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''EventGridTopicLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridTopic
              policy_group_names: null
              reference_id: EventGridTopicDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''EventHubLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventHub
              policy_group_names: null
              reference_id: EventHubDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''EventSystemTopicLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSystemTopic
              policy_group_names: null
              reference_id: EventSystemTopicDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''ExpressRouteLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ExpressRoute
              policy_group_names: null
              reference_id: ExpressRouteDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''FirewallLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Firewall
              policy_group_names: null
              reference_id: FirewallDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''FrontDoorLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-FrontDoor
              policy_group_names: null
              reference_id: FrontDoorDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''FunctionAppLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Function
              policy_group_names: null
              reference_id: FunctionAppDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''HDInsightLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-HDInsight
              policy_group_names: null
              reference_id: HDInsightDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''IotHubLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-iotHub
              policy_group_names: null
              reference_id: IotHubDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''KeyVaultLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-KeyVault
              policy_group_names: null
              reference_id: KeyVaultDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''LoadBalancerLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LoadBalancer
              policy_group_names: null
              reference_id: LoadBalancerDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''LogicAppsISELogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogicAppsISE
              policy_group_names: null
              reference_id: LogicAppsISEDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''LogicAppsWFLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogicAppsWF
              policy_group_names: null
              reference_id: LogicAppsWFDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''MariaDBLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MariaDB
              policy_group_names: null
              reference_id: MariaDBDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''MediaServiceLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MediaService
              policy_group_names: null
              reference_id: MediaServiceDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''MlWorkspaceLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MlWorkspace
              policy_group_names: null
              reference_id: MlWorkspaceDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''MySQLLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MySQL
              policy_group_names: null
              reference_id: MySQLDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''NetworkSecurityGroupsLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NetworkSecurityGroups
              policy_group_names: null
              reference_id: NetworkSecurityGroupsDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''NetworkNICLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NIC
              policy_group_names: null
              reference_id: NetworkNICDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''PostgreSQLLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PostgreSQL
              policy_group_names: null
              reference_id: PostgreSQLDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''PowerBIEmbeddedLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PowerBIEmbedded
              policy_group_names: null
              reference_id: PowerBIEmbeddedDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''NetworkPublicIPNicLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"metricsEnabled":{"value":"True"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/752154a7-1e0f-45c6-a880-ac75a7e4f648
              policy_group_names: null
              reference_id: NetworkPublicIPNicDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''RecoveryVaultLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-RecoveryVault
              policy_group_names: null
              reference_id: RecoveryVaultDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''RedisCacheLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-RedisCache
              policy_group_names: null
              reference_id: RedisCacheDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''RelayLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Relay
              policy_group_names: null
              reference_id: RelayDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''SearchServicesLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SearchServices
              policy_group_names: null
              reference_id: SearchServicesDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''ServiceBusLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ServiceBus
              policy_group_names: null
              reference_id: ServiceBusDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''SignalRLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SignalR
              policy_group_names: null
              reference_id: SignalRDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''SQLDBsLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLDBs
              policy_group_names: null
              reference_id: SQLDBsDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''SQLElasticPoolsLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLElasticPools
              policy_group_names: null
              reference_id: SQLElasticPoolsDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''SQLMLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLMI
              policy_group_names: null
              reference_id: SQLMDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''StreamAnalyticsLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-StreamAnalytics
              policy_group_names: null
              reference_id: StreamAnalyticsDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''TimeSeriesInsightsLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TimeSeriesInsights
              policy_group_names: null
              reference_id: TimeSeriesInsightsDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''TrafficManagerLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TrafficManager
              policy_group_names: null
              reference_id: TrafficManagerDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''VirtualNetworkLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VirtualNetwork
              policy_group_names: null
              reference_id: VirtualNetworkDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''VirtualMachinesLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VM
              policy_group_names: null
              reference_id: VirtualMachinesDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''VMSSLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VMSS
              policy_group_names: null
              reference_id: VMSSDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''VNetGWLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VNetGW
              policy_group_names: null
              reference_id: VNetGWDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''AppServiceLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WebServerFarm
              policy_group_names: null
              reference_id: AppServiceDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''AppServiceWebappLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Website
              policy_group_names: null
              reference_id: AppServiceWebappDeployDiagnosticLogDeployLogAnalytics
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Sql-Security"]
        mode: managed
        type: azurerm_policy_set_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Sql-Security
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy auditing, Alert, TDE and SQL vulnerability to SQL Databases when it not exist in the deployment
          display_name: Deploy SQL Database built-in SQL security configuration
          management_group_name: myorg-2
          metadata: '{"category":"SQL","version":"1.0.0"}'
          name: Deploy-Sql-Security
          parameters: '{"SqlDbAuditingSettingsDeploySqlSecurityEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploy auditing settings to SQL Database when it not exist in the deployment","displayName":"Deploy SQL database auditing settings"},"type":"String"},"SqlDbSecurityAlertPoliciesDeploySqlSecurityEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploy the security Alert Policies configuration with email admin accounts when it not exist in current configuration","displayName":"Deploy SQL Database security Alert Policies configuration with email admin accounts"},"type":"String"},"SqlDbTdeDeploySqlSecurityEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploy the Transparent Data Encryption when it is not enabled in the deployment","displayName":"Deploy SQL Database Transparent Data Encryption "},"type":"String"},"SqlDbVulnerabilityAssessmentsDeploySqlSecurityEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploy SQL Database vulnerability Assessments when it not exist in the deployment. To the specific  storage account in the parameters","displayName":"Deploy SQL Database vulnerability Assessments"},"type":"String"},"vulnerabilityAssessmentsEmail":{"metadata":{"description":"The email address to send alerts","displayName":"The email address to send alerts"},"type":"String"},"vulnerabilityAssessmentsStorageID":{"metadata":{"description":"The storage account ID to store assessments","displayName":"The storage account ID to store assessments"},"type":"String"}}'
          policy_definition_group: []
          policy_definition_reference:
            - parameter_values: '{"effect":{"value":"[parameters(''SqlDbTdeDeploySqlSecurityEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-Tde
              policy_group_names: null
              reference_id: SqlDbTdeDeploySqlSecurity
            - parameter_values: '{"effect":{"value":"[parameters(''SqlDbSecurityAlertPoliciesDeploySqlSecurityEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-SecurityAlertPolicies
              policy_group_names: null
              reference_id: SqlDbSecurityAlertPoliciesDeploySqlSecurity
            - parameter_values: '{"effect":{"value":"[parameters(''SqlDbAuditingSettingsDeploySqlSecurityEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-AuditingSettings
              policy_group_names: null
              reference_id: SqlDbAuditingSettingsDeploySqlSecurity
            - parameter_values: '{"effect":{"value":"[parameters(''SqlDbVulnerabilityAssessmentsDeploySqlSecurityEffect'')]"},"vulnerabilityAssessmentsEmail":{"value":"[parameters(''vulnerabilityAssessmentsEmail'')]"},"vulnerabilityAssessmentsStorageID":{"value":"[parameters(''vulnerabilityAssessmentsStorageID'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-vulnerabilityAssessments
              policy_group_names: null
              reference_id: SqlDbVulnerabilityAssessmentsDeploySqlSecurity
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policySetDefinitions/Enforce-EncryptTransit"]
        mode: managed
        type: azurerm_policy_set_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policySetDefinitions/Enforce-EncryptTransit
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: 'Choose either Deploy if not exist and append in combination with audit or Select Deny in the Policy effect. Deny polices shift left. Deploy if not exist and append enforce but can be changed, and because missing exsistense condition require then the combination of Audit. '
          display_name: Deny or Deploy and append TLS requirements and SSL enforcement on resources without Encryption in transit
          management_group_name: myorg-2
          metadata: '{"category":"Encryption","version":"1.0.0"}'
          name: Enforce-EncryptTransit
          parameters: '{"AKSIngressHttpsOnlyEffect":{"allowedValues":["audit","deny","disabled"],"defaultValue":"deny","metadata":{"description":"This policy enforces HTTPS ingress in a Kubernetes cluster. This policy is generally available for Kubernetes Service (AKS), and preview for AKS Engine and Azure Arc enabled Kubernetes. For instructions on using this policy, visit https://aka.ms/kubepolicydoc.","displayName":"AKS Service. Enforce HTTPS ingress in Kubernetes cluster"},"type":"String"},"APIAppServiceHttpsEffect":{"allowedValues":["Audit","Disabled","Deny"],"defaultValue":"Audit","metadata":{"description":"Choose Deny or Audit in combination with Append policy. Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks.","displayName":"App Service API App. API App should only be accessible over HTTPS. Choose Deny or Audit in combination with Append policy."},"type":"String"},"APIAppServiceLatestTlsEffect":{"allowedValues":["AuditIfNotExists","Disabled"],"defaultValue":"AuditIfNotExists","metadata":{"description":"App Service API App. Only Audit, deny not possible as it is a related resource.  Upgrade to the latest TLS version.","displayName":"App Service API App. Latest TLS version should be used in your API App"},"type":"String"},"AppServiceHttpEffect":{"allowedValues":["Append","Disabled"],"defaultValue":"Append","metadata":{"description":"Append the AppService sites object to ensure that min Tls version is set to required TLS version. Please note Append does not enforce compliance use then deny.","displayName":"App Service. Appends the AppService sites config WebApp, APIApp, Function App with TLS version selected below"},"type":"String"},"AppServiceTlsVersionEffect":{"allowedValues":["Append","Disabled"],"defaultValue":"Append","metadata":{"description":"App Service. Appends the AppService sites object to ensure that  HTTPS only is enabled for  server/service authentication and protects data in transit from network layer eavesdropping attacks. Please note Append does not enforce compliance use then deny.","displayName":"App Service. Appends the AppService WebApp, APIApp, Function App to enable https only"},"type":"String"},"AppServiceminTlsVersion":{"allowedValues":["1.2","1.0","1.1"],"defaultValue":"1.2","metadata":{"description":"App Service. Select version  minimum TLS version for a  Web App config to enforce","displayName":"App Service. Select version minimum TLS Web App config"},"type":"String"},"FunctionLatestTlsEffect":{"allowedValues":["AuditIfNotExists","Disabled"],"defaultValue":"AuditIfNotExists","metadata":{"description":"Only Audit, deny not possible as it is a related resource. Upgrade to the latest TLS version.","displayName":"App Service Function App. Latest TLS version should be used in your Function App"},"type":"String"},"FunctionServiceHttpsEffect":{"allowedValues":["Audit","Disabled","Deny"],"defaultValue":"Audit","metadata":{"description":"App Service Function App. Choose Deny or Audit in combination with Append policy. Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks.","displayName":"App Service Function App. Function App should only be accessible over HTTPS. Choose Deny or Audit in combination with Append policy."},"type":"String"},"MySQLEnableSSLDeployEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploy a specific min TLS version requirement and enforce SSL on Azure Database for MySQL server. Enforce the Server to client applications using minimum version of Tls to secure the connection between your database server and your client applications helps protect against ''man in the middle'' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.","displayName":"MySQL database servers. Deploy if not exist set minimum TLS version Azure Database for MySQL server"},"type":"String"},"MySQLEnableSSLEffect":{"allowedValues":["Audit","Disabled","Deny"],"defaultValue":"Audit","metadata":{"description":"Azure Database for MySQL supports connecting your Azure Database for MySQL server to client applications using Secure Sockets Layer (SSL). Enforcing SSL connections between your database server and your client applications helps protect against ''man in the middle'' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.","displayName":"MySQL database servers. Enforce SSL connection should be enabled for MySQL database servers"},"type":"String"},"MySQLminimalTlsVersion":{"allowedValues":["TLS1_2","TLS1_0","TLS1_1","TLSEnforcementDisabled"],"defaultValue":"TLS1_2","metadata":{"description":"Select version  minimum TLS version Azure Database for MySQL server to enforce","displayName":"MySQL database servers. Select version minimum TLS for MySQL server"},"type":"String"},"PostgreSQLEnableSSLDeployEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploy a specific min TLS version requirement and enforce SSL on Azure Database for PostgreSQL server. Enforce the Server to client applications using minimum version of Tls to secure the connection between your database server and your client applications helps protect against ''man in the middle'' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.","displayName":"PostgreSQL database servers. Deploy if not exist set minimum TLS version Azure Database for PostgreSQL server"},"type":"String"},"PostgreSQLEnableSSLEffect":{"allowedValues":["Audit","Disabled","Deny"],"defaultValue":"Audit","metadata":{"description":"Azure Database for PostgreSQL supports connecting your Azure Database for PostgreSQL server to client applications using Secure Sockets Layer (SSL). Enforcing SSL connections between your database server and your client applications helps protect against ''man in the middle'' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.","displayName":"PostgreSQL database servers. Enforce SSL connection should be enabled for PostgreSQL database servers"},"type":"String"},"PostgreSQLminimalTlsVersion":{"allowedValues":["TLS1_2","TLS1_0","TLS1_1","TLSEnforcementDisabled"],"defaultValue":"TLS1_2","metadata":{"description":"PostgreSQL database servers. Select version  minimum TLS version Azure Database for MySQL server to enforce","displayName":"PostgreSQL database servers. Select version minimum TLS for MySQL server"},"type":"String"},"RedisMinTlsVersion":{"allowedValues":["1.2","1.0","1.1"],"defaultValue":"1.2","metadata":{"description":"Select version  minimum TLS version for a Azure Cache for Redis to enforce","displayName":"Azure Cache for Redis.Select version minimum TLS for Azure Cache for Redis"},"type":"String"},"RedisTLSDeployEffect":{"allowedValues":["Append","Disabled"],"defaultValue":"Append","metadata":{"description":"Deploy a specific min TLS version requirement and enforce SSL on Azure Cache for Redis. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against ''man in the middle'' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.","displayName":"Azure Cache for Redis. Deploy a specific min TLS version requirement and enforce SSL Azure Cache for Redis"},"type":"String"},"RedisTLSEffect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Audit","metadata":{"description":"Azure Cache for Redis. Audit enabling of only connections via SSL to Azure Cache for Redis. Use of secure connections ensures authentication between the server and the service and protects data in transit from network layer attacks such as man-in-the-middle, eavesdropping, and session-hijacking.","displayName":"Azure Cache for Redis. Only secure connections to your Azure Cache for Redis should be enabled"},"type":"String"},"SQLManagedInstanceMinTlsVersion":{"allowedValues":["1.2","1.0","1.1"],"defaultValue":"1.2","metadata":{"description":"Select version  minimum TLS version for Azure Managed Instanceto to  enforce","displayName":"Azure Managed Instance.Select version minimum TLS for Azure Managed Instance"},"type":"String"},"SQLManagedInstanceTLSDeployEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploy a specific min TLS version requirement and enforce SSL on SQL servers. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against ''man in the middle'' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.","displayName":"Azure Managed Instance. Deploy a specific min TLS version requirement and enforce SSL on SQL servers"},"type":"String"},"SQLManagedInstanceTLSEffect":{"allowedValues":["Audit","Disabled","Deny"],"defaultValue":"Audit","metadata":{"description":"Setting minimal TLS version to 1.2 improves security by ensuring your SQL Managed Instance can only be accessed from clients using TLS 1.2. Using versions of TLS less than 1.2 is not recommended since they have well documented security vulnerabilities.","displayName":"SQL Managed Instance should have the minimal TLS version of 1.2"},"type":"String"},"SQLServerTLSDeployEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploy a specific min TLS version requirement and enforce SSL on SQL servers. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against ''man in the middle'' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.","displayName":"Azure SQL Database. Deploy a specific min TLS version requirement and enforce SSL on SQL servers"},"type":"String"},"SQLServerTLSEffect":{"allowedValues":["Audit","Disabled","Deny"],"defaultValue":"Audit","metadata":{"description":"Setting minimal TLS version to 1.2 improves security by ensuring your Azure SQL Database can only be accessed from clients using TLS 1.2. Using versions of TLS less than 1.2 is not recommended since they have well documented security vulnerabilities.","displayName":"Azure SQL Database should have the minimal TLS version of 1.2"},"type":"String"},"SQLServerminTlsVersion":{"allowedValues":["1.2","1.0","1.1"],"defaultValue":"1.2","metadata":{"description":"Select version  minimum TLS version for Azure SQL Database to enforce","displayName":"Azure SQL Database.Select version minimum TLS for Azure SQL Database"},"type":"String"},"StorageDeployHttpsEnabledEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Audit requirement of Secure transfer in your storage account. Secure transfer is an option that forces your storage account to accept requests only from secure connections (HTTPS). Use of HTTPS ensures authentication between the server and the service and protects data in transit from network layer attacks such as man-in-the-middle, eavesdropping, and session-hijacking","displayName":"Azure Storage Account. Deploy Secure transfer to storage accounts should be enabled"},"type":"String"},"StorageHttpsEnabledEffect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Audit","metadata":{"description":"Audit requirement of Secure transfer in your storage account. Secure transfer is an option that forces your storage account to accept requests only from secure connections (HTTPS). Use of HTTPS ensures authentication between the server and the service and protects data in transit from network layer attacks such as man-in-the-middle, eavesdropping, and session-hijacking","displayName":"Azure Storage Account. Secure transfer to storage accounts should be enabled"},"type":"String"},"StorageminimumTlsVersion":{"allowedValues":["TLS1_2","TLS1_1","TLS1_0"],"defaultValue":"TLS1_2","metadata":{"description":"Select version  minimum TLS version on Azure Storage Account to enforce","displayName":"Storage Account select minimum TLS version"},"type":"String"},"WebAppServiceHttpsEffect":{"allowedValues":["Audit","Disabled","Deny"],"defaultValue":"Audit","metadata":{"description":"Choose Deny or Audit in combination with Append policy. Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks.","displayName":"App Service Web App. Web Application should only be accessible over HTTPS. Choose Deny or Audit in combination with Append policy."},"type":"String"},"WebAppServiceLatestTlsEffect":{"allowedValues":["AuditIfNotExists","Disabled"],"defaultValue":"AuditIfNotExists","metadata":{"description":"Only Audit, deny not possible as it is a related resource. Upgrade to the latest TLS version.","displayName":"App Service Web App. Latest TLS version should be used in your Web App"},"type":"String"}}'
          policy_definition_group: []
          policy_definition_reference:
            - parameter_values: '{"effect":{"value":"[parameters(''AppServiceHttpEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-httpsonly
              policy_group_names: null
              reference_id: AppServiceHttpEffect
            - parameter_values: '{"effect":{"value":"[parameters(''AppServiceTlsVersionEffect'')]"},"minTlsVersion":{"value":"[parameters(''AppServiceminTlsVersion'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-latestTLS
              policy_group_names: null
              reference_id: AppServiceminTlsVersion
            - parameter_values: '{"effect":{"value":"[parameters(''APIAppServiceLatestTlsEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/8cb6aa8b-9e41-4f4e-aa25-089a7ac2581e
              policy_group_names: null
              reference_id: APIAppServiceLatestTlsEffect
            - parameter_values: '{"effect":{"value":"[parameters(''FunctionLatestTlsEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/f9d614c5-c173-4d56-95a7-b4437057d193
              policy_group_names: null
              reference_id: FunctionLatestTlsEffect
            - parameter_values: '{"effect":{"value":"[parameters(''WebAppServiceLatestTlsEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/f0e6e85b-9b9f-4a4b-b67b-f730d42f1b0b
              policy_group_names: null
              reference_id: WebAppServiceLatestTlsEffect
            - parameter_values: '{"effect":{"value":"[parameters(''APIAppServiceHttpsEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceApiApp-http
              policy_group_names: null
              reference_id: APIAppServiceHttpsEffect
            - parameter_values: '{"effect":{"value":"[parameters(''FunctionServiceHttpsEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceFunctionApp-http
              policy_group_names: null
              reference_id: FunctionServiceHttpsEffect
            - parameter_values: '{"effect":{"value":"[parameters(''WebAppServiceHttpsEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceWebApp-http
              policy_group_names: null
              reference_id: WebAppServiceHttpsEffect
            - parameter_values: '{"effect":{"value":"[parameters(''AKSIngressHttpsOnlyEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/1a5b4dca-0b6f-4cf5-907c-56316bc1bf3d
              policy_group_names: null
              reference_id: AKSIngressHttpsOnlyEffect
            - parameter_values: '{"effect":{"value":"[parameters(''MySQLEnableSSLDeployEffect'')]"},"minimalTlsVersion":{"value":"[parameters(''MySQLminimalTlsVersion'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-MySQL-sslEnforcement
              policy_group_names: null
              reference_id: MySQLEnableSSLDeployEffect
            - parameter_values: '{"effect":{"value":"[parameters(''MySQLEnableSSLEffect'')]"},"minimalTlsVersion":{"value":"[parameters(''MySQLminimalTlsVersion'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-MySql-http
              policy_group_names: null
              reference_id: MySQLEnableSSLEffect
            - parameter_values: '{"effect":{"value":"[parameters(''PostgreSQLEnableSSLDeployEffect'')]"},"minimalTlsVersion":{"value":"[parameters(''PostgreSQLminimalTlsVersion'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-PostgreSQL-sslEnforcement
              policy_group_names: null
              reference_id: PostgreSQLEnableSSLDeployEffect
            - parameter_values: '{"effect":{"value":"[parameters(''PostgreSQLEnableSSLEffect'')]"},"minimalTlsVersion":{"value":"[parameters(''PostgreSQLminimalTlsVersion'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-PostgreSql-http
              policy_group_names: null
              reference_id: PostgreSQLEnableSSLEffect
            - parameter_values: '{"effect":{"value":"[parameters(''RedisTLSDeployEffect'')]"},"minimumTlsVersion":{"value":"[parameters(''RedisMinTlsVersion'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-sslEnforcement
              policy_group_names: null
              reference_id: RedisTLSDeployEffect
            - parameter_values: '{"effect":{"value":"[parameters(''RedisTLSDeployEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-disableNonSslPort
              policy_group_names: null
              reference_id: RedisdisableNonSslPort
            - parameter_values: '{"effect":{"value":"[parameters(''RedisTLSEffect'')]"},"minimumTlsVersion":{"value":"[parameters(''RedisMinTlsVersion'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-Redis-http
              policy_group_names: null
              reference_id: RedisDenyhttps
            - parameter_values: '{"effect":{"value":"[parameters(''SQLManagedInstanceTLSDeployEffect'')]"},"minimalTlsVersion":{"value":"[parameters(''SQLManagedInstanceMinTlsVersion'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-SqlMi-minTLS
              policy_group_names: null
              reference_id: SQLManagedInstanceTLSDeployEffect
            - parameter_values: '{"effect":{"value":"[parameters(''SQLManagedInstanceTLSEffect'')]"},"minimalTlsVersion":{"value":"[parameters(''SQLManagedInstanceMinTlsVersion'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-SqlMi-minTLS
              policy_group_names: null
              reference_id: SQLManagedInstanceTLSEffect
            - parameter_values: '{"effect":{"value":"[parameters(''SQLServerTLSDeployEffect'')]"},"minimalTlsVersion":{"value":"[parameters(''SQLServerminTlsVersion'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-SQL-minTLS
              policy_group_names: null
              reference_id: SQLServerTLSDeployEffect
            - parameter_values: '{"effect":{"value":"[parameters(''SQLServerTLSEffect'')]"},"minimalTlsVersion":{"value":"[parameters(''SQLServerminTlsVersion'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-Sql-minTLS
              policy_group_names: null
              reference_id: SQLServerTLSEffect
            - parameter_values: '{"effect":{"value":"[parameters(''StorageHttpsEnabledEffect'')]"},"minimumTlsVersion":{"value":"[parameters(''StorageMinimumTlsVersion'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-Storage-minTLS
              policy_group_names: null
              reference_id: StorageHttpsEnabledEffect
            - parameter_values: '{"effect":{"value":"[parameters(''StorageDeployHttpsEnabledEffect'')]"},"minimumTlsVersion":{"value":"[parameters(''StorageMinimumTlsVersion'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Storage-sslEnforcement
              policy_group_names: null
              reference_id: StorageDeployHttpsEnabledEffect
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Encryption-CMK"]
        mode: managed
        type: azurerm_policy_set_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Encryption-CMK
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deny or Audit resources without Encryption with a customer-managed key (CMK)
          display_name: Deny or Audit resources without Encryption with a customer-managed key (CMK)
          management_group_name: myorg-2
          metadata: '{"category":"Encryption","version":"1.0.0"}'
          name: Enforce-Encryption-CMK
          parameters: '{"ACRCmkEffect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Audit","metadata":{"description":"Use customer-managed keys to manage the encryption at rest of the contents of your registries. By default, the data is encrypted at rest with service-managed keys, but customer-managed keys (CMK) are commonly required to meet regulatory compliance standards. CMKs enable the data to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management. Learn more about CMK encryption at https://aka.ms/acr/CMK.","displayName":"Container registries should be encrypted with a customer-managed key (CMK)"},"type":"String"},"AksCmkEffect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Audit","metadata":{"description":"Encrypting OS and data disks using customer-managed keys provides more control and greater flexibility in key management. This is a common requirement in many regulatory and industry compliance standards.","displayName":"Azure Kubernetes Service clusters both operating systems and data disks should be encrypted by customer-managed keys"},"type":"String"},"AzureBatchCMKEffect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Audit","metadata":{"description":"Use customer-managed keys (CMKs) to manage the encryption at rest of your Batch account''s data. By default, customer data is encrypted with service-managed keys, but CMKs are commonly required to meet regulatory compliance standards. CMKs enable the data to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management. Learn more about CMK encryption at https://aka.ms/Batch-CMK.","displayName":"Azure Batch account should use customer-managed keys to encrypt data"},"type":"String"},"CognitiveServicesCMKEffect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Audit","metadata":{"description":"Customer-managed keys (CMK) are commonly required to meet regulatory compliance standards. CMKs enable the data stored in Cognitive Services to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management. Learn more about CMK encryption at https://aka.ms/cosmosdb-cmk.","displayName":"Cognitive Services accounts should enable data encryption with a customer-managed key (CMK)"},"type":"String"},"CosmosCMKEffect":{"allowedValues":["audit","deny","disabled"],"defaultValue":"audit","metadata":{"description":"Use customer-managed keys to manage the encryption at rest of your Azure Cosmos DB. By default, the data is encrypted at rest with service-managed keys, but customer-managed keys (CMK) are commonly required to meet regulatory compliance standards. CMKs enable the data to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management. Learn more about CMK encryption at https://aka.ms/cosmosdb-cmk.","displayName":"Azure Cosmos DB accounts should use customer-managed keys to encrypt data at rest"},"type":"String"},"DataBoxCMKEffect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Audit","metadata":{"description":"Use a customer-managed key to control the encryption of the device unlock password for Azure Data Box. Customer-managed keys also help manage access to the device unlock password by the Data Box service in order to prepare the device and copy data in an automated manner. The data on the device itself is already encrypted at rest with Advanced Encryption Standard 256-bit encryption, and the device unlock password is encrypted by default with a Microsoft managed key.","displayName":"Azure Data Box jobs should use a customer-managed key to encrypt the device unlock password"},"type":"String"},"EncryptedVMDisksEffect":{"allowedValues":["AuditIfNotExists","Disabled"],"defaultValue":"AuditIfNotExists","metadata":{"description":"Virtual machines without an enabled disk encryption will be monitored by Azure Security Center as recommendations.","displayName":"Disk encryption should be applied on virtual machines"},"type":"String"},"HealthcareAPIsCMKEffect":{"allowedValues":["audit","disabled"],"defaultValue":"audit","metadata":{"description":"Use a customer-managed key to control the encryption at rest of the data stored in Azure API for FHIR when this is a regulatory or compliance requirement. Customer-managed keys also deliver double encryption by adding a second layer of encryption on top of the default one done with service-managed keys.","displayName":"Azure API for FHIR should use a customer-managed key (CMK) to encrypt data at rest"},"type":"String"},"MySQLCMKEffect":{"allowedValues":["AuditIfNotExists","Disabled"],"defaultValue":"AuditIfNotExists","metadata":{"description":"Use customer-managed keys to manage the encryption at rest of your MySQL servers. By default, the data is encrypted at rest with service-managed keys, but customer-managed keys (CMK) are commonly required to meet regulatory compliance standards. CMKs enable the data to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management.","displayName":"Azure MySQL servers bring your own key data protection should be enabled"},"type":"String"},"PostgreSQLCMKEffect":{"allowedValues":["AuditIfNotExists","Disabled"],"defaultValue":"AuditIfNotExists","metadata":{"description":"Use customer-managed keys to manage the encryption at rest of your PostgreSQL servers. By default, the data is encrypted at rest with service-managed keys, but customer-managed keys (CMK) are commonly required to meet regulatory compliance standards. CMKs enable the data to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management.","displayName":"Azure PostgreSQL servers bring your own key data protection should be enabled"},"type":"String"},"SqlServerTDECMKEffect":{"allowedValues":["AuditIfNotExists","Disabled"],"defaultValue":"AuditIfNotExists","metadata":{"description":"Implementing Transparent Data Encryption (TDE) with your own key provides increased transparency and control over the TDE Protector, increased security with an HSM-backed external service, and promotion of separation of duties. This recommendation applies to organizations with a related compliance requirement.","displayName":"SQL servers should use customer-managed keys to encrypt data at rest"},"type":"String"},"StorageCMKEffect":{"allowedValues":["Audit","Disabled"],"defaultValue":"Audit","metadata":{"description":"Secure your storage account with greater flexibility using customer-managed keys (CMKs). When you specify a CMK, that key is used to protect and control access to the key that encrypts your data. Using CMKs provides additional capabilities to control rotation of the key encryption key or cryptographically erase data.","displayName":"Storage accounts should use customer-managed key (CMK) for encryption, no deny as this would result in not able to create storage account because the first need of MSI for encryption"},"type":"String"},"StreamAnalyticsCMKEffect":{"allowedValues":["audit","deny","disabled"],"defaultValue":"audit","metadata":{"description":"Use customer-managed keys when you want to securely store any metadata and private data assets of your Stream Analytics jobs in your storage account. This gives you total control over how your Stream Analytics data is encrypted.","displayName":"Azure Stream Analytics jobs should use customer-managed keys to encrypt data"},"type":"String"},"SynapseWorkspaceCMKEffect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Audit","metadata":{"description":"Use customer-managed keys to control the encryption at rest of the data stored in Azure Synapse workspaces. Customer-managed keys deliver double encryption by adding a second layer of encryption on top of the default encryption with service-managed keys.","displayName":"Azure Synapse workspaces should use customer-managed keys to encrypt data at rest"},"type":"String"},"WorkspaceCMKEffect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Audit","metadata":{"description":"Manage encryption at rest of your Azure Machine Learning workspace data with customer-managed keys (CMK). By default, customer data is encrypted with service-managed keys, but CMKs are commonly required to meet regulatory compliance standards. CMKs enable the data to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management. Learn more about CMK encryption at https://aka.ms/azureml-workspaces-cmk.","displayName":"Azure Machine Learning workspaces should be encrypted with a customer-managed key (CMK)"},"type":"String"}}'
          policy_definition_group: []
          policy_definition_reference:
            - parameter_values: '{"effect":{"value":"[parameters(''ACRCmkEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/5b9159ae-1701-4a6f-9a7a-aa9c8ddd0580
              policy_group_names: null
              reference_id: ACRCmkDeny
            - parameter_values: '{"effect":{"value":"[parameters(''AksCmkEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/7d7be79c-23ba-4033-84dd-45e2a5ccdd67
              policy_group_names: null
              reference_id: AksCmkDeny
            - parameter_values: '{"effect":{"value":"[parameters(''WorkspaceCMKEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/ba769a63-b8cc-4b2d-abf6-ac33c7204be8
              policy_group_names: null
              reference_id: WorkspaceCMK
            - parameter_values: '{"effect":{"value":"[parameters(''CognitiveServicesCMKEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/67121cc7-ff39-4ab8-b7e3-95b84dab487d
              policy_group_names: null
              reference_id: CognitiveServicesCMK
            - parameter_values: '{"effect":{"value":"[parameters(''CosmosCMKEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/1f905d99-2ab7-462c-a6b0-f709acca6c8f
              policy_group_names: null
              reference_id: CosmosCMKEffect
            - parameter_values: '{"effect":{"value":"[parameters(''DataBoxCMKEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/86efb160-8de7-451d-bc08-5d475b0aadae
              policy_group_names: null
              reference_id: DataBoxCMKEffect
            - parameter_values: '{"effect":{"value":"[parameters(''StreamAnalyticsCMKEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/87ba29ef-1ab3-4d82-b763-87fcd4f531f7
              policy_group_names: null
              reference_id: StreamAnalyticsCMKEffect
            - parameter_values: '{"effect":{"value":"[parameters(''SynapseWorkspaceCMKEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/f7d52b2d-e161-4dfa-a82b-55e564167385
              policy_group_names: null
              reference_id: SynapseWorkspaceCMKEffect
            - parameter_values: '{"effect":{"value":"[parameters(''StorageCMKEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/6fac406b-40ca-413b-bf8e-0bf964659c25
              policy_group_names: null
              reference_id: StorageCMKEffect
            - parameter_values: '{"effect":{"value":"[parameters(''MySQLCMKEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/83cef61d-dbd1-4b20-a4fc-5fbc7da10833
              policy_group_names: null
              reference_id: MySQLCMKEffect
            - parameter_values: '{"effect":{"value":"[parameters(''PostgreSQLCMKEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/18adea5e-f416-4d0f-8aa8-d24321e3e274
              policy_group_names: null
              reference_id: PostgreSQLCMKEffect
            - parameter_values: '{"effect":{"value":"[parameters(''SqlServerTDECMKEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/0d134df8-db83-46fb-ad72-fe0c9428c8dd
              policy_group_names: null
              reference_id: SqlServerTDECMKEffect
            - parameter_values: '{"effect":{"value":"[parameters(''HealthcareAPIsCMKEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/051cba44-2429-45b9-9649-46cec11c7119
              policy_group_names: null
              reference_id: HealthcareAPIsCMKEffect
            - parameter_values: '{"effect":{"value":"[parameters(''AzureBatchCMKEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/99e9ccd8-3db9-4592-b0d1-14b1715a4d8a
              policy_group_names: null
              reference_id: AzureBatchCMKEffect
            - parameter_values: '{"effect":{"value":"[parameters(''EncryptedVMDisksEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/0961003e-5a0a-4549-abde-af6a37f2724d
              policy_group_names: null
              reference_id: EncryptedVMDisksEffect
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_2.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2-landing-zones/providers/Microsoft.Authorization/roleAssignments/25d2af11-9027-566d-aac6-6b9b83afcedd"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2-landing-zones/providers/Microsoft.Authorization/roleAssignments/25d2af11-9027-566d-aac6-6b9b83afcedd
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: 25d2af11-9027-566d-aac6-6b9b83afcedd
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/5e467623-bb1f-42f4-a55d-6e525e11384b
          scope: /providers/Microsoft.Management/managementGroups/myorg-2-landing-zones
          timeouts: null
      - address: module.test_root_id_2.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2-landing-zones/providers/Microsoft.Authorization/roleAssignments/95296bc2-678d-51db-9118-1d5b41e6a65a"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2-landing-zones/providers/Microsoft.Authorization/roleAssignments/95296bc2-678d-51db-9118-1d5b41e6a65a
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: 95296bc2-678d-51db-9118-1d5b41e6a65a
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/9980e02c-c2be-4d73-94e8-173b1dc7cf3c
          scope: /providers/Microsoft.Management/managementGroups/myorg-2-landing-zones
          timeouts: null
      - address: module.test_root_id_2.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2-landing-zones/providers/Microsoft.Authorization/roleAssignments/e1f9acb5-5367-5c63-b68b-1e8b79d4e7a5"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2-landing-zones/providers/Microsoft.Authorization/roleAssignments/e1f9acb5-5367-5c63-b68b-1e8b79d4e7a5
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: e1f9acb5-5367-5c63-b68b-1e8b79d4e7a5
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/ed7f3fbd-7b88-4dd4-9017-9adb7ce333f8
          scope: /providers/Microsoft.Management/managementGroups/myorg-2-landing-zones
          timeouts: null
      - address: module.test_root_id_2.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2-landing-zones/providers/Microsoft.Authorization/roleAssignments/e9c5aa1c-9e29-5084-98e3-a08d472b94f0"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2-landing-zones/providers/Microsoft.Authorization/roleAssignments/e9c5aa1c-9e29-5084-98e3-a08d472b94f0
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: e9c5aa1c-9e29-5084-98e3-a08d472b94f0
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/9b7fa17d-e63e-47b0-bb0a-15c516ac86ec
          scope: /providers/Microsoft.Management/managementGroups/myorg-2-landing-zones
          timeouts: null
      - address: module.test_root_id_2.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2-management/providers/Microsoft.Authorization/roleAssignments/6122e74b-61f8-5944-95d0-702283ff1503"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2-management/providers/Microsoft.Authorization/roleAssignments/6122e74b-61f8-5944-95d0-702283ff1503
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: 6122e74b-61f8-5944-95d0-702283ff1503
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa
          scope: /providers/Microsoft.Management/managementGroups/myorg-2-management
          timeouts: null
      - address: module.test_root_id_2.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2-management/providers/Microsoft.Authorization/roleAssignments/fefe21f5-9018-5763-b25a-e8fbfc33329a"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2-management/providers/Microsoft.Authorization/roleAssignments/fefe21f5-9018-5763-b25a-e8fbfc33329a
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: fefe21f5-9018-5763-b25a-e8fbfc33329a
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293
          scope: /providers/Microsoft.Management/managementGroups/myorg-2-management
          timeouts: null
      - address: module.test_root_id_2.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/roleAssignments/0d0267ad-c7fe-5a3d-a799-df8cffb2c579"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/roleAssignments/0d0267ad-c7fe-5a3d-a799-df8cffb2c579
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: 0d0267ad-c7fe-5a3d-a799-df8cffb2c579
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa
          scope: /providers/Microsoft.Management/managementGroups/myorg-2
          timeouts: null
      - address: module.test_root_id_2.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/roleAssignments/383a782a-c588-5543-bdb2-7d28cd4377df"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/roleAssignments/383a782a-c588-5543-bdb2-7d28cd4377df
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: 383a782a-c588-5543-bdb2-7d28cd4377df
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293
          scope: /providers/Microsoft.Management/managementGroups/myorg-2
          timeouts: null
      - address: module.test_root_id_2.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/roleAssignments/38a9943f-76c3-5bbd-8141-a205a96ca85a"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/roleAssignments/38a9943f-76c3-5bbd-8141-a205a96ca85a
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: 38a9943f-76c3-5bbd-8141-a205a96ca85a
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293
          scope: /providers/Microsoft.Management/managementGroups/myorg-2
          timeouts: null
      - address: module.test_root_id_2.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/roleAssignments/516a3e3e-7fe8-5546-9b52-2ee232ed4a0a"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/roleAssignments/516a3e3e-7fe8-5546-9b52-2ee232ed4a0a
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: 516a3e3e-7fe8-5546-9b52-2ee232ed4a0a
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd
          scope: /providers/Microsoft.Management/managementGroups/myorg-2
          timeouts: null
      - address: module.test_root_id_2.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/roleAssignments/5d789d1a-f277-5136-835f-6aeb500021b4"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/roleAssignments/5d789d1a-f277-5136-835f-6aeb500021b4
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: 5d789d1a-f277-5136-835f-6aeb500021b4
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/9980e02c-c2be-4d73-94e8-173b1dc7cf3c
          scope: /providers/Microsoft.Management/managementGroups/myorg-2
          timeouts: null
      - address: module.test_root_id_2.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/roleAssignments/b80c41c8-0497-5258-b4c0-e410d95519b6"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/roleAssignments/b80c41c8-0497-5258-b4c0-e410d95519b6
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: b80c41c8-0497-5258-b4c0-e410d95519b6
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293
          scope: /providers/Microsoft.Management/managementGroups/myorg-2
          timeouts: null
      - address: module.test_root_id_2.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/roleAssignments/ba4cde66-014d-50bf-8c9e-21b028fec75d"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/roleAssignments/ba4cde66-014d-50bf-8c9e-21b028fec75d
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: ba4cde66-014d-50bf-8c9e-21b028fec75d
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293
          scope: /providers/Microsoft.Management/managementGroups/myorg-2
          timeouts: null
      - address: module.test_root_id_2.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/roleAssignments/c47d0684-7166-5638-8ccb-588b0237c55f"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/roleAssignments/c47d0684-7166-5638-8ccb-588b0237c55f
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: c47d0684-7166-5638-8ccb-588b0237c55f
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa
          scope: /providers/Microsoft.Management/managementGroups/myorg-2
          timeouts: null
      - address: module.test_root_id_2.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/roleAssignments/d594c06c-1ea2-5f16-8b1c-553166952e00"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/roleAssignments/d594c06c-1ea2-5f16-8b1c-553166952e00
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: d594c06c-1ea2-5f16-8b1c-553166952e00
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293
          scope: /providers/Microsoft.Management/managementGroups/myorg-2
          timeouts: null
      - address: module.test_root_id_2.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/roleAssignments/dbb9bb90-a31d-5e28-941e-9a2891cd3bee"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/roleAssignments/dbb9bb90-a31d-5e28-941e-9a2891cd3bee
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: dbb9bb90-a31d-5e28-941e-9a2891cd3bee
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c
          scope: /providers/Microsoft.Management/managementGroups/myorg-2
          timeouts: null
      - address: module.test_root_id_2.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/roleAssignments/e90bc8de-7ada-5a67-b576-42f54d9442f9"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/roleAssignments/e90bc8de-7ada-5a67-b576-42f54d9442f9
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: e90bc8de-7ada-5a67-b576-42f54d9442f9
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293
          scope: /providers/Microsoft.Management/managementGroups/myorg-2
          timeouts: null
      - address: module.test_root_id_2.azurerm_role_definition.enterprise_scale["/providers/Microsoft.Authorization/roleDefinitions/73d45bb3-4d05-5e9f-a577-ba891ad6a48b"]
        mode: managed
        type: azurerm_role_definition
        name: enterprise_scale
        index: /providers/Microsoft.Authorization/roleDefinitions/73d45bb3-4d05-5e9f-a577-ba891ad6a48b
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 1
        values:
          assignable_scopes:
            - /providers/Microsoft.Management/managementGroups/myorg-2
          description: Enterprise-scale custom Role Definition. Grants full access to manage Virtual Network subnets, but no other network resources.
          name: '[MYORG-2] Network-Subnet-Contributor'
          permissions:
            - actions:
                - Microsoft.Authorization/*/read
                - Microsoft.Insights/alertRules/*
                - Microsoft.ResourceHealth/availabilityStatuses/read
                - Microsoft.Resources/deployments/*
                - Microsoft.Resources/subscriptions/resourceGroups/read
                - Microsoft.Support/*
                - Microsoft.Network/*/read
                - Microsoft.Network/virtualNetworks/subnets/*
              data_actions: null
              not_actions: []
              not_data_actions: null
          role_definition_id: 73d45bb3-4d05-5e9f-a577-ba891ad6a48b
          scope: /providers/Microsoft.Management/managementGroups/myorg-2
          timeouts: null
      - address: module.test_root_id_2.time_sleep.after_azurerm_management_group
        mode: managed
        type: time_sleep
        name: after_azurerm_management_group
        provider_name: registry.terraform.io/hashicorp/time
        schema_version: 0
        values:
          create_duration: 30s
          destroy_duration: 0s
          triggers:
            azurerm_management_group_level_1: '["/providers/Microsoft.Management/managementGroups/myorg-2"]'
            azurerm_management_group_level_2: '["/providers/Microsoft.Management/managementGroups/myorg-2-decommissioned","/providers/Microsoft.Management/managementGroups/myorg-2-landing-zones","/providers/Microsoft.Management/managementGroups/myorg-2-platform","/providers/Microsoft.Management/managementGroups/myorg-2-sandboxes"]'
            azurerm_management_group_level_3: '["/providers/Microsoft.Management/managementGroups/myorg-2-connectivity","/providers/Microsoft.Management/managementGroups/myorg-2-demo-corp","/providers/Microsoft.Management/managementGroups/myorg-2-demo-online","/providers/Microsoft.Management/managementGroups/myorg-2-demo-sap","/providers/Microsoft.Management/managementGroups/myorg-2-identity","/providers/Microsoft.Management/managementGroups/myorg-2-management"]'
            azurerm_management_group_level_4: '[]'
            azurerm_management_group_level_5: '[]'
            azurerm_management_group_level_6: '[]'
      - address: module.test_root_id_2.time_sleep.after_azurerm_policy_assignment
        mode: managed
        type: time_sleep
        name: after_azurerm_policy_assignment
        provider_name: registry.terraform.io/hashicorp/time
        schema_version: 0
        values:
          create_duration: 30s
          destroy_duration: 0s
          triggers:
            azurerm_policy_assignment_enterprise_scale: '["/providers/Microsoft.Management/managementGroups/myorg-2-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-IP-Forwarding","/providers/Microsoft.Management/managementGroups/myorg-2-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Priv-Containers-AKS","/providers/Microsoft.Management/managementGroups/myorg-2-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Priv-Escalation-AKS","/providers/Microsoft.Management/managementGroups/myorg-2-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-RDP-From-Internet","/providers/Microsoft.Management/managementGroups/myorg-2-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Storage-http","/providers/Microsoft.Management/managementGroups/myorg-2-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Subnet-Without-Nsg","/providers/Microsoft.Management/managementGroups/myorg-2-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-http-Ingress-AKS","/providers/Microsoft.Management/managementGroups/myorg-2-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-AKS-Policy","/providers/Microsoft.Management/managementGroups/myorg-2-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-DB-Auditing","/providers/Microsoft.Management/managementGroups/myorg-2-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-Security","/providers/Microsoft.Management/managementGroups/myorg-2-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Backup","/providers/Microsoft.Management/managementGroups/myorg-2-management/providers/Microsoft.Authorization/policyAssignments/Deploy-Log-Analytics","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyAssignments/Deploy-ASC-Defender","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyAssignments/Deploy-ASC-Monitoring","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyAssignments/Deploy-AzActivity-Log","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyAssignments/Deploy-LX-Arc-Monitoring","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyAssignments/Deploy-Resource-Diag","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Monitoring","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyAssignments/Deploy-VMSS-Monitoring","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyAssignments/Deploy-WS-Arc-Monitoring"]'
      - address: module.test_root_id_2.time_sleep.after_azurerm_policy_definition
        mode: managed
        type: time_sleep
        name: after_azurerm_policy_definition
        provider_name: registry.terraform.io/hashicorp/time
        schema_version: 0
        values:
          create_duration: 30s
          destroy_duration: 0s
          triggers:
            azurerm_policy_definition_enterprise_scale: '["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-httpsonly","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-latestTLS","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Append-KV-SoftDelete","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-disableNonSslPort","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-sslEnforcement","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-AA-child-resources","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-AppGW-Without-WAF","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceApiApp-http","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceFunctionApp-http","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceWebApp-http","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-MySql-http","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-PostgreSql-http","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-Private-DNS-Zones","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-Aks","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-CosmosDB","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-KeyVault","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-MariaDB","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-MySQL","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-PostgreSql","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-Sql","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-Storage","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicIP","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-RDP-From-Internet","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-Redis-http","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-Sql-minTLS","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-SqlMi-minTLS","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-Storage-minTLS","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Nsg","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Udr","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-VNET-Peer-Cross-Sub","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deny-VNet-Peering","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-ACR","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-AKS","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-AKV","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-ARM","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-AppSrv","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-DNS","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-SA","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-SQLVM","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-Sql","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-VMs","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-SecurityContacts","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Budget","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-DDoSProtection","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-Blob-PrivateEndpoint","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-File-PrivateEndpoint","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-KeyVault-PrivateEndpoint","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-Queue-PrivateEndpoint","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-Sql-PrivateEndpoint","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-Table-PrivateEndpoint","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AA","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACI","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACR","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AKS","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-APIMgmt","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ActivityLog","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AnalysisService","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApiForFHIR","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApplicationGateway","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Batch","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CDNEndpoints","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CognitiveServices","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CosmosDB","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DLAnalytics","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataExplorerCluster","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataFactory","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataLakeStore","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Databricks","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSub","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSystemTopic","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridTopic","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventHub","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ExpressRoute","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Firewall","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-FrontDoor","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Function","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-HDInsight","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-KeyVault","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LoadBalancer","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogicAppsISE","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogicAppsWF","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MariaDB","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MediaService","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MlWorkspace","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MySQL","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NIC","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NetworkSecurityGroups","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PostgreSQL","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PowerBIEmbedded","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-RecoveryVault","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-RedisCache","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Relay","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLDBs","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLElasticPools","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLMI","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SearchServices","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ServiceBus","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SignalR","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-StreamAnalytics","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TimeSeriesInsights","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TrafficManager","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VM","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VMSS","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VNetGW","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VirtualNetwork","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDAppGroup","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDHostPools","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDWorkspace","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WebServerFarm","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Website","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-iotHub","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-FirewallPolicy","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-HUB","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-LA-Config","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Log-Analytics","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-MySQL-sslEnforcement","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs-to-LA","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-PostgreSQL-sslEnforcement","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-SQL-minTLS","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-AuditingSettings","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-SecurityAlertPolicies","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-Tde","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-vulnerabilityAssessments","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-SqlMi-minTLS","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Storage-sslEnforcement","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-VNET-HubSpoke","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-Windows-DomainJoin","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-vHUB","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-vNet","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policyDefinitions/Deploy-vWAN"]'
      - address: module.test_root_id_2.time_sleep.after_azurerm_policy_set_definition
        mode: managed
        type: time_sleep
        name: after_azurerm_policy_set_definition
        provider_name: registry.terraform.io/hashicorp/time
        schema_version: 0
        values:
          create_duration: 30s
          destroy_duration: 0s
          triggers:
            azurerm_policy_set_definition_enterprise_scale: '["/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policySetDefinitions/Deny-PublicEndpoints","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policySetDefinitions/Deploy-ASC-Config","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Diag-LogAnalytics","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Sql-Security","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policySetDefinitions/Enforce-EncryptTransit","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Encryption-CMK"]'
      - address: module.test_root_id_2.time_sleep.after_azurerm_role_assignment
        mode: managed
        type: time_sleep
        name: after_azurerm_role_assignment
        provider_name: registry.terraform.io/hashicorp/time
        schema_version: 0
        values:
          create_duration: 0s
          destroy_duration: 0s
          triggers:
            azurerm_policy_assignment_enterprise_scale: '["/providers/Microsoft.Management/managementGroups/myorg-2-landing-zones/providers/Microsoft.Authorization/roleAssignments/25d2af11-9027-566d-aac6-6b9b83afcedd","/providers/Microsoft.Management/managementGroups/myorg-2-landing-zones/providers/Microsoft.Authorization/roleAssignments/95296bc2-678d-51db-9118-1d5b41e6a65a","/providers/Microsoft.Management/managementGroups/myorg-2-landing-zones/providers/Microsoft.Authorization/roleAssignments/e1f9acb5-5367-5c63-b68b-1e8b79d4e7a5","/providers/Microsoft.Management/managementGroups/myorg-2-landing-zones/providers/Microsoft.Authorization/roleAssignments/e9c5aa1c-9e29-5084-98e3-a08d472b94f0","/providers/Microsoft.Management/managementGroups/myorg-2-management/providers/Microsoft.Authorization/roleAssignments/6122e74b-61f8-5944-95d0-702283ff1503","/providers/Microsoft.Management/managementGroups/myorg-2-management/providers/Microsoft.Authorization/roleAssignments/fefe21f5-9018-5763-b25a-e8fbfc33329a","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/roleAssignments/0d0267ad-c7fe-5a3d-a799-df8cffb2c579","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/roleAssignments/383a782a-c588-5543-bdb2-7d28cd4377df","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/roleAssignments/38a9943f-76c3-5bbd-8141-a205a96ca85a","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/roleAssignments/516a3e3e-7fe8-5546-9b52-2ee232ed4a0a","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/roleAssignments/5d789d1a-f277-5136-835f-6aeb500021b4","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/roleAssignments/b80c41c8-0497-5258-b4c0-e410d95519b6","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/roleAssignments/ba4cde66-014d-50bf-8c9e-21b028fec75d","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/roleAssignments/c47d0684-7166-5638-8ccb-588b0237c55f","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/roleAssignments/d594c06c-1ea2-5f16-8b1c-553166952e00","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/roleAssignments/dbb9bb90-a31d-5e28-941e-9a2891cd3bee","/providers/Microsoft.Management/managementGroups/myorg-2/providers/Microsoft.Authorization/roleAssignments/e90bc8de-7ada-5a67-b576-42f54d9442f9"]'
      - address: module.test_root_id_2.time_sleep.after_azurerm_role_definition
        mode: managed
        type: time_sleep
        name: after_azurerm_role_definition
        provider_name: registry.terraform.io/hashicorp/time
        schema_version: 0
        values:
          create_duration: 60s
          destroy_duration: 0s
          triggers:
            azurerm_role_definition_enterprise_scale: '["/providers/Microsoft.Authorization/roleDefinitions/73d45bb3-4d05-5e9f-a577-ba891ad6a48b"]'
    address: module.test_root_id_2
  - resources:
      - address: module.test_root_id_3.azurerm_automation_account.enterprise_scale["/subscriptions/b472fb3a-8b1f-4494-bfdb-5f2f380d04f8/resourceGroups/myorg-3-mgmt/providers/Microsoft.Automation/automationAccounts/myorg-3-automation"]
        mode: managed
        type: azurerm_automation_account
        name: enterprise_scale
        index: /subscriptions/b472fb3a-8b1f-4494-bfdb-5f2f380d04f8/resourceGroups/myorg-3-mgmt/providers/Microsoft.Automation/automationAccounts/myorg-3-automation
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          location: uksouth
          name: myorg-3-automation
          resource_group_name: myorg-3-mgmt
          sku_name: Basic
          tags:
            deployedBy: terraform/azure/caf-enterprise-scale
          timeouts: null
      - address: module.test_root_id_3.azurerm_log_analytics_linked_service.enterprise_scale["/subscriptions/b472fb3a-8b1f-4494-bfdb-5f2f380d04f8/resourceGroups/myorg-3-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-3-la/linkedServices/Automation"]
        mode: managed
        type: azurerm_log_analytics_linked_service
        name: enterprise_scale
        index: /subscriptions/b472fb3a-8b1f-4494-bfdb-5f2f380d04f8/resourceGroups/myorg-3-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-3-la/linkedServices/Automation
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          read_access_id: /subscriptions/b472fb3a-8b1f-4494-bfdb-5f2f380d04f8/resourceGroups/myorg-3-mgmt/providers/Microsoft.Automation/automationAccounts/myorg-3-automation
          resource_group_name: myorg-3-mgmt
          tags: null
          timeouts: null
          workspace_id: /subscriptions/b472fb3a-8b1f-4494-bfdb-5f2f380d04f8/resourceGroups/myorg-3-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-3-la
          write_access_id: null
      - address: module.test_root_id_3.azurerm_log_analytics_solution.enterprise_scale["/subscriptions/b472fb3a-8b1f-4494-bfdb-5f2f380d04f8/resourceGroups/myorg-3-mgmt/providers/Microsoft.OperationsManagement/solutions/AgentHealthAssessment(myorg-3-la)"]
        mode: managed
        type: azurerm_log_analytics_solution
        name: enterprise_scale
        index: /subscriptions/b472fb3a-8b1f-4494-bfdb-5f2f380d04f8/resourceGroups/myorg-3-mgmt/providers/Microsoft.OperationsManagement/solutions/AgentHealthAssessment(myorg-3-la)
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          location: uksouth
          plan:
            - product: OMSGallery/AgentHealthAssessment
              promotion_code: null
              publisher: Microsoft
          resource_group_name: myorg-3-mgmt
          solution_name: AgentHealthAssessment
          tags:
            deployedBy: terraform/azure/caf-enterprise-scale
          timeouts: null
          workspace_name: myorg-3-la
          workspace_resource_id: /subscriptions/b472fb3a-8b1f-4494-bfdb-5f2f380d04f8/resourceGroups/myorg-3-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-3-la
      - address: module.test_root_id_3.azurerm_log_analytics_solution.enterprise_scale["/subscriptions/b472fb3a-8b1f-4494-bfdb-5f2f380d04f8/resourceGroups/myorg-3-mgmt/providers/Microsoft.OperationsManagement/solutions/AzureActivity(myorg-3-la)"]
        mode: managed
        type: azurerm_log_analytics_solution
        name: enterprise_scale
        index: /subscriptions/b472fb3a-8b1f-4494-bfdb-5f2f380d04f8/resourceGroups/myorg-3-mgmt/providers/Microsoft.OperationsManagement/solutions/AzureActivity(myorg-3-la)
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          location: uksouth
          plan:
            - product: OMSGallery/AzureActivity
              promotion_code: null
              publisher: Microsoft
          resource_group_name: myorg-3-mgmt
          solution_name: AzureActivity
          tags:
            deployedBy: terraform/azure/caf-enterprise-scale
          timeouts: null
          workspace_name: myorg-3-la
          workspace_resource_id: /subscriptions/b472fb3a-8b1f-4494-bfdb-5f2f380d04f8/resourceGroups/myorg-3-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-3-la
      - address: module.test_root_id_3.azurerm_log_analytics_solution.enterprise_scale["/subscriptions/b472fb3a-8b1f-4494-bfdb-5f2f380d04f8/resourceGroups/myorg-3-mgmt/providers/Microsoft.OperationsManagement/solutions/ChangeTracking(myorg-3-la)"]
        mode: managed
        type: azurerm_log_analytics_solution
        name: enterprise_scale
        index: /subscriptions/b472fb3a-8b1f-4494-bfdb-5f2f380d04f8/resourceGroups/myorg-3-mgmt/providers/Microsoft.OperationsManagement/solutions/ChangeTracking(myorg-3-la)
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          location: uksouth
          plan:
            - product: OMSGallery/ChangeTracking
              promotion_code: null
              publisher: Microsoft
          resource_group_name: myorg-3-mgmt
          solution_name: ChangeTracking
          tags:
            deployedBy: terraform/azure/caf-enterprise-scale
          timeouts: null
          workspace_name: myorg-3-la
          workspace_resource_id: /subscriptions/b472fb3a-8b1f-4494-bfdb-5f2f380d04f8/resourceGroups/myorg-3-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-3-la
      - address: module.test_root_id_3.azurerm_log_analytics_solution.enterprise_scale["/subscriptions/b472fb3a-8b1f-4494-bfdb-5f2f380d04f8/resourceGroups/myorg-3-mgmt/providers/Microsoft.OperationsManagement/solutions/ServiceMap(myorg-3-la)"]
        mode: managed
        type: azurerm_log_analytics_solution
        name: enterprise_scale
        index: /subscriptions/b472fb3a-8b1f-4494-bfdb-5f2f380d04f8/resourceGroups/myorg-3-mgmt/providers/Microsoft.OperationsManagement/solutions/ServiceMap(myorg-3-la)
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          location: uksouth
          plan:
            - product: OMSGallery/ServiceMap
              promotion_code: null
              publisher: Microsoft
          resource_group_name: myorg-3-mgmt
          solution_name: ServiceMap
          tags:
            deployedBy: terraform/azure/caf-enterprise-scale
          timeouts: null
          workspace_name: myorg-3-la
          workspace_resource_id: /subscriptions/b472fb3a-8b1f-4494-bfdb-5f2f380d04f8/resourceGroups/myorg-3-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-3-la
      - address: module.test_root_id_3.azurerm_log_analytics_solution.enterprise_scale["/subscriptions/b472fb3a-8b1f-4494-bfdb-5f2f380d04f8/resourceGroups/myorg-3-mgmt/providers/Microsoft.OperationsManagement/solutions/Updates(myorg-3-la)"]
        mode: managed
        type: azurerm_log_analytics_solution
        name: enterprise_scale
        index: /subscriptions/b472fb3a-8b1f-4494-bfdb-5f2f380d04f8/resourceGroups/myorg-3-mgmt/providers/Microsoft.OperationsManagement/solutions/Updates(myorg-3-la)
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          location: uksouth
          plan:
            - product: OMSGallery/Updates
              promotion_code: null
              publisher: Microsoft
          resource_group_name: myorg-3-mgmt
          solution_name: Updates
          tags:
            deployedBy: terraform/azure/caf-enterprise-scale
          timeouts: null
          workspace_name: myorg-3-la
          workspace_resource_id: /subscriptions/b472fb3a-8b1f-4494-bfdb-5f2f380d04f8/resourceGroups/myorg-3-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-3-la
      - address: module.test_root_id_3.azurerm_log_analytics_solution.enterprise_scale["/subscriptions/b472fb3a-8b1f-4494-bfdb-5f2f380d04f8/resourceGroups/myorg-3-mgmt/providers/Microsoft.OperationsManagement/solutions/VMInsights(myorg-3-la)"]
        mode: managed
        type: azurerm_log_analytics_solution
        name: enterprise_scale
        index: /subscriptions/b472fb3a-8b1f-4494-bfdb-5f2f380d04f8/resourceGroups/myorg-3-mgmt/providers/Microsoft.OperationsManagement/solutions/VMInsights(myorg-3-la)
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          location: uksouth
          plan:
            - product: OMSGallery/VMInsights
              promotion_code: null
              publisher: Microsoft
          resource_group_name: myorg-3-mgmt
          solution_name: VMInsights
          tags:
            deployedBy: terraform/azure/caf-enterprise-scale
          timeouts: null
          workspace_name: myorg-3-la
          workspace_resource_id: /subscriptions/b472fb3a-8b1f-4494-bfdb-5f2f380d04f8/resourceGroups/myorg-3-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-3-la
      - address: module.test_root_id_3.azurerm_log_analytics_workspace.enterprise_scale["/subscriptions/b472fb3a-8b1f-4494-bfdb-5f2f380d04f8/resourceGroups/myorg-3-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-3-la"]
        mode: managed
        type: azurerm_log_analytics_workspace
        name: enterprise_scale
        index: /subscriptions/b472fb3a-8b1f-4494-bfdb-5f2f380d04f8/resourceGroups/myorg-3-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-3-la
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 2
        values:
          daily_quota_gb: -1
          internet_ingestion_enabled: true
          internet_query_enabled: true
          location: uksouth
          name: myorg-3-la
          reservation_capcity_in_gb_per_day: null
          resource_group_name: myorg-3-mgmt
          retention_in_days: 60
          sku: PerGB2018
          tags:
            deployedBy: terraform/azure/caf-enterprise-scale
          timeouts: null
      - address: module.test_root_id_3.azurerm_management_group.level_1["/providers/Microsoft.Management/managementGroups/myorg-3"]
        mode: managed
        type: azurerm_management_group
        name: level_1
        index: /providers/Microsoft.Management/managementGroups/myorg-3
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          display_name: My Organization-3
          name: myorg-3
          parent_management_group_id: /providers/Microsoft.Management/managementGroups/dac8feee-8768-4fbd-9cf9-9d96d4718018
          timeouts: null
      - address: module.test_root_id_3.azurerm_management_group.level_2["/providers/Microsoft.Management/managementGroups/myorg-3-decommissioned"]
        mode: managed
        type: azurerm_management_group
        name: level_2
        index: /providers/Microsoft.Management/managementGroups/myorg-3-decommissioned
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          display_name: Decommissioned
          name: myorg-3-decommissioned
          parent_management_group_id: /providers/Microsoft.Management/managementGroups/myorg-3
          timeouts: null
      - address: module.test_root_id_3.azurerm_management_group.level_2["/providers/Microsoft.Management/managementGroups/myorg-3-landing-zones"]
        mode: managed
        type: azurerm_management_group
        name: level_2
        index: /providers/Microsoft.Management/managementGroups/myorg-3-landing-zones
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          display_name: Landing Zones
          name: myorg-3-landing-zones
          parent_management_group_id: /providers/Microsoft.Management/managementGroups/myorg-3
          timeouts: null
      - address: module.test_root_id_3.azurerm_management_group.level_2["/providers/Microsoft.Management/managementGroups/myorg-3-platform"]
        mode: managed
        type: azurerm_management_group
        name: level_2
        index: /providers/Microsoft.Management/managementGroups/myorg-3-platform
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          display_name: Platform
          name: myorg-3-platform
          parent_management_group_id: /providers/Microsoft.Management/managementGroups/myorg-3
          timeouts: null
      - address: module.test_root_id_3.azurerm_management_group.level_2["/providers/Microsoft.Management/managementGroups/myorg-3-sandboxes"]
        mode: managed
        type: azurerm_management_group
        name: level_2
        index: /providers/Microsoft.Management/managementGroups/myorg-3-sandboxes
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          display_name: Sandboxes
          name: myorg-3-sandboxes
          parent_management_group_id: /providers/Microsoft.Management/managementGroups/myorg-3
          timeouts: null
      - address: module.test_root_id_3.azurerm_management_group.level_3["/providers/Microsoft.Management/managementGroups/myorg-3-connectivity"]
        mode: managed
        type: azurerm_management_group
        name: level_3
        index: /providers/Microsoft.Management/managementGroups/myorg-3-connectivity
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          display_name: Connectivity
          name: myorg-3-connectivity
          parent_management_group_id: /providers/Microsoft.Management/managementGroups/myorg-3-platform
          timeouts: null
      - address: module.test_root_id_3.azurerm_management_group.level_3["/providers/Microsoft.Management/managementGroups/myorg-3-customer-corp"]
        mode: managed
        type: azurerm_management_group
        name: level_3
        index: /providers/Microsoft.Management/managementGroups/myorg-3-customer-corp
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          display_name: Corp Custom
          name: myorg-3-customer-corp
          parent_management_group_id: /providers/Microsoft.Management/managementGroups/myorg-3-landing-zones
          timeouts: null
      - address: module.test_root_id_3.azurerm_management_group.level_3["/providers/Microsoft.Management/managementGroups/myorg-3-customer-online"]
        mode: managed
        type: azurerm_management_group
        name: level_3
        index: /providers/Microsoft.Management/managementGroups/myorg-3-customer-online
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          display_name: Online
          name: myorg-3-customer-online
          parent_management_group_id: /providers/Microsoft.Management/managementGroups/myorg-3-landing-zones
          timeouts: null
      - address: module.test_root_id_3.azurerm_management_group.level_3["/providers/Microsoft.Management/managementGroups/myorg-3-customer-sap"]
        mode: managed
        type: azurerm_management_group
        name: level_3
        index: /providers/Microsoft.Management/managementGroups/myorg-3-customer-sap
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          display_name: SAP
          name: myorg-3-customer-sap
          parent_management_group_id: /providers/Microsoft.Management/managementGroups/myorg-3-landing-zones
          timeouts: null
      - address: module.test_root_id_3.azurerm_management_group.level_3["/providers/Microsoft.Management/managementGroups/myorg-3-identity"]
        mode: managed
        type: azurerm_management_group
        name: level_3
        index: /providers/Microsoft.Management/managementGroups/myorg-3-identity
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          display_name: Identity
          name: myorg-3-identity
          parent_management_group_id: /providers/Microsoft.Management/managementGroups/myorg-3-platform
          timeouts: null
      - address: module.test_root_id_3.azurerm_management_group.level_3["/providers/Microsoft.Management/managementGroups/myorg-3-management"]
        mode: managed
        type: azurerm_management_group
        name: level_3
        index: /providers/Microsoft.Management/managementGroups/myorg-3-management
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          display_name: Management
          name: myorg-3-management
          parent_management_group_id: /providers/Microsoft.Management/managementGroups/myorg-3-platform
          subscription_ids:
            - b472fb3a-8b1f-4494-bfdb-5f2f380d04f8
          timeouts: null
      - address: module.test_root_id_3.azurerm_management_group.level_4["/providers/Microsoft.Management/managementGroups/myorg-3-customer-web-dev"]
        mode: managed
        type: azurerm_management_group
        name: level_4
        index: /providers/Microsoft.Management/managementGroups/myorg-3-customer-web-dev
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          display_name: Dev Web Applications
          name: myorg-3-customer-web-dev
          parent_management_group_id: /providers/Microsoft.Management/managementGroups/myorg-3-customer-online
          timeouts: null
      - address: module.test_root_id_3.azurerm_management_group.level_4["/providers/Microsoft.Management/managementGroups/myorg-3-customer-web-prod"]
        mode: managed
        type: azurerm_management_group
        name: level_4
        index: /providers/Microsoft.Management/managementGroups/myorg-3-customer-web-prod
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          display_name: Prod Web Applications
          name: myorg-3-customer-web-prod
          parent_management_group_id: /providers/Microsoft.Management/managementGroups/myorg-3-customer-online
          timeouts: null
      - address: module.test_root_id_3.azurerm_management_group.level_4["/providers/Microsoft.Management/managementGroups/myorg-3-customer-web-test"]
        mode: managed
        type: azurerm_management_group
        name: level_4
        index: /providers/Microsoft.Management/managementGroups/myorg-3-customer-web-test
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          display_name: Test Web Applications
          name: myorg-3-customer-web-test
          parent_management_group_id: /providers/Microsoft.Management/managementGroups/myorg-3-customer-online
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3-customer-online/providers/Microsoft.Authorization/policyAssignments/Deny-RSG-Locations"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3-customer-online/providers/Microsoft.Authorization/policyAssignments/Deny-RSG-Locations
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Specifies the allowed locations (regions) where Resource Groups can be deployed.
          display_name: Limit allowed locations for Resource Groups
          enforcement_mode: true
          identity:
            - type: None
          location: uksouth
          name: Deny-RSG-Locations
          not_scopes: []
          parameters: '{"listOfAllowedLocations":{"value":["eastus","westus","uksouth","ukwest"]}}'
          policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/e765b5de-1225-4ba3-bd56-1ac6695af988
          scope: /providers/Microsoft.Management/managementGroups/myorg-3-customer-online
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3-customer-online/providers/Microsoft.Authorization/policyAssignments/Deny-Resource-Locations"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3-customer-online/providers/Microsoft.Authorization/policyAssignments/Deny-Resource-Locations
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Specifies the allowed locations (regions) where Resources can be deployed.
          display_name: Limit allowed locations for Resources
          enforcement_mode: true
          identity:
            - type: None
          location: uksouth
          name: Deny-Resource-Locations
          not_scopes: []
          parameters: '{"listOfAllowedLocations":{"value":["eastus","westus","uksouth","ukwest"]}}'
          policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/e56962a6-4747-49cd-b67b-bf8b01975c4c
          scope: /providers/Microsoft.Management/managementGroups/myorg-3-customer-online
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3-customer-sap/providers/Microsoft.Authorization/policyAssignments/Deny-RSG-Locations"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3-customer-sap/providers/Microsoft.Authorization/policyAssignments/Deny-RSG-Locations
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Specifies the allowed locations (regions) where Resource Groups can be deployed.
          display_name: Limit allowed locations for Resource Groups
          enforcement_mode: true
          identity:
            - type: None
          location: uksouth
          name: Deny-RSG-Locations
          not_scopes: []
          parameters: '{"listOfAllowedLocations":{"value":["eastus","westus"]}}'
          policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/e765b5de-1225-4ba3-bd56-1ac6695af988
          scope: /providers/Microsoft.Management/managementGroups/myorg-3-customer-sap
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3-customer-sap/providers/Microsoft.Authorization/policyAssignments/Deny-Resource-Locations"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3-customer-sap/providers/Microsoft.Authorization/policyAssignments/Deny-Resource-Locations
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Specifies the allowed locations (regions) where Resources can be deployed.
          display_name: Limit allowed locations for Resources
          enforcement_mode: true
          identity:
            - type: None
          location: uksouth
          name: Deny-Resource-Locations
          not_scopes: []
          parameters: '{"listOfAllowedLocations":{"value":["eastus","westus"]}}'
          policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/e56962a6-4747-49cd-b67b-bf8b01975c4c
          scope: /providers/Microsoft.Management/managementGroups/myorg-3-customer-sap
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3-customer-sap/providers/Microsoft.Authorization/policyAssignments/Deploy-HITRUST-HIPAA"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3-customer-sap/providers/Microsoft.Authorization/policyAssignments/Deploy-HITRUST-HIPAA
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This assignment includes audit and virtual machine extension deployment policies that address a subset of HITRUST/HIPAA controls. Additional policies will be added in upcoming releases. For more information, visit https://aka.ms/hipaa-blueprint.
          display_name: Assign policies for HITRUST and HIPAA controls
          enforcement_mode: true
          identity:
            - type: SystemAssigned
          location: uksouth
          name: Deploy-HITRUST-HIPAA
          not_scopes: []
          parameters: '{"CertificateThumbprints":{"value":""},"DeployDiagnosticSettingsforNetworkSecurityGroupsrgName":{"value":"myorg-3-rg"},"DeployDiagnosticSettingsforNetworkSecurityGroupsstoragePrefix":{"value":"myorg-3"},"installedApplicationsOnWindowsVM":{"value":""},"listOfLocations":{"value":["eastus"]}}'
          policy_definition_id: /providers/Microsoft.Authorization/policySetDefinitions/a169a624-5599-4385-a696-c8d643089fab
          scope: /providers/Microsoft.Management/managementGroups/myorg-3-customer-sap
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3-customer-web-dev/providers/Microsoft.Authorization/policyAssignments/Deny-RSG-Locations"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3-customer-web-dev/providers/Microsoft.Authorization/policyAssignments/Deny-RSG-Locations
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Specifies the allowed locations (regions) where Resource Groups can be deployed.
          display_name: Limit allowed locations for Resource Groups
          enforcement_mode: true
          identity:
            - type: None
          location: uksouth
          name: Deny-RSG-Locations
          not_scopes: []
          parameters: '{"listOfAllowedLocations":{"value":["eastus"]}}'
          policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/e765b5de-1225-4ba3-bd56-1ac6695af988
          scope: /providers/Microsoft.Management/managementGroups/myorg-3-customer-web-dev
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3-customer-web-dev/providers/Microsoft.Authorization/policyAssignments/Deny-Resource-Locations"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3-customer-web-dev/providers/Microsoft.Authorization/policyAssignments/Deny-Resource-Locations
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Specifies the allowed locations (regions) where Resources can be deployed.
          display_name: Limit allowed locations for Resources
          enforcement_mode: true
          identity:
            - type: None
          location: uksouth
          name: Deny-Resource-Locations
          not_scopes: []
          parameters: '{"listOfAllowedLocations":{"value":["eastus"]}}'
          policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/e56962a6-4747-49cd-b67b-bf8b01975c4c
          scope: /providers/Microsoft.Management/managementGroups/myorg-3-customer-web-dev
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3-customer-web-test/providers/Microsoft.Authorization/policyAssignments/Deny-RSG-Locations"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3-customer-web-test/providers/Microsoft.Authorization/policyAssignments/Deny-RSG-Locations
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Specifies the allowed locations (regions) where Resource Groups can be deployed.
          display_name: Limit allowed locations for Resource Groups
          enforcement_mode: true
          identity:
            - type: None
          location: uksouth
          name: Deny-RSG-Locations
          not_scopes: []
          parameters: '{"listOfAllowedLocations":{"value":["eastus","westus"]}}'
          policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/e765b5de-1225-4ba3-bd56-1ac6695af988
          scope: /providers/Microsoft.Management/managementGroups/myorg-3-customer-web-test
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3-customer-web-test/providers/Microsoft.Authorization/policyAssignments/Deny-Resource-Locations"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3-customer-web-test/providers/Microsoft.Authorization/policyAssignments/Deny-Resource-Locations
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Specifies the allowed locations (regions) where Resources can be deployed.
          display_name: Limit allowed locations for Resources
          enforcement_mode: true
          identity:
            - type: None
          location: uksouth
          name: Deny-Resource-Locations
          not_scopes: []
          parameters: '{"listOfAllowedLocations":{"value":["eastus","westus"]}}'
          policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/e56962a6-4747-49cd-b67b-bf8b01975c4c
          scope: /providers/Microsoft.Management/managementGroups/myorg-3-customer-web-test
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-IP-Forwarding"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-IP-Forwarding
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Network interfaces should disable IP forwarding.
          display_name: Deny-IP-Forwarding
          enforcement_mode: true
          identity:
            - type: None
          location: uksouth
          name: Deny-IP-Forwarding
          not_scopes: []
          parameters: null
          policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/88c0b9da-ce96-4b03-9635-f29a937e2900
          scope: /providers/Microsoft.Management/managementGroups/myorg-3-landing-zones
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Priv-Containers-AKS"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Priv-Containers-AKS
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deny-Privileged-Containers-AKS.
          display_name: Deny-Privileged-Containers-AKS
          enforcement_mode: true
          identity:
            - type: None
          location: uksouth
          name: Deny-Priv-Containers-AKS
          not_scopes: []
          parameters: '{"effect":{"value":"deny"}}'
          policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/95edb821-ddaf-4404-9732-666045e056b4
          scope: /providers/Microsoft.Management/managementGroups/myorg-3-landing-zones
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Priv-Escalation-AKS"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Priv-Escalation-AKS
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deny-Privileged-Escalations-AKS.
          display_name: Deny-Privileged-Escalations-AKS
          enforcement_mode: true
          identity:
            - type: None
          location: uksouth
          name: Deny-Priv-Escalation-AKS
          not_scopes: []
          parameters: '{"effect":{"value":"deny"}}'
          policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/1c6e92c9-99f0-4e55-9cf2-0c234dc48f99
          scope: /providers/Microsoft.Management/managementGroups/myorg-3-landing-zones
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-RDP-From-Internet"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-RDP-From-Internet
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deny RDP access from the Internet.
          display_name: Deny-RDP-From-Internet
          enforcement_mode: true
          identity:
            - type: None
          location: uksouth
          name: Deny-RDP-From-Internet
          not_scopes: []
          parameters: null
          policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-RDP-From-Internet
          scope: /providers/Microsoft.Management/managementGroups/myorg-3-landing-zones
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Storage-http"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Storage-http
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Enforce-Secure-Storage.
          display_name: Enforce-Secure-Storage
          enforcement_mode: true
          identity:
            - type: None
          location: uksouth
          name: Deny-Storage-http
          not_scopes: []
          parameters: null
          policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/404c3081-a854-4457-ae30-26a93ef643f9
          scope: /providers/Microsoft.Management/managementGroups/myorg-3-landing-zones
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Subnet-Without-Nsg"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Subnet-Without-Nsg
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deny provisioning of subnet without NSG attached.
          display_name: Deny-Subnet-Without-Nsg
          enforcement_mode: true
          identity:
            - type: None
          location: uksouth
          name: Deny-Subnet-Without-Nsg
          not_scopes: []
          parameters: null
          policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Nsg
          scope: /providers/Microsoft.Management/managementGroups/myorg-3-landing-zones
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-http-Ingress-AKS"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-http-Ingress-AKS
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Enforce-Https-Ingress-AKS.
          display_name: Enforce-Https-Ingress-AKS
          enforcement_mode: true
          identity:
            - type: None
          location: uksouth
          name: Deny-http-Ingress-AKS
          not_scopes: []
          parameters: '{"effect":{"value":"deny"}}'
          policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/1a5b4dca-0b6f-4cf5-907c-56316bc1bf3d
          scope: /providers/Microsoft.Management/managementGroups/myorg-3-landing-zones
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-AKS-Policy"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-AKS-Policy
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy-AKS-Policy.
          display_name: Deploy-AKS-Policy
          enforcement_mode: true
          identity:
            - type: SystemAssigned
          location: uksouth
          name: Deploy-AKS-Policy
          not_scopes: []
          parameters: null
          policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/a8eff44f-8c92-45c3-a3fb-9880802d67a7
          scope: /providers/Microsoft.Management/managementGroups/myorg-3-landing-zones
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-DB-Auditing"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-DB-Auditing
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy-SQL-Audit.
          display_name: Deploy-SQL-Audit
          enforcement_mode: true
          identity:
            - type: SystemAssigned
          location: uksouth
          name: Deploy-SQL-DB-Auditing
          not_scopes: []
          parameters: null
          policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/a6fb4358-5bf4-4ad7-ba82-2cd2f41ce5e9
          scope: /providers/Microsoft.Management/managementGroups/myorg-3-landing-zones
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-Security"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-Security
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy-SQL-Security.
          display_name: Deploy-SQL-Security
          enforcement_mode: true
          identity:
            - type: SystemAssigned
          location: uksouth
          name: Deploy-SQL-Security
          not_scopes: []
          parameters: null
          policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/86a912f6-9a06-4e26-b447-11b16ba8659f
          scope: /providers/Microsoft.Management/managementGroups/myorg-3-landing-zones
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Backup"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Backup
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Ensures that Azure Backup is configured for Virtual Machines.
          display_name: Deploy-VM-Backup
          enforcement_mode: true
          identity:
            - type: SystemAssigned
          location: uksouth
          name: Deploy-VM-Backup
          not_scopes: []
          parameters: null
          policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/98d0b9f8-fd90-49c9-88e2-d3baf3b0dd86
          scope: /providers/Microsoft.Management/managementGroups/myorg-3-landing-zones
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3-management/providers/Microsoft.Authorization/policyAssignments/Deploy-Log-Analytics"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3-management/providers/Microsoft.Authorization/policyAssignments/Deploy-Log-Analytics
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy-Log-Analytics.
          display_name: Deploy-Log-Analytics
          enforcement_mode: true
          identity:
            - type: SystemAssigned
          location: uksouth
          name: Deploy-Log-Analytics
          not_scopes: []
          parameters: '{"automationAccountName":{"value":"myorg-3-automation"},"automationRegion":{"value":"uksouth"},"effect":{"value":"DeployIfNotExists"},"retentionInDays":{"value":"60"},"rgName":{"value":"myorg-3-mgmt"},"workspaceName":{"value":"myorg-3-la"},"workspaceRegion":{"value":"uksouth"}}'
          policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Log-Analytics
          scope: /providers/Microsoft.Management/managementGroups/myorg-3-management
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyAssignments/Deny-RSG-Locations"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyAssignments/Deny-RSG-Locations
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Specifies the allowed locations (regions) where Resource Groups can be deployed.
          display_name: Limit allowed locations for Resource Groups
          enforcement_mode: true
          identity:
            - type: None
          location: uksouth
          name: Deny-RSG-Locations
          not_scopes: []
          parameters: '{"listOfAllowedLocations":{"value":["eastus","eastus2","westus","northcentralus","southcentralus","uksouth","ukwest"]}}'
          policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/e765b5de-1225-4ba3-bd56-1ac6695af988
          scope: /providers/Microsoft.Management/managementGroups/myorg-3
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyAssignments/Deny-Resource-Locations"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyAssignments/Deny-Resource-Locations
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Specifies the allowed locations (regions) where Resources can be deployed.
          display_name: Limit allowed locations for Resources
          enforcement_mode: true
          identity:
            - type: None
          location: uksouth
          name: Deny-Resource-Locations
          not_scopes: []
          parameters: '{"listOfAllowedLocations":{"value":["eastus","eastus2","westus","northcentralus","southcentralus","uksouth","ukwest"]}}'
          policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/e56962a6-4747-49cd-b67b-bf8b01975c4c
          scope: /providers/Microsoft.Management/managementGroups/myorg-3
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyAssignments/Deploy-ASC-Defender"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyAssignments/Deploy-ASC-Defender
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy-ASC-Defender.
          display_name: Deploy-ASC-Defender
          enforcement_mode: true
          identity:
            - type: SystemAssigned
          location: uksouth
          name: Deploy-ASC-Defender
          not_scopes: []
          parameters: '{"ascExportResourceGroupLocation":{"value":"uksouth"},"ascExportResourceGroupName":{"value":"myorg-3-asc-export"},"emailSecurityContact":{"value":"test.user@replace_me"},"logAnalytics":{"value":"/subscriptions/b472fb3a-8b1f-4494-bfdb-5f2f380d04f8/resourceGroups/myorg-3-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-3-la"},"pricingTierAppServices":{"value":"Standard"},"pricingTierArm":{"value":"Standard"},"pricingTierContainerRegistry":{"value":"Standard"},"pricingTierDns":{"value":"Standard"},"pricingTierKeyVaults":{"value":"Standard"},"pricingTierKubernetesService":{"value":"Standard"},"pricingTierSqlServerVirtualMachines":{"value":"Standard"},"pricingTierSqlServers":{"value":"Standard"},"pricingTierStorageAccounts":{"value":"Standard"},"pricingTierVMs":{"value":"Standard"}}'
          policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policySetDefinitions/Deploy-ASC-Config
          scope: /providers/Microsoft.Management/managementGroups/myorg-3
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyAssignments/Deploy-ASC-Monitoring"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyAssignments/Deploy-ASC-Monitoring
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Enable Monitoring in Azure Security Center.
          display_name: Enable Monitoring in Azure Security Center
          enforcement_mode: true
          identity:
            - type: None
          location: uksouth
          name: Deploy-ASC-Monitoring
          not_scopes: []
          parameters: '{"aadAuthenticationInSqlServerMonitoringEffect":{"value":"Disabled"},"diskEncryptionMonitoringEffect":{"value":"Disabled"},"encryptionOfAutomationAccountMonitoringEffect":{"value":"Disabled"},"identityDesignateLessThanOwnersMonitoringEffect":{"value":"Disabled"},"identityDesignateMoreThanOneOwnerMonitoringEffect":{"value":"Disabled"},"identityEnableMFAForWritePermissionsMonitoringEffect":{"value":"Disabled"},"identityRemoveDeprecatedAccountMonitoringEffect":{"value":"Disabled"},"identityRemoveDeprecatedAccountWithOwnerPermissionsMonitoringEffect":{"value":"Disabled"},"identityRemoveExternalAccountWithOwnerPermissionsMonitoringEffect":{"value":"Disabled"},"identityRemoveExternalAccountWithReadPermissionsMonitoringEffect":{"value":"Disabled"},"identityRemoveExternalAccountWithWritePermissionsMonitoringEffect":{"value":"Disabled"},"jitNetworkAccessMonitoringEffect":{"value":"Disabled"},"networkSecurityGroupsOnSubnetsMonitoringEffect":{"value":"AuditIfNotExists"},"sqlDbEncryptionMonitoringEffect":{"value":"Disabled"},"sqlManagedInstanceAdvancedDataSecurityEmailAdminsMonitoringEffect":{"value":"Disabled"},"sqlManagedInstanceAdvancedDataSecurityEmailsMonitoringEffect":{"value":"Disabled"},"sqlServerAdvancedDataSecurityEmailAdminsMonitoringEffect":{"value":"Disabled"},"sqlServerAdvancedDataSecurityMonitoringEffect":{"value":"Disabled"},"systemUpdatesMonitoringEffect":{"value":"Disabled"},"useRbacRulesMonitoringEffect":{"value":"Disabled"},"vmssSystemUpdatesMonitoringEffect":{"value":"Disabled"},"windowsDefenderExploitGuardMonitoringEffect":{"value":"Disabled"}}'
          policy_definition_id: /providers/Microsoft.Authorization/policySetDefinitions/1f3afdf9-d0c9-4c3d-847f-89da613e70a8
          scope: /providers/Microsoft.Management/managementGroups/myorg-3
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyAssignments/Deploy-AzActivity-Log"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyAssignments/Deploy-AzActivity-Log
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Ensures that Activity Log Diagnostics settings are set to push logs into Log Analytics workspace.
          display_name: Deploy Diagnostic Settings for Activity Log to Log Analytics workspace
          enforcement_mode: true
          identity:
            - type: SystemAssigned
          location: uksouth
          name: Deploy-AzActivity-Log
          not_scopes: []
          parameters: '{"logAnalytics":{"value":"/subscriptions/b472fb3a-8b1f-4494-bfdb-5f2f380d04f8/resourceGroups/myorg-3-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-3-la"}}'
          policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ActivityLog
          scope: /providers/Microsoft.Management/managementGroups/myorg-3
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyAssignments/Deploy-HITRUST-HIPAA"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyAssignments/Deploy-HITRUST-HIPAA
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This assignment includes audit and virtual machine extension deployment policies that address a subset of HITRUST/HIPAA controls. Additional policies will be added in upcoming releases. For more information, visit https://aka.ms/hipaa-blueprint.
          display_name: Assign policies for HITRUST and HIPAA controls
          enforcement_mode: true
          identity:
            - type: SystemAssigned
          location: uksouth
          name: Deploy-HITRUST-HIPAA
          not_scopes: []
          parameters: '{"CertificateThumbprints":{"value":""},"DeployDiagnosticSettingsforNetworkSecurityGroupsrgName":{"value":"myorg-3-rg"},"DeployDiagnosticSettingsforNetworkSecurityGroupsstoragePrefix":{"value":"myorg-3"},"installedApplicationsOnWindowsVM":{"value":""},"listOfLocations":{"value":["eastus"]}}'
          policy_definition_id: /providers/Microsoft.Authorization/policySetDefinitions/a169a624-5599-4385-a696-c8d643089fab
          scope: /providers/Microsoft.Management/managementGroups/myorg-3
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyAssignments/Deploy-LX-Arc-Monitoring"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyAssignments/Deploy-LX-Arc-Monitoring
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy-Linux-Arc-Monitoring.
          display_name: Deploy-Linux-Arc-Monitoring
          enforcement_mode: false
          identity:
            - type: SystemAssigned
          location: uksouth
          name: Deploy-LX-Arc-Monitoring
          not_scopes: []
          parameters: '{"logAnalytics":{"value":"/subscriptions/b472fb3a-8b1f-4494-bfdb-5f2f380d04f8/resourceGroups/myorg-3-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-3-la"}}'
          policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/9d2b61b4-1d14-4a63-be30-d4498e7ad2cf
          scope: /providers/Microsoft.Management/managementGroups/myorg-3
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyAssignments/Deploy-Resource-Diag"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyAssignments/Deploy-Resource-Diag
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Ensures that Azure resources are configured to forward diagnostic logs and metrics to an Azure Log Analytics workspace.
          display_name: Deploy-Resource-Diag
          enforcement_mode: true
          identity:
            - type: SystemAssigned
          location: uksouth
          name: Deploy-Resource-Diag
          not_scopes: []
          parameters: '{"logAnalytics":{"value":"/subscriptions/b472fb3a-8b1f-4494-bfdb-5f2f380d04f8/resourceGroups/myorg-3-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-3-la"}}'
          policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Diag-LogAnalytics
          scope: /providers/Microsoft.Management/managementGroups/myorg-3
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-Auditing"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-Auditing
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy Auditing on SQL servers.
          display_name: Deploy Auditing on SQL servers
          enforcement_mode: true
          identity:
            - type: SystemAssigned
          location: uksouth
          name: Deploy-SQL-Auditing
          not_scopes: []
          parameters: '{"retentionDays":{"value":"10"},"storageAccountsResourceGroup":{"value":""}}'
          policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/f4c68484-132f-41f9-9b6d-3e4b1cb55036
          scope: /providers/Microsoft.Management/managementGroups/myorg-3
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Monitoring"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Monitoring
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Ensures that Azure Monitor is configured for Virtual Machines.
          display_name: Deploy-VM-Monitoring
          enforcement_mode: true
          identity:
            - type: SystemAssigned
          location: uksouth
          name: Deploy-VM-Monitoring
          not_scopes: []
          parameters: '{"logAnalytics_1":{"value":"/subscriptions/b472fb3a-8b1f-4494-bfdb-5f2f380d04f8/resourceGroups/myorg-3-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-3-la"}}'
          policy_definition_id: /providers/Microsoft.Authorization/policySetDefinitions/55f3eceb-5573-4f18-9695-226972c6d74a
          scope: /providers/Microsoft.Management/managementGroups/myorg-3
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyAssignments/Deploy-VMSS-Monitoring"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyAssignments/Deploy-VMSS-Monitoring
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Ensures that Azure Monitor is configured for Virtual Machine Scale Sets.
          display_name: Deploy-VMSS-Monitoring
          enforcement_mode: true
          identity:
            - type: SystemAssigned
          location: uksouth
          name: Deploy-VMSS-Monitoring
          not_scopes: []
          parameters: '{"logAnalytics_1":{"value":"/subscriptions/b472fb3a-8b1f-4494-bfdb-5f2f380d04f8/resourceGroups/myorg-3-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-3-la"}}'
          policy_definition_id: /providers/Microsoft.Authorization/policySetDefinitions/75714362-cae7-409e-9b99-a8e5075b7fad
          scope: /providers/Microsoft.Management/managementGroups/myorg-3
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyAssignments/Deploy-WS-Arc-Monitoring"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyAssignments/Deploy-WS-Arc-Monitoring
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the Log Analytics agent to Windows Azure Arc machines if the agent isn't installed.
          display_name: Deploy-Windows-Arc-Monitoring
          enforcement_mode: false
          identity:
            - type: SystemAssigned
          location: uksouth
          name: Deploy-WS-Arc-Monitoring
          not_scopes: []
          parameters: '{"logAnalytics":{"value":"/subscriptions/b472fb3a-8b1f-4494-bfdb-5f2f380d04f8/resourceGroups/myorg-3-mgmt/providers/Microsoft.OperationalInsights/workspaces/myorg-3-la"}}'
          policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/69af7d4a-7b18-4044-93a9-2651498ef203
          scope: /providers/Microsoft.Management/managementGroups/myorg-3
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-httpsonly"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-httpsonly
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Appends the AppService sites object to ensure that  HTTPS only is enabled for  server/service authentication and protects data in transit from network layer eavesdropping attacks. Please note Append does not enforce compliance use then deny.
          display_name: AppService append enable https only setting to enforce https setting.
          management_group_name: myorg-3
          metadata: '{"category":"App Service","version":"1.0.0"}'
          mode: All
          name: Append-AppService-httpsonly
          parameters: '{"effect":{"allowedValues":["Append","Disabled"],"defaultValue":"Append","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Web/sites","field":"type"},{"field":"Microsoft.Web/sites/httpsOnly","notequals":true}]},"then":{"details":[{"field":"Microsoft.Web/sites/httpsOnly","value":true}],"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-latestTLS"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-latestTLS
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Append the AppService sites object to ensure that min Tls version is set to required minimum TLS version. Please note Append does not enforce compliance use then deny.
          display_name: AppService append sites with minimum TLS version to enforce.
          management_group_name: myorg-3
          metadata: '{"category":"App Service","version":"1.0.0"}'
          mode: Indexed
          name: Append-AppService-latestTLS
          parameters: '{"effect":{"allowedValues":["Append","Disabled"],"defaultValue":"Append","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"minTlsVersion":{"allowedValues":["1.2","1.0","1.1"],"defaultValue":"1.2","metadata":{"description":"Select version  minimum TLS version for a  Web App config to enforce","displayName":"Select version minimum TLS Web App config"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Web/sites/config","field":"type"},{"field":"Microsoft.Web/sites/config/minTlsVersion","notEquals":"[parameters(''minTlsVersion'')]"}]},"then":{"details":[{"field":"Microsoft.Web/sites/config/minTlsVersion","value":"[parameters(''minTlsVersion'')]"}],"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Append-KV-SoftDelete"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Append-KV-SoftDelete
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy enables you to ensure when a Key Vault is created with out soft delete enabled it will be added.
          display_name: KeyVault SoftDelete should be enabled
          management_group_name: myorg-3
          metadata: '{"category":"Key Vault","version":"1.0.0"}'
          mode: Indexed
          name: Append-KV-SoftDelete
          parameters: null
          policy_rule: '{"if":{"anyOf":[{"allOf":[{"equals":"Microsoft.KeyVault/vaults","field":"type"},{"field":"Microsoft.KeyVault/vaults/enableSoftDelete","notEquals":true}]}]},"then":{"details":[{"field":"Microsoft.KeyVault/vaults/enableSoftDelete","value":true}],"effect":"append"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-disableNonSslPort"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-disableNonSslPort
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Azure Cache for Redis Append and the enforcement that enableNonSslPort is disabled. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.
          display_name: Azure Cache for Redis Append and the enforcement that enableNonSslPort is disabled.
          management_group_name: myorg-3
          metadata: '{"category":"Cache","version":"1.0.0"}'
          mode: Indexed
          name: Append-Redis-disableNonSslPort
          parameters: '{"effect":{"allowedValues":["Append","Disabled","Modify"],"defaultValue":"Append","metadata":{"description":"Enable or disable the execution of the policy minimum TLS version Azure Cache for Redis","displayName":"Effect Azure Cache for Redis"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Cache/redis","field":"type"},{"anyOf":[{"equals":"true","field":"Microsoft.Cache/Redis/enableNonSslPort"}]}]},"then":{"details":[{"field":"Microsoft.Cache/Redis/enableNonSslPort","value":false}],"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-sslEnforcement"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-sslEnforcement
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Append a specific min TLS version requirement and enforce SSL on Azure Cache for Redis. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.
          display_name: Azure Cache for Redis Append a specific min TLS version requirement and enforce TLS.
          management_group_name: myorg-3
          metadata: '{"category":"Cache","version":"1.0.0"}'
          mode: Indexed
          name: Append-Redis-sslEnforcement
          parameters: '{"effect":{"allowedValues":["Append","Disabled"],"defaultValue":"Append","metadata":{"description":"Enable or disable the execution of the policy minimum TLS version Azure Cache for Redis","displayName":"Effect Azure Cache for Redis"},"type":"String"},"minimumTlsVersion":{"allowedValues":["1.2","1.1","1.0"],"defaultValue":"1.2","metadata":{"description":"Select version minimum TLS version Azure Cache for Redis to enforce","displayName":"Select version for Redis server"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Cache/redis","field":"type"},{"anyOf":[{"field":"Microsoft.Cache/Redis/minimumTlsVersion","notequals":"[parameters(''minimumTlsVersion'')]"}]}]},"then":{"details":[{"field":"Microsoft.Cache/Redis/minimumTlsVersion","value":"[parameters(''minimumTlsVersion'')]"}],"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-AA-child-resources"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-AA-child-resources
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy denies the creation of child resources on the Automation Account
          display_name: No child resources in Automation Account
          management_group_name: myorg-3
          metadata: '{"category":"Automation","version":"1.0.0"}'
          mode: Indexed
          name: Deny-AA-child-resources
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"field":"type","in":["Microsoft.Automation/automationAccounts/runbooks","Microsoft.Automation/automationAccounts/variables","Microsoft.Automation/automationAccounts/modules","Microsoft.Automation/automationAccounts/credentials","Microsoft.Automation/automationAccounts/connections","Microsoft.Automation/automationAccounts/certificates"]}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-AppGW-Without-WAF"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-AppGW-Without-WAF
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy enables you to restrict that Application Gateways is always deployed with WAF enabled
          display_name: Application Gateway should be deployed with WAF enabled
          management_group_name: myorg-3
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: Indexed
          name: Deny-AppGW-Without-WAF
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Network/applicationGateways","field":"type"},{"field":"Microsoft.Network/applicationGateways/sku.name","notequals":"WAF_v2"}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceApiApp-http"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceApiApp-http
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks.
          display_name: API App should only be accessible over HTTPS
          management_group_name: myorg-3
          metadata: '{"category":"App Service","version":"1.0.0"}'
          mode: Indexed
          name: Deny-AppServiceApiApp-http
          parameters: '{"effect":{"allowedValues":["Audit","Disabled","Deny"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Web/sites","field":"type"},{"field":"kind","like":"*api"},{"equals":"false","field":"Microsoft.Web/sites/httpsOnly"}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceFunctionApp-http"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceFunctionApp-http
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks.
          display_name: Function App should only be accessible over HTTPS
          management_group_name: myorg-3
          metadata: '{"category":"App Service","version":"1.0.0"}'
          mode: Indexed
          name: Deny-AppServiceFunctionApp-http
          parameters: '{"effect":{"allowedValues":["Audit","Disabled","Deny"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Web/sites","field":"type"},{"field":"kind","like":"functionapp*"},{"equals":"false","field":"Microsoft.Web/sites/httpsOnly"}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceWebApp-http"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceWebApp-http
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks.
          display_name: Web Application should only be accessible over HTTPS
          management_group_name: myorg-3
          metadata: '{"category":"App Service","version":"1.0.0"}'
          mode: Indexed
          name: Deny-AppServiceWebApp-http
          parameters: '{"effect":{"allowedValues":["Audit","Disabled","Deny"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Web/sites","field":"type"},{"field":"kind","like":"app*"},{"equals":"false","field":"Microsoft.Web/sites/httpsOnly"}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-MySql-http"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-MySql-http
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Azure Database for MySQL supports connecting your Azure Database for MySQL server to client applications using Secure Sockets Layer (SSL). Enforcing SSL connections between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.
          display_name: MySQL database servers enforce SSL connections.
          management_group_name: myorg-3
          metadata: '{"category":"SQL","version":"1.0.0"}'
          mode: Indexed
          name: Deny-MySql-http
          parameters: '{"effect":{"allowedValues":["Audit","Disabled","Deny"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"minimalTlsVersion":{"allowedValues":["TLS1_2","TLS1_0","TLS1_1","TLSEnforcementDisabled"],"defaultValue":"TLS1_2","metadata":{"description":"Select version  minimum TLS version Azure Database for MySQL server to enforce","displayName":"Select version minimum TLS for MySQL server"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.DBforMySQL/servers","field":"type"},{"anyOf":[{"exists":"false","field":"Microsoft.DBforMySQL/servers/sslEnforcement"},{"field":"Microsoft.DBforMySQL/servers/sslEnforcement","notEquals":"Enabled"},{"field":"Microsoft.DBforMySQL/servers/minimalTlsVersion","notequals":"[parameters(''minimalTlsVersion'')]"}]}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-PostgreSql-http"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-PostgreSql-http
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Azure Database for PostgreSQL supports connecting your Azure Database for PostgreSQL server to client applications using Secure Sockets Layer (SSL). Enforcing SSL connections between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.
          display_name: PostgreSQL database servers enforce SSL connection.
          management_group_name: myorg-3
          metadata: '{"category":"SQL","version":"1.0.1"}'
          mode: Indexed
          name: Deny-PostgreSql-http
          parameters: '{"effect":{"allowedValues":["Audit","Disabled","Deny"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"minimalTlsVersion":{"allowedValues":["TLS1_2","TLS1_0","TLS1_1","TLSEnforcementDisabled"],"defaultValue":"TLS1_2","metadata":{"description":"Select version  minimum TLS version Azure Database for MySQL server to enforce","displayName":"Select version minimum TLS for MySQL server"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.DBforPostgreSQL/servers","field":"type"},{"anyOf":[{"exists":"false","field":"Microsoft.DBforPostgreSQL/servers/sslEnforcement"},{"field":"Microsoft.DBforPostgreSQL/servers/sslEnforcement","notEquals":"Enabled"},{"field":"Microsoft.DBforPostgreSQL/servers/minimalTlsVersion","notequals":"[parameters(''minimalTlsVersion'')]"}]}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-Private-DNS-Zones"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-Private-DNS-Zones
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy denies the creation of a private DNS in the current scope, used in combination with policies that create centralized private DNS in connectivity subscription
          display_name: Deny the creation of private DNS
          management_group_name: myorg-3
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: Indexed
          name: Deny-Private-DNS-Zones
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Network/privateDnsZones","field":"type"},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-Aks"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-Aks
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy denies  the creation of  Azure Kubernetes Service non-private clusters
          display_name: Public network access on AKS API should be disabled
          management_group_name: myorg-3
          metadata: '{"category":"Kubernetes","version":"1.0.0"}'
          mode: Indexed
          name: Deny-PublicEndpoint-Aks
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.ContainerService/managedClusters","field":"type"},{"field":"Microsoft.ContainerService/managedClusters/apiServerAccessProfile.enablePrivateCluster","notequals":"true"}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-CosmosDB"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-CosmosDB
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy denies that  Cosmos database accounts  are created with out public network access is disabled.
          display_name: Public network access should be disabled for CosmosDB
          management_group_name: myorg-3
          metadata: '{"category":"SQL","version":"1.0.0"}'
          mode: Indexed
          name: Deny-PublicEndpoint-CosmosDB
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.DocumentDB/databaseAccounts","field":"type"},{"field":"Microsoft.DocumentDB/databaseAccounts/publicNetworkAccess","notequals":"Disabled"}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-KeyVault"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-KeyVault
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy denies creation of Key Vaults with IP Firewall exposed to all public endpoints
          display_name: Public network access should be disabled for KeyVault
          management_group_name: myorg-3
          metadata: '{"category":"Key Vault","version":"1.0.0"}'
          mode: Indexed
          name: Deny-PublicEndpoint-KeyVault
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.KeyVault/vaults","field":"type"},{"field":"Microsoft.KeyVault/vaults/networkAcls.defaultAction","notequals":"Deny"}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-MariaDB"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-MariaDB
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy denies the creation of Maria DB accounts with exposed public endpoints
          display_name: Public network access should be disabled for MariaDB
          management_group_name: myorg-3
          metadata: '{"category":"SQL","version":"1.0.0"}'
          mode: Indexed
          name: Deny-PublicEndpoint-MariaDB
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.DBforMariaDB/servers","field":"type"},{"field":"Microsoft.DBforMariaDB/servers/publicNetworkAccess","notequals":"Disabled"}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-MySQL"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-MySQL
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy denies creation of MySql DB accounts with exposed public endpoints
          display_name: Public network access should be disabled for MySQL
          management_group_name: myorg-3
          metadata: '{"category":"SQL","version":"1.0.0"}'
          mode: Indexed
          name: Deny-PublicEndpoint-MySQL
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.DBforMySQL/servers","field":"type"},{"field":"Microsoft.DBforMySQL/servers/publicNetworkAccess","notequals":"Disabled"}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-PostgreSql"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-PostgreSql
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy denies creation of Postgre SQL DB accounts with exposed public endpoints
          display_name: Public network access should be disabled for PostgreSql
          management_group_name: myorg-3
          metadata: '{"category":"SQL","version":"1.0.0"}'
          mode: Indexed
          name: Deny-PublicEndpoint-PostgreSql
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.DBforPostgreSQL/servers","field":"type"},{"field":"Microsoft.DBforPostgreSQL/servers/publicNetworkAccess","notequals":"Disabled"}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-Sql"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-Sql
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy denies creation of Sql servers with exposed public endpoints
          display_name: Public network access on Azure SQL Database should be disabled
          management_group_name: myorg-3
          metadata: '{"category":"SQL","version":"1.0.0"}'
          mode: Indexed
          name: Deny-PublicEndpoint-Sql
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Sql/servers","field":"type"},{"field":"Microsoft.Sql/servers/publicNetworkAccess","notequals":"Disabled"}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-Storage"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-Storage
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy denies creation of storage accounts with IP Firewall exposed to all public endpoints
          display_name: Public network access onStorage accounts should be disabled
          management_group_name: myorg-3
          metadata: '{"category":"Storage","version":"1.0.0"}'
          mode: Indexed
          name: Deny-PublicEndpoint-Storage
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Storage/storageAccounts","field":"type"},{"field":"Microsoft.Storage/storageAccounts/networkAcls.defaultAction","notequals":"Deny"}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicIP"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicIP
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy denies creation of Public IPs under the assigned scope.
          display_name: Deny the creation of public IP
          management_group_name: myorg-3
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: Indexed
          name: Deny-PublicIP
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Network/publicIPAddresses","field":"type"},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-RDP-From-Internet"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-RDP-From-Internet
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy denies any network security rule that allows RDP access from Internet
          display_name: RDP access from the Internet should be blocked
          management_group_name: myorg-3
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: All
          name: Deny-RDP-From-Internet
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Network/networkSecurityGroups/securityRules","field":"type"},{"allOf":[{"equals":"Allow","field":"Microsoft.Network/networkSecurityGroups/securityRules/access"},{"equals":"Inbound","field":"Microsoft.Network/networkSecurityGroups/securityRules/direction"},{"anyOf":[{"equals":"*","field":"Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange"},{"equals":"3389","field":"Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange"},{"equals":"true","value":"[if(and(not(empty(field(''Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange''))), contains(field(''Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange''),''-'')), and(lessOrEquals(int(first(split(field(''Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange''), ''-''))),3389),greaterOrEquals(int(last(split(field(''Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRange''), ''-''))),3389)), ''false'')]"},{"count":{"field":"Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]","where":{"equals":"true","value":"[if(and(not(empty(first(field(''Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]'')))), contains(first(field(''Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]'')),''-'')), and(lessOrEquals(int(first(split(first(field(''Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]'')), ''-''))),3389),greaterOrEquals(int(last(split(first(field(''Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]'')), ''-''))),3389)) , ''false'')]"}},"greater":0},{"not":{"field":"Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]","notEquals":"*"}},{"not":{"field":"Microsoft.Network/networkSecurityGroups/securityRules/destinationPortRanges[*]","notEquals":"3389"}}]},{"anyOf":[{"equals":"*","field":"Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix"},{"equals":"Internet","field":"Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefix"},{"not":{"field":"Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefixes[*]","notEquals":"*"}},{"not":{"field":"Microsoft.Network/networkSecurityGroups/securityRules/sourceAddressPrefixes[*]","notEquals":"Internet"}}]}]}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-Redis-http"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-Redis-http
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Audit enabling of only connections via SSL to Azure Cache for Redis. Validate both minimum TLS version and enableNonSslPort is disabled. Use of secure connections ensures authentication between the server and the service and protects data in transit from network layer attacks such as man-in-the-middle, eavesdropping, and session-hijacking
          display_name: Azure Cache for Redis only secure connections should be enabled
          management_group_name: myorg-3
          metadata: '{"category":"Cache","version":"1.0.0"}'
          mode: Indexed
          name: Deny-Redis-http
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"The effect determines what happens when the policy rule is evaluated to match","displayName":"Effect"},"type":"String"},"minimumTlsVersion":{"allowedValues":["1.2","1.1","1.0"],"defaultValue":"1.2","metadata":{"description":"Select minimum TLS version for Azure Cache for Redis.","displayName":"Select minumum TLS version for Azure Cache for Redis."},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Cache/redis","field":"type"},{"anyOf":[{"equals":"true","field":"Microsoft.Cache/Redis/enableNonSslPort"},{"field":"Microsoft.Cache/Redis/minimumTlsVersion","notequals":"[parameters(''minimumTlsVersion'')]"}]}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-Sql-minTLS"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-Sql-minTLS
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Setting minimal TLS version to 1.2 improves security by ensuring your Azure SQL Database can only be accessed from clients using TLS 1.2. Using versions of TLS less than 1.2 is not reccomended since they have well documented security vunerabilities.
          display_name: Azure SQL Database should have the minimal TLS version set to the highest version
          management_group_name: myorg-3
          metadata: '{"category":"SQL","version":"1.0.0"}'
          mode: Indexed
          name: Deny-Sql-minTLS
          parameters: '{"effect":{"allowedValues":["Audit","Disabled","Deny"],"defaultValue":"Audit","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"minimalTlsVersion":{"allowedValues":["1.2","1.1","1.0"],"defaultValue":"1.2","metadata":{"description":"Select version minimum TLS version SQL servers to enforce","displayName":"Select version for SQL server"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Sql/servers","field":"type"},{"anyOf":[{"exists":"false","field":"Microsoft.Sql/servers/minimalTlsVersion"},{"field":"Microsoft.Sql/servers/minimalTlsVersion","notequals":"[parameters(''minimalTlsVersion'')]"}]}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-SqlMi-minTLS"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-SqlMi-minTLS
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Setting minimal TLS version to 1.2 improves security by ensuring your SQL Managed Instance can only be accessed from clients using TLS 1.2. Using versions of TLS less than 1.2 is not reccomended since they have well documented security vunerabilities.
          display_name: SQL Managed Instance should have the minimal TLS version set to the highest version
          management_group_name: myorg-3
          metadata: '{"category":"SQL","version":"1.0.0"}'
          mode: Indexed
          name: Deny-SqlMi-minTLS
          parameters: '{"effect":{"allowedValues":["Audit","Disabled","Deny"],"defaultValue":"Audit","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"minimalTlsVersion":{"allowedValues":["1.2","1.1","1.0"],"defaultValue":"1.2","metadata":{"description":"Select version minimum TLS version SQL servers to enforce","displayName":"Select version for SQL server"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Sql/managedInstances","field":"type"},{"anyOf":[{"exists":"false","field":"Microsoft.Sql/managedInstances/minimalTlsVersion"},{"field":"Microsoft.Sql/managedInstances/minimalTlsVersion","notequals":"[parameters(''minimalTlsVersion'')]"}]}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-Storage-minTLS"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-Storage-minTLS
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Audit requirement of Secure transfer in your storage account. Secure transfer is an option that forces your storage account to accept requests only from secure connections (HTTPS). Use of HTTPS ensures authentication between the server and the service and protects data in transit from network layer attacks such as man-in-the-middle, eavesdropping, and session-hijacking
          display_name: Storage Account set to minumum TLS and Secure transfer should be enabled
          management_group_name: myorg-3
          metadata: '{"category":"Storage","version":"1.0.0"}'
          mode: Indexed
          name: Deny-Storage-minTLS
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"The effect determines what happens when the policy rule is evaluated to match","displayName":"Effect"},"type":"String"},"minimumTlsVersion":{"allowedValues":["TLS1_2","TLS1_1","TLS1_0"],"defaultValue":"TLS1_2","metadata":{"description":"Select version  minimum TLS version on Azure Storage Account to enforce","displayName":"Storage Account select minimum TLS version"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Storage/storageAccounts","field":"type"},{"anyOf":[{"allOf":[{"less":"2019-04-01","value":"[requestContext().apiVersion]"},{"exists":"false","field":"Microsoft.Storage/storageAccounts/supportsHttpsTrafficOnly"}]},{"equals":"false","field":"Microsoft.Storage/storageAccounts/supportsHttpsTrafficOnly"},{"field":"Microsoft.Storage/storageAccounts/minimumTlsVersion","notequals":"[parameters(''minimumTlsVersion'')]"},{"exists":"false","field":"Microsoft.Storage/storageAccounts/minimumTlsVersion"}]}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Nsg"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Nsg
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy denies the creation of a subsnet with out an Network Security Group. NSG help to protect traffic across subnet-level.
          display_name: 'Subnets should have a Network Security Group '
          management_group_name: myorg-3
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: All
          name: Deny-Subnet-Without-Nsg
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Network/virtualNetworks/subnets","field":"type"},{"exists":"false","field":"Microsoft.Network/virtualNetworks/subnets/networkSecurityGroup.id"}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Udr"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Udr
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy denies the creation of a subsnet with out a User Defined Route.
          display_name: Subnets should have a User Defined Route
          management_group_name: myorg-3
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: All
          name: Deny-Subnet-Without-Udr
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Network/virtualNetworks/subnets","field":"type"},{"exists":"false","field":"Microsoft.Network/virtualNetworks/subnets/routeTable.id"}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-VNET-Peer-Cross-Sub"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-VNET-Peer-Cross-Sub
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy denies the creation of vNet Peerings outside of the same subscriptions under the assigned scope.
          display_name: Deny vNet peering cross subscription.
          management_group_name: myorg-3
          metadata: '{"category":"Network","version":"1.0.0.0"}'
          mode: Indexed
          name: Deny-VNET-Peer-Cross-Sub
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Network/virtualNetworks/virtualNetworkPeerings","field":"type"},{"field":"Microsoft.Network/virtualNetworks/virtualNetworkPeerings/remoteVirtualNetwork.id","notcontains":"[subscription().id]"}]},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-VNet-Peering"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-VNet-Peering
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy denies the creation of vNet Peerings under the assigned scope.
          display_name: 'Deny vNet peering '
          management_group_name: myorg-3
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: Indexed
          name: Deny-VNet-Peering
          parameters: '{"effect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Network/virtualNetworks/virtualNetworkPeerings","field":"type"},"then":{"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-ACR"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-ACR
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy the Azure Defender settings for Azure Container Registry
          display_name: Deploy Azure Defender for ACR
          management_group_name: myorg-3
          metadata: '{"category":"Security Center","version":"1.0.0"}'
          mode: All
          name: Deploy-ASC-Defender-ACR
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"string"},"pricingTier":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier","displayName":"Azure Defender pricing tier"},"type":"string"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"incremental","parameters":{"pricingTier":{"value":"[parameters(''pricingTier'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"pricingTier":{"metadata":{"description":"Azure Defender pricing tier"},"type":"string"}},"resources":[{"apiVersion":"2018-06-01","name":"ContainerRegistry","properties":{"pricingTier":"[parameters(''pricingTier'')]"},"type":"Microsoft.Security/pricings"}],"variables":{}}}},"deploymentScope":"Subscription","existenceCondition":{"allOf":[{"equals":"[parameters(''pricingTier'')]","field":"Microsoft.Security/pricings/pricingTier"},{"equals":"Microsoft.Security/pricings","field":"type"}]},"existenceScope":"Subscription","name":"ContainerRegistry","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"],"type":"Microsoft.Security/pricings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-AKS"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-AKS
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy the Azure Defender settings for AKS
          display_name: Deploy Azure Defender for AKS
          management_group_name: myorg-3
          metadata: '{"category":"Security Center","version":"1.0.0"}'
          mode: All
          name: Deploy-ASC-Defender-AKS
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"string"},"pricingTier":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier","displayName":"Azure Defender pricing tier"},"type":"string"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"incremental","parameters":{"pricingTier":{"value":"[parameters(''pricingTier'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"pricingTier":{"metadata":{"description":"Azure Defender pricing tier"},"type":"string"}},"resources":[{"apiVersion":"2018-06-01","name":"KubernetesService","properties":{"pricingTier":"[parameters(''pricingTier'')]"},"type":"Microsoft.Security/pricings"}],"variables":{}}}},"deploymentScope":"Subscription","existenceCondition":{"allOf":[{"equals":"[parameters(''pricingTier'')]","field":"Microsoft.Security/pricings/pricingTier"},{"equals":"Microsoft.Security/pricings","field":"type"}]},"existenceScope":"Subscription","name":"KubernetesService","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"],"type":"Microsoft.Security/pricings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-AKV"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-AKV
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy the Azure Defender settings for Azure Key Vault
          display_name: Deploy Azure Defender for AKV
          management_group_name: myorg-3
          metadata: '{"category":"Security Center","version":"1.0.0"}'
          mode: All
          name: Deploy-ASC-Defender-AKV
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"string"},"pricingTier":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier","displayName":"Azure Defender pricing tier"},"type":"string"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"incremental","parameters":{"pricingTier":{"value":"[parameters(''pricingTier'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"pricingTier":{"metadata":{"description":"Azure Defender pricing tier"},"type":"string"}},"resources":[{"apiVersion":"2018-06-01","name":"KeyVaults","properties":{"pricingTier":"[parameters(''pricingTier'')]"},"type":"Microsoft.Security/pricings"}],"variables":{}}}},"deploymentScope":"Subscription","existenceCondition":{"allOf":[{"equals":"[parameters(''pricingTier'')]","field":"Microsoft.Security/pricings/pricingTier"},{"equals":"Microsoft.Security/pricings","field":"type"}]},"existenceScope":"Subscription","name":"KeyVaults","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"],"type":"Microsoft.Security/pricings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-ARM"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-ARM
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy the Azure Defender settings for Azure Resource Manager
          display_name: Deploy Azure Defender for ARM
          management_group_name: myorg-3
          metadata: '{"category":"Security Center","version":"1.0.0"}'
          mode: All
          name: Deploy-ASC-Defender-ARM
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"string"},"pricingTier":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier","displayName":"Azure Defender pricing tier"},"type":"string"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"incremental","parameters":{"pricingTier":{"value":"[parameters(''pricingTier'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"pricingTier":{"metadata":{"description":"Azure Defender pricing tier"},"type":"string"}},"resources":[{"apiVersion":"2018-06-01","name":"Arm","properties":{"pricingTier":"[parameters(''pricingTier'')]"},"type":"Microsoft.Security/pricings"}],"variables":{}}}},"deploymentScope":"Subscription","existenceCondition":{"allOf":[{"equals":"[parameters(''pricingTier'')]","field":"Microsoft.Security/pricings/pricingTier"},{"equals":"Microsoft.Security/pricings","field":"type"}]},"existenceScope":"Subscription","name":"Arm","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"],"type":"Microsoft.Security/pricings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-AppSrv"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-AppSrv
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy the Azure Defender settings in Azure Security Center for Azure App Services
          display_name: Deploy Azure Defender for Azure App Services
          management_group_name: myorg-3
          metadata: '{"category":"Security Center","version":"1.0.0"}'
          mode: All
          name: Deploy-ASC-Defender-AppSrv
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"string"},"pricingTier":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier","displayName":"Azure Defender pricing tier"},"type":"string"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"incremental","parameters":{"pricingTier":{"value":"[parameters(''pricingTier'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"pricingTier":{"metadata":{"description":"Azure Defender pricing tier"},"type":"string"}},"resources":[{"apiVersion":"2018-06-01","name":"AppServices","properties":{"pricingTier":"[parameters(''pricingTier'')]"},"type":"Microsoft.Security/pricings"}],"variables":{}}}},"deploymentScope":"Subscription","existenceCondition":{"allOf":[{"equals":"[parameters(''pricingTier'')]","field":"Microsoft.Security/pricings/pricingTier"},{"equals":"Microsoft.Security/pricings","field":"type"}]},"existenceScope":"Subscription","name":"AppServices","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"],"type":"Microsoft.Security/pricings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-DNS"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-DNS
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy the Azure Defender settings for DNS
          display_name: Deploy Azure Defender for DNS
          management_group_name: myorg-3
          metadata: '{"category":"Security Center","version":"1.0.0"}'
          mode: All
          name: Deploy-ASC-Defender-DNS
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"string"},"pricingTier":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier","displayName":"Azure Defender pricing tier"},"type":"string"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"incremental","parameters":{"pricingTier":{"value":"[parameters(''pricingTier'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"pricingTier":{"metadata":{"description":"Azure Defender pricing tier"},"type":"string"}},"resources":[{"apiVersion":"2018-06-01","name":"Dns","properties":{"pricingTier":"[parameters(''pricingTier'')]"},"type":"Microsoft.Security/pricings"}],"variables":{}}}},"deploymentScope":"Subscription","existenceCondition":{"allOf":[{"equals":"[parameters(''pricingTier'')]","field":"Microsoft.Security/pricings/pricingTier"},{"equals":"Microsoft.Security/pricings","field":"type"}]},"existenceScope":"Subscription","name":"Dns","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"],"type":"Microsoft.Security/pricings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-SA"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-SA
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy the Azure Defender settings in Azure Security Center for Storage Accounts
          display_name: Deploy Azure Defender for Storage Accounts
          management_group_name: myorg-3
          metadata: '{"category":"Security Center","version":"1.0.0"}'
          mode: All
          name: Deploy-ASC-Defender-SA
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"string"},"pricingTier":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier","displayName":"Azure Defender pricing tier"},"type":"string"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"incremental","parameters":{"pricingTier":{"value":"[parameters(''pricingTier'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"pricingTier":{"metadata":{"description":"Azure Defender pricing tier"},"type":"string"}},"resources":[{"apiVersion":"2018-06-01","name":"StorageAccounts","properties":{"pricingTier":"[parameters(''pricingTier'')]"},"type":"Microsoft.Security/pricings"}],"variables":{}}}},"deploymentScope":"Subscription","existenceCondition":{"allOf":[{"equals":"[parameters(''pricingTier'')]","field":"Microsoft.Security/pricings/pricingTier"},{"equals":"Microsoft.Security/pricings","field":"type"}]},"existenceScope":"Subscription","name":"StorageAccounts","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"],"type":"Microsoft.Security/pricings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-SQLVM"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-SQLVM
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy the Azure Defender settings in Sql Server on Virtual Machines
          display_name: Deploy Azure Defender for Sql on Virtual Machines
          management_group_name: myorg-3
          metadata: '{"category":"Security Center","version":"1.0.0"}'
          mode: All
          name: Deploy-ASC-Defender-SQLVM
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"string"},"pricingTier":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier","displayName":"Azure Defender pricing tier"},"type":"string"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"incremental","parameters":{"pricingTier":{"value":"[parameters(''pricingTier'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"pricingTier":{"metadata":{"description":"Azure Defender pricing tier"},"type":"string"}},"resources":[{"apiVersion":"2018-06-01","name":"SqlServerVirtualMachines","properties":{"pricingTier":"[parameters(''pricingTier'')]"},"type":"Microsoft.Security/pricings"}],"variables":{}}}},"deploymentScope":"Subscription","existenceCondition":{"allOf":[{"equals":"[parameters(''pricingTier'')]","field":"Microsoft.Security/pricings/pricingTier"},{"equals":"Microsoft.Security/pricings","field":"type"}]},"existenceScope":"Subscription","name":"SqlServerVirtualMachines","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"],"type":"Microsoft.Security/pricings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-Sql"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-Sql
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy the Azure Defender settings in Azure Security Center for Azure Sql Databases
          display_name: Deploy Azure Defender for Azure Sql Databases
          management_group_name: myorg-3
          metadata: '{"category":"Security Center","version":"1.0.0"}'
          mode: All
          name: Deploy-ASC-Defender-Sql
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"string"},"pricingTier":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier","displayName":"Azure Defender pricing tier"},"type":"string"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"incremental","parameters":{"pricingTier":{"value":"[parameters(''pricingTier'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"pricingTier":{"metadata":{"description":"Azure Defender pricing tier"},"type":"string"}},"resources":[{"apiVersion":"2018-06-01","name":"SqlServers","properties":{"pricingTier":"[parameters(''pricingTier'')]"},"type":"Microsoft.Security/pricings"}],"variables":{}}}},"deploymentScope":"Subscription","existenceCondition":{"allOf":[{"equals":"[parameters(''pricingTier'')]","field":"Microsoft.Security/pricings/pricingTier"},{"equals":"Microsoft.Security/pricings","field":"type"}]},"existenceScope":"Subscription","name":"SqlServers","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"],"type":"Microsoft.Security/pricings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-VMs"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-VMs
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy the Azure Defender settings in Azure Security Center for Virtual Machines
          display_name: Deploy Azure Defender for Virtual Machines
          management_group_name: myorg-3
          metadata: '{"category":"Security Center","version":"1.0.0"}'
          mode: All
          name: Deploy-ASC-Defender-VMs
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"string"},"pricingTier":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier","displayName":"Azure Defender pricing tier"},"type":"string"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"incremental","parameters":{"pricingTier":{"value":"[parameters(''pricingTier'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"pricingTier":{"metadata":{"description":"Azure Defender pricing tier"},"type":"string"}},"resources":[{"apiVersion":"2018-06-01","name":"VirtualMachines","properties":{"pricingTier":"[parameters(''pricingTier'')]"},"type":"Microsoft.Security/pricings"}],"variables":{}}}},"deploymentScope":"Subscription","existenceCondition":{"allOf":[{"equals":"[parameters(''pricingTier'')]","field":"Microsoft.Security/pricings/pricingTier"},{"equals":"Microsoft.Security/pricings","field":"type"}]},"existenceScope":"Subscription","name":"VirtualMachines","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"],"type":"Microsoft.Security/pricings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-SecurityContacts"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-SecurityContacts
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy Azure Security Center Security Contacts
          display_name: Deploy Azure Security Center Security Contacts
          management_group_name: myorg-3
          metadata: '{"category":"Security Center","version":"1.0.0"}'
          mode: All
          name: Deploy-ASC-SecurityContacts
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"string"},"emailSecurityContact":{"metadata":{"description":"Provide email address for Azure Security Center contact details","displayName":"Security contacts email address"},"type":"string"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"incremental","parameters":{"emailSecurityContact":{"value":"[parameters(''emailSecurityContact'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"emailSecurityContact":{"metadata":{"description":"Security contacts email address"},"type":"string"}},"resources":[{"apiVersion":"2020-01-01-preview","name":"default","properties":{"alertNotifications":{"minimalSeverity":"High","state":"On"},"emails":"[parameters(''emailSecurityContact'')]","notificationsByRole":{"roles":["Owner"],"state":"On"}},"type":"Microsoft.Security/securityContacts"}],"variables":{}}}},"deploymentScope":"Subscription","existenceCondition":{"allOf":[{"contains":"[parameters(''emailSecurityContact'')]","field":"Microsoft.Security/securityContacts/email"},{"equals":"Microsoft.Security/securityContacts","field":"type"},{"equals":"On","field":"Microsoft.Security/securityContacts/alertNotifications"},{"equals":"On","field":"Microsoft.Security/securityContacts/alertsToAdmins"}]},"existenceScope":"Subscription","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd"],"type":"Microsoft.Security/securityContacts"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Budget"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Budget
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy a default budget on all subscriptions under the assigned scope
          display_name: Deploy a default budget on all subscriptions under the assigned scope
          management_group_name: myorg-3
          metadata: '{"category":"Budget","version":"1.0.0"}'
          mode: All
          name: Deploy-Budget
          parameters: '{"amount":{"defaultValue":"1000","metadata":{"description":"The total amount of cost or usage to track with the budget"},"type":"String"},"contactEmails":{"defaultValue":[],"metadata":{"description":"The list of email addresses, in an array, to send the budget notification to when the threshold is exceeded."},"type":"Array"},"contactGroups":{"defaultValue":[],"metadata":{"description":"The list of action groups, in an array, to send the budget notification to when the threshold is exceeded. It accepts array of strings."},"type":"Array"},"contactRoles":{"defaultValue":["Owner","Contributor"],"metadata":{"description":"The list of contact RBAC roles, in an array, to send the budget notification to when the threshold is exceeded."},"type":"Array"},"firstThreshold":{"defaultValue":"90","metadata":{"description":"Threshold value associated with a notification. Notification is sent when the cost exceeded the threshold. It is always percent and has to be between 0 and 1000."},"type":"String"},"secondThreshold":{"defaultValue":"100","metadata":{"description":"Threshold value associated with a notification. Notification is sent when the cost exceeded the threshold. It is always percent and has to be between 0 and 1000."},"type":"String"},"timeGrain":{"allowedValues":["Monthly","Quarterly","Annually","BillingMonth","BillingQuarter","BillingAnnual"],"defaultValue":"Monthly","metadata":{"description":"The time covered by a budget. Tracking of the amount will be reset based on the time grain."},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"Incremental","parameters":{"amount":{"value":"[parameters(''amount'')]"},"contactEmails":{"value":"[parameters(''contactEmails'')]"},"contactGroups":{"value":"[parameters(''contactGroups'')]"},"contactRoles":{"value":"[parameters(''contactRoles'')]"},"firstThreshold":{"value":"[parameters(''firstThreshold'')]"},"secondThreshold":{"value":"[parameters(''secondThreshold'')]"},"timeGrain":{"value":"[parameters(''timeGrain'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json","contentVersion":"1.0.0.0","parameters":{"amount":{"type":"String"},"contactEmails":{"type":"Array"},"contactGroups":{"type":"Array"},"contactRoles":{"type":"Array"},"firstThreshold":{"type":"String"},"secondThreshold":{"type":"String"},"startDate":{"defaultValue":"[concat(utcNow(''MM''), ''/01/'', utcNow(''yyyy''))]","type":"String"},"timeGrain":{"type":"String"}},"resources":[{"apiVersion":"2019-10-01","name":"default-sandbox-budget","properties":{"amount":"[parameters(''amount'')]","category":"Cost","notifications":{"NotificationForExceededBudget1":{"contactEmails":"[parameters(''contactEmails'')]","contactGroups":"[parameters(''contactGroups'')]","contactRoles":"[parameters(''contactRoles'')]","enabled":true,"operator":"GreaterThan","threshold":"[parameters(''firstThreshold'')]"},"NotificationForExceededBudget2":{"contactEmails":"[parameters(''contactEmails'')]","contactGroups":"[parameters(''contactGroups'')]","contactRoles":"[parameters(''contactRoles'')]","enabled":true,"operator":"GreaterThan","threshold":"[parameters(''secondThreshold'')]"}},"timeGrain":"[parameters(''timeGrain'')]","timePeriod":{"startDate":"[parameters(''startDate'')]"}},"type":"Microsoft.Consumption/budgets"}]}}},"deploymentScope":"Subscription","existenceCondition":{"allOf":[{"equals":"[parameters(''amount'')]","field":"Microsoft.Consumption/budgets/amount"},{"equals":"[parameters(''timeGrain'')]","field":"Microsoft.Consumption/budgets/timeGrain"},{"equals":"Cost","field":"Microsoft.Consumption/budgets/category"}]},"existenceScope":"Subscription","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"],"type":"Microsoft.Consumption/budgets"},"effect":"DeployIfNotExists"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-DDoSProtection"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-DDoSProtection
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys an Azure DDoS Protection Standard plan
          display_name: Deploy an Azure DDoS Protection Standard plan
          management_group_name: myorg-3
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: All
          name: Deploy-DDoSProtection
          parameters: '{"ddosName":{"metadata":{"description":"DDoSVnet","displayName":"ddosName"},"type":"String"},"ddosRegion":{"metadata":{"description":"DDoSVnet location","displayName":"ddosRegion","strongType":"location"},"type":"String"},"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"rgName":{"metadata":{"description":"Provide name for resource group.","displayName":"rgName"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"Incremental","parameters":{"ddosname":{"value":"[parameters(''ddosname'')]"},"ddosregion":{"value":"[parameters(''ddosRegion'')]"},"rgName":{"value":"[parameters(''rgName'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json","contentVersion":"1.0.0.0","outputs":{},"parameters":{"ddosRegion":{"type":"String"},"ddosname":{"type":"String"},"rgName":{"type":"String"}},"resources":[{"apiVersion":"2018-05-01","location":"[deployment().location]","name":"[parameters(''rgName'')]","properties":{},"type":"Microsoft.Resources/resourceGroups"},{"apiVersion":"2018-05-01","dependsOn":["[resourceId(''Microsoft.Resources/resourceGroups/'', parameters(''rgName''))]"],"name":"ddosprotection","properties":{"mode":"Incremental","template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json","contentVersion":"1.0.0.0","outputs":{},"parameters":{},"resources":[{"apiVersion":"2019-12-01","location":"[parameters(''ddosRegion'')]","name":"[parameters(''ddosName'')]","properties":{},"type":"Microsoft.Network/ddosProtectionPlans"}]}},"resourceGroup":"[parameters(''rgName'')]","type":"Microsoft.Resources/deployments"}]}}},"deploymentScope":"Subscription","existenceScope":"ResourceGroup","name":"[parameters(''ddosName'')]","resourceGroupName":"[parameters(''rgName'')]","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"],"type":"Microsoft.Network/ddosProtectionPlans"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-Blob-PrivateEndpoint"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-Blob-PrivateEndpoint
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: 'Deploys the configurations of a Private DNS Zone Group by a parameter for Storage-Blob Private Endpoint. Used enforce the configuration to a single Private DNS Zone. '
          display_name: Deploy DNS Zone Group for Storage-Blob Private Endpoint
          management_group_name: myorg-3
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-DNSZoneGroup-For-Blob-PrivateEndpoint
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"privateDnsZoneId":{"metadata":{"displayName":"privateDnsZoneId","strongType":"Microsoft.Network/privateDnsZones"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Network/privateEndpoints","field":"type"},{"count":{"field":"Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]","where":{"equals":"blob","field":"Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]"}},"greaterOrEquals":1}]},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"privateDnsZoneId":{"value":"[parameters(''privateDnsZoneId'')]"},"privateEndpointName":{"value":"[field(''name'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","parameters":{"location":{"type":"String"},"privateDnsZoneId":{"type":"String"},"privateEndpointName":{"type":"String"}},"resources":[{"apiVersion":"2020-03-01","location":"[parameters(''location'')]","name":"[concat(parameters(''privateEndpointName''), ''/deployedByPolicy'')]","properties":{"privateDnsZoneConfigs":[{"name":"storageBlob-privateDnsZone","properties":{"privateDnsZoneId":"[parameters(''privateDnsZoneId'')]"}}]},"type":"Microsoft.Network/privateEndpoints/privateDnsZoneGroups"}]}}},"roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"],"type":"Microsoft.Network/privateEndpoints/privateDnsZoneGroups"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-File-PrivateEndpoint"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-File-PrivateEndpoint
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: 'Deploys the configurations of a Private DNS Zone Group by a parameter for Storage-File Private Endpoint. Used enforce the configuration to a single Private DNS Zone. '
          display_name: Deploy DNS  Zone Group for Storage-File Private Endpoint
          management_group_name: myorg-3
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-DNSZoneGroup-For-File-PrivateEndpoint
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"privateDnsZoneId":{"metadata":{"displayName":"privateDnsZoneId","strongType":"Microsoft.Network/privateDnsZones"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Network/privateEndpoints","field":"type"},{"count":{"field":"Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]","where":{"equals":"file","field":"Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]"}},"greaterOrEquals":1}]},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"privateDnsZoneId":{"value":"[parameters(''privateDnsZoneId'')]"},"privateEndpointName":{"value":"[field(''name'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","parameters":{"location":{"type":"String"},"privateDnsZoneId":{"type":"String"},"privateEndpointName":{"type":"String"}},"resources":[{"apiVersion":"2020-03-01","location":"[parameters(''location'')]","name":"[concat(parameters(''privateEndpointName''), ''/deployedByPolicy'')]","properties":{"privateDnsZoneConfigs":[{"name":"storageFile-privateDnsZone","properties":{"privateDnsZoneId":"[parameters(''privateDnsZoneId'')]"}}]},"type":"Microsoft.Network/privateEndpoints/privateDnsZoneGroups"}]}}},"roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"],"type":"Microsoft.Network/privateEndpoints/privateDnsZoneGroups"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-KeyVault-PrivateEndpoint"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-KeyVault-PrivateEndpoint
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: 'Deploys the configurations of a Private DNS Zone Group by a parameter for Key Vault Private Endpoint. Used enforce the configuration to a single Private DNS Zone. '
          display_name: Deploy DNS  Zone Group for Key Vault Private Endpoint
          management_group_name: myorg-3
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-DNSZoneGroup-For-KeyVault-PrivateEndpoint
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"privateDnsZoneId":{"metadata":{"displayName":"privateDnsZoneId","strongType":"Microsoft.Network/privateDnsZones"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Network/privateEndpoints","field":"type"},{"count":{"field":"Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]","where":{"equals":"vault","field":"Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]"}},"greaterOrEquals":1}]},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"privateDnsZoneId":{"value":"[parameters(''privateDnsZoneId'')]"},"privateEndpointName":{"value":"[field(''name'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","parameters":{"location":{"type":"String"},"privateDnsZoneId":{"type":"String"},"privateEndpointName":{"type":"String"}},"resources":[{"apiVersion":"2020-03-01","location":"[parameters(''location'')]","name":"[concat(parameters(''privateEndpointName''), ''/deployedByPolicy'')]","properties":{"privateDnsZoneConfigs":[{"name":"keyVault-privateDnsZone","properties":{"privateDnsZoneId":"[parameters(''privateDnsZoneId'')]"}}]},"type":"Microsoft.Network/privateEndpoints/privateDnsZoneGroups"}]}}},"roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"],"type":"Microsoft.Network/privateEndpoints/privateDnsZoneGroups"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-Queue-PrivateEndpoint"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-Queue-PrivateEndpoint
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: 'Deploys the configurations of a Private DNS Zone Group by a parameter for Storage-Queue Private Endpoint. Used enforce the configuration to a single Private DNS Zone. '
          display_name: Deploy DNS  Zone Group for Storage-Queue Private Endpoint
          management_group_name: myorg-3
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-DNSZoneGroup-For-Queue-PrivateEndpoint
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"privateDnsZoneId":{"metadata":{"displayName":"privateDnsZoneId","strongType":"Microsoft.Network/privateDnsZones"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Network/privateEndpoints","field":"type"},{"count":{"field":"Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]","where":{"equals":"queue","field":"Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]"}},"greaterOrEquals":1}]},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"privateDnsZoneId":{"value":"[parameters(''privateDnsZoneId'')]"},"privateEndpointName":{"value":"[field(''name'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","parameters":{"location":{"type":"String"},"privateDnsZoneId":{"type":"String"},"privateEndpointName":{"type":"String"}},"resources":[{"apiVersion":"2020-03-01","location":"[parameters(''location'')]","name":"[concat(parameters(''privateEndpointName''), ''/deployedByPolicy'')]","properties":{"privateDnsZoneConfigs":[{"name":"storageQueue-privateDnsZone","properties":{"privateDnsZoneId":"[parameters(''privateDnsZoneId'')]"}}]},"type":"Microsoft.Network/privateEndpoints/privateDnsZoneGroups"}]}}},"roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"],"type":"Microsoft.Network/privateEndpoints/privateDnsZoneGroups"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-Sql-PrivateEndpoint"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-Sql-PrivateEndpoint
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: 'Deploys the configurations of a Private DNS Zone Group by a parameter for SQL Private Private Endpoint. Used enforce the configuration to a single Private DNS Zone. '
          display_name: Deploy DNS  Zone Group for SQL Private Endpoint
          management_group_name: myorg-3
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-DNSZoneGroup-For-Sql-PrivateEndpoint
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"privateDnsZoneId":{"metadata":{"displayName":"privateDnsZoneId","strongType":"Microsoft.Network/privateDnsZones"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Network/privateEndpoints","field":"type"},{"count":{"field":"Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]","where":{"equals":"sqlServer","field":"Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]"}},"greaterOrEquals":1}]},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"privateDnsZoneId":{"value":"[parameters(''privateDnsZoneId'')]"},"privateEndpointName":{"value":"[field(''name'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","parameters":{"location":{"type":"String"},"privateDnsZoneId":{"type":"String"},"privateEndpointName":{"type":"String"}},"resources":[{"apiVersion":"2020-03-01","location":"[parameters(''location'')]","name":"[concat(parameters(''privateEndpointName''), ''/deployedByPolicy'')]","properties":{"privateDnsZoneConfigs":[{"name":"sqlServer-privateDnsZone","properties":{"privateDnsZoneId":"[parameters(''privateDnsZoneId'')]"}}]},"type":"Microsoft.Network/privateEndpoints/privateDnsZoneGroups"}]}}},"roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"],"type":"Microsoft.Network/privateEndpoints/privateDnsZoneGroups"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-Table-PrivateEndpoint"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-Table-PrivateEndpoint
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: 'Deploys the configurations of a Private DNS Zone Group by a parameter for Storage-Table Private Endpoint. Used enforce the configuration to a single Private DNS Zone. '
          display_name: Deploy DNS  Zone Group for Storage-Table Private Endpoint
          management_group_name: myorg-3
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-DNSZoneGroup-For-Table-PrivateEndpoint
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"privateDnsZoneId":{"metadata":{"displayName":"privateDnsZoneId","strongType":"Microsoft.Network/privateDnsZones"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Network/privateEndpoints","field":"type"},{"count":{"field":"Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]","where":{"equals":"table","field":"Microsoft.Network/privateEndpoints/privateLinkServiceConnections[*].groupIds[*]"}},"greaterOrEquals":1}]},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"privateDnsZoneId":{"value":"[parameters(''privateDnsZoneId'')]"},"privateEndpointName":{"value":"[field(''name'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","parameters":{"location":{"type":"String"},"privateDnsZoneId":{"type":"String"},"privateEndpointName":{"type":"String"}},"resources":[{"apiVersion":"2020-03-01","location":"[parameters(''location'')]","name":"[concat(parameters(''privateEndpointName''), ''/deployedByPolicy'')]","properties":{"privateDnsZoneConfigs":[{"name":"storageTable-privateDnsZone","properties":{"privateDnsZoneId":"[parameters(''privateDnsZoneId'')]"}}]},"type":"Microsoft.Network/privateEndpoints/privateDnsZoneGroups"}]}}},"roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7"],"type":"Microsoft.Network/privateEndpoints/privateDnsZoneGroups"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AA"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AA
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Automation to stream to a Log Analytics workspace when any Automation which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Automation to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-AA
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Automation/automationAccounts","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"JobLogs","enabled":"[parameters(''logsEnabled'')]"},{"category":"JobStreams","enabled":"[parameters(''logsEnabled'')]"},{"category":"DscNodeStatus","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Automation/automationAccounts/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACI"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACI
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Container Instances to stream to a Log Analytics workspace when any ACR which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics enabled.
          display_name: Deploy Diagnostic Settings for Container Instances to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-ACI
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.ContainerInstance/containerGroups","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.ContainerInstance/containerGroups/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACR"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACR
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Container Registry to stream to a Log Analytics workspace when any ACR which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics  enabled.
          display_name: Deploy Diagnostic Settings for Container Registry to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-ACR
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.ContainerRegistry/registries","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"ContainerRegistryLoginEvents","enabled":"[parameters(''logsEnabled'')]"},{"category":"ContainerRegistryRepositoryEvents","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.ContainerRegistry/registries/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AKS"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AKS
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Kubernetes Service to stream to a Log Analytics workspace when any Kubernetes Service which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled.
          display_name: Deploy Diagnostic Settings for Kubernetes Service to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-AKS
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.ContainerService/managedClusters","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"kube-audit","enabled":"[parameters(''logsEnabled'')]"},{"category":"kube-apiserver","enabled":"[parameters(''logsEnabled'')]"},{"category":"kube-controller-manager","enabled":"[parameters(''logsEnabled'')]"},{"category":"kube-scheduler","enabled":"[parameters(''logsEnabled'')]"},{"category":"cluster-autoscaler","enabled":"[parameters(''logsEnabled'')]"},{"category":"guard","enabled":"[parameters(''logsEnabled'')]"},{"category":"kube-audit-admin","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.ContainerService/managedClusters/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-APIMgmt"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-APIMgmt
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for API Management to stream to a Log Analytics workspace when any API Management which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for API Management to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-APIMgmt
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.ApiManagement/service","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"GatewayLogs","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.ApiManagement/service/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ActivityLog"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ActivityLog
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Activity Log to stream to a Log Analytics workspace when any Activity Log which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with category enabled.
          display_name: Deploy Diagnostic Settings for Activity Log to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: All
          name: Deploy-Diagnostics-ActivityLog
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Primary Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"Incremental","parameters":{"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","location":"Global","name":"subscriptionToLa","properties":{"logs":[{"category":"Administrative","enabled":"[parameters(''logsEnabled'')]"},{"category":"Security","enabled":"[parameters(''logsEnabled'')]"},{"category":"ServiceHealth","enabled":"[parameters(''logsEnabled'')]"},{"category":"Alert","enabled":"[parameters(''logsEnabled'')]"},{"category":"Recommendation","enabled":"[parameters(''logsEnabled'')]"},{"category":"Policy","enabled":"[parameters(''logsEnabled'')]"},{"category":"Autoscale","enabled":"[parameters(''logsEnabled'')]"},{"category":"ResourceHealth","enabled":"[parameters(''logsEnabled'')]"}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Insights/diagnosticSettings"}],"variables":{}}}},"deploymentScope":"Subscription","existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"existenceScope":"Subscription","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AnalysisService"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AnalysisService
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Analysis Services to stream to a Log Analytics workspace when any Analysis Services which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Analysis Services to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-AnalysisService
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.AnalysisServices/servers","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"Engine","enabled":"[parameters(''logsEnabled'')]"},{"category":"Service","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.AnalysisServices/servers/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApiForFHIR"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApiForFHIR
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Azure API for FHIR to stream to a Log Analytics workspace when any Azure API for FHIR which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Azure API for FHIR to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-ApiForFHIR
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.HealthcareApis/services","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"AuditLogs","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.HealthcareApis/services/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApplicationGateway"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApplicationGateway
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Application Gateway to stream to a Log Analytics workspace when any Application Gateway which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Application Gateway to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-ApplicationGateway
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Network/applicationGateways","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"ApplicationGatewayAccessLog","enabled":"[parameters(''logsEnabled'')]"},{"category":"ApplicationGatewayPerformanceLog","enabled":"[parameters(''logsEnabled'')]"},{"category":"ApplicationGatewayFirewallLog","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Network/applicationGateways/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Batch"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Batch
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Batch to stream to a Log Analytics workspace when any Batch which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Batch to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-Batch
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Batch/batchAccounts","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"ServiceLog","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Batch/batchAccounts/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CDNEndpoints"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CDNEndpoints
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for CDN Endpoint to stream to a Log Analytics workspace when any CDN Endpoint which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for CDN Endpoint to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-CDNEndpoints
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Cdn/profiles/endpoints","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''fullName'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"CoreAnalytics","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Cdn/profiles/endpoints/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CognitiveServices"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CognitiveServices
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Cognitive Services to stream to a Log Analytics workspace when any Cognitive Services which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Cognitive Services to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-CognitiveServices
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.CognitiveServices/accounts","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"Audit","enabled":"[parameters(''logsEnabled'')]"},{"category":"RequestResponse","enabled":"[parameters(''logsEnabled'')]"},{"category":"Trace","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.CognitiveServices/accounts/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CosmosDB"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CosmosDB
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Cosmos DB to stream to a Log Analytics workspace when any Cosmos DB which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Cosmos DB to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-CosmosDB
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.DocumentDB/databaseAccounts","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"DataPlaneRequests","enabled":"[parameters(''logsEnabled'')]"},{"category":"MongoRequests","enabled":"[parameters(''logsEnabled'')]"},{"category":"QueryRuntimeStatistics","enabled":"[parameters(''logsEnabled'')]"},{"category":"PartitionKeyStatistics","enabled":"[parameters(''logsEnabled'')]"},{"category":"PartitionKeyRUConsumption","enabled":"[parameters(''logsEnabled'')]"},{"category":"ControlPlaneRequests","enabled":"[parameters(''logsEnabled'')]"},{"category":"CassandraRequests","enabled":"[parameters(''logsEnabled'')]"},{"category":"GremlinRequests","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"Requests","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.DocumentDB/databaseAccounts/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DLAnalytics"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DLAnalytics
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Data Lake Analytics to stream to a Log Analytics workspace when any Data Lake Analytics which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Data Lake Analytics to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-DLAnalytics
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.DataLakeAnalytics/accounts","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"Audit","enabled":"[parameters(''logsEnabled'')]"},{"category":"Requests","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.DataLakeAnalytics/accounts/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataExplorerCluster"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataExplorerCluster
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Azure Data Explorer Cluster to stream to a Log Analytics workspace when any Azure Data Explorer Cluster which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Azure Data Explorer Cluster to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-DataExplorerCluster
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Kusto/Clusters","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"SucceededIngestion","enabled":"[parameters(''logsEnabled'')]"},{"category":"FailedIngestion","enabled":"[parameters(''logsEnabled'')]"},{"category":"IngestionBatching","enabled":"[parameters(''logsEnabled'')]"},{"category":"Command","enabled":"[parameters(''logsEnabled'')]"},{"category":"Query","enabled":"[parameters(''logsEnabled'')]"},{"category":"TableUsageStatistics","enabled":"[parameters(''logsEnabled'')]"},{"category":"TableDetails","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Kusto/Clusters/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataFactory"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataFactory
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Data Factory to stream to a Log Analytics workspace when any Data Factory which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Data Factory to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-DataFactory
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.DataFactory/factories","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"ActivityRuns","enabled":"[parameters(''logsEnabled'')]"},{"category":"PipelineRuns","enabled":"[parameters(''logsEnabled'')]"},{"category":"TriggerRuns","enabled":"[parameters(''logsEnabled'')]"},{"category":"SSISPackageEventMessages","enabled":"[parameters(''logsEnabled'')]"},{"category":"SSISPackageExecutableStatistics","enabled":"[parameters(''logsEnabled'')]"},{"category":"SSISPackageEventMessageContext","enabled":"[parameters(''logsEnabled'')]"},{"category":"SSISPackageExecutionComponentPhases","enabled":"[parameters(''logsEnabled'')]"},{"category":"SSISPackageExecutionDataStatistics","enabled":"[parameters(''logsEnabled'')]"},{"category":"SSISIntegrationRuntimeLogs","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.DataFactory/factories/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataLakeStore"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataLakeStore
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Azure Data Lake Store to stream to a Log Analytics workspace when anyAzure Data Lake Store which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Azure Data Lake Store to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-DataLakeStore
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.DataLakeStore/accounts","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"Audit","enabled":"[parameters(''logsEnabled'')]"},{"category":"Requests","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.DataLakeStore/accounts/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Databricks"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Databricks
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Databricks to stream to a Log Analytics workspace when any Databricks which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Databricks to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-Databricks
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Databricks/workspaces","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"dbfs","enabled":"[parameters(''logsEnabled'')]"},{"category":"clusters","enabled":"[parameters(''logsEnabled'')]"},{"category":"accounts","enabled":"[parameters(''logsEnabled'')]"},{"category":"jobs","enabled":"[parameters(''logsEnabled'')]"},{"category":"notebook","enabled":"[parameters(''logsEnabled'')]"},{"category":"ssh","enabled":"[parameters(''logsEnabled'')]"},{"category":"workspace","enabled":"[parameters(''logsEnabled'')]"},{"category":"secrets","enabled":"[parameters(''logsEnabled'')]"},{"category":"sqlPermissions","enabled":"[parameters(''logsEnabled'')]"},{"category":"instancePools","enabled":"[parameters(''logsEnabled'')]"}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Databricks/workspaces/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSub"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSub
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Event Grid subscriptions to stream to a Log Analytics workspace when any Event Grid subscriptions which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Event Grid subscriptions to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-EventGridSub
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.EventGrid/eventSubscriptions","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.EventGrid/eventSubscriptions/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSystemTopic"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSystemTopic
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Event Grid System Topic to stream to a Log Analytics workspace when any Event Grid System Topic which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Event Grid System Topic to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-EventGridSystemTopic
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.EventGrid/systemTopics","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"DeliveryFailures","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.EventGrid/systemTopics/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridTopic"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridTopic
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Event Grid Topic to stream to a Log Analytics workspace when any Event Grid Topic which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Event Grid Topic to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-EventGridTopic
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.EventGrid/topics","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"DeliveryFailures","enabled":"[parameters(''logsEnabled'')]"},{"category":"PublishFailures","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.EventGrid/topics/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventHub"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventHub
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Event Hubs to stream to a Log Analytics workspace when any Event Hubs which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Event Hubs to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-EventHub
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.EventHub/namespaces","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"ArchiveLogs","enabled":"[parameters(''logsEnabled'')]"},{"category":"OperationalLogs","enabled":"[parameters(''logsEnabled'')]"},{"category":"AutoScaleLogs","enabled":"[parameters(''logsEnabled'')]"},{"category":"KafkaCoordinatorLogs","enabled":"[parameters(''logsEnabled'')]"},{"category":"KafkaUserErrorLogs","enabled":"[parameters(''logsEnabled'')]"},{"category":"EventHubVNetConnectionEvent","enabled":"[parameters(''logsEnabled'')]"},{"category":"CustomerManagedKeyUserLogs","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.EventHub/namespaces/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ExpressRoute"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ExpressRoute
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for ExpressRoute to stream to a Log Analytics workspace when any ExpressRoute which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for ExpressRoute to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-ExpressRoute
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Network/expressRouteCircuits","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"PeeringRouteLog","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Network/expressRouteCircuits/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Firewall"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Firewall
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Firewall to stream to a Log Analytics workspace when any Firewall which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Firewall to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-Firewall
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Network/azureFirewalls","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"AzureFirewallApplicationRule","enabled":"[parameters(''logsEnabled'')]"},{"category":"AzureFirewallNetworkRule","enabled":"[parameters(''logsEnabled'')]"},{"category":"AzureFirewallDnsProxy","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Network/azureFirewalls/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-FrontDoor"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-FrontDoor
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Front Door to stream to a Log Analytics workspace when any Front Door which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Front Door to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-FrontDoor
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Network/frontDoors","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"FrontdoorAccessLog","enabled":"[parameters(''logsEnabled'')]"},{"category":"FrontdoorWebApplicationFirewallLog","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Network/frontDoors/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Function"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Function
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Azure Function App to stream to a Log Analytics workspace when any function app which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Azure Function App to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-Function
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Web/sites","field":"type"},{"contains":"functionapp","value":"[field(''kind'')]"}]},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"FunctionAppLogs","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Web/sites/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-HDInsight"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-HDInsight
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for HDInsight to stream to a Log Analytics workspace when any HDInsight which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for HDInsight to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-HDInsight
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.HDInsight/clusters","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.HDInsight/clusters/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-KeyVault"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-KeyVault
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Key Vault to stream to a Log Analytics workspace when any Key Vault which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Key Vault to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-KeyVault
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.KeyVault/vaults","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"AuditEvent","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.KeyVault/vaults/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LoadBalancer"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LoadBalancer
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Load Balancer to stream to a Log Analytics workspace when any Load Balancer which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Load Balancer to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-LoadBalancer
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Network/loadBalancers","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"LoadBalancerAlertEvent","enabled":"[parameters(''logsEnabled'')]"},{"category":"LoadBalancerProbeHealthStatus","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Network/loadBalancers/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogicAppsISE"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogicAppsISE
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Logic Apps integration service environment to stream to a Log Analytics workspace when any Logic Apps integration service environment which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Logic Apps integration service environment to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-LogicAppsISE
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Logic/integrationAccounts","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"IntegrationAccountTrackingEvents","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Logic/integrationAccounts/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogicAppsWF"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogicAppsWF
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Logic Apps Workflow runtimeto stream to a Log Analytics workspace when any Logic Apps Workflow runtime which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Logic Apps Workflow runtime to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-LogicAppsWF
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Logic/workflows","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"WorkflowRuntime","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Logic/workflows/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MariaDB"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MariaDB
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for MariaDB to stream to a Log Analytics workspace when any MariaDB  which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for MariaDB to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-MariaDB
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.DBforMariaDB/servers","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"MySqlSlowLogs","enabled":"[parameters(''logsEnabled'')]"},{"category":"MySqlAuditLogs","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.DBforMariaDB/servers/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MediaService"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MediaService
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Azure Media Service to stream to a Log Analytics workspace when any Azure Media Service which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Azure Media Service to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-MediaService
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Media/mediaServices","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"KeyDeliveryRequests","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Media/mediaServices/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MlWorkspace"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MlWorkspace
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Machine Learning workspace to stream to a Log Analytics workspace when any Machine Learning workspace which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Machine Learning workspace to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-MlWorkspace
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.MachineLearningServices/workspaces","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"AmlComputeClusterEvent","enabled":"[parameters(''logsEnabled'')]"},{"category":"AmlComputeClusterNodeEvent","enabled":"[parameters(''logsEnabled'')]"},{"category":"AmlComputeJobEvent","enabled":"[parameters(''logsEnabled'')]"},{"category":"AmlComputeCpuGpuUtilization","enabled":"[parameters(''logsEnabled'')]"},{"category":"AmlRunStatusChangedEvent","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"Run","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null},{"category":"Model","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":true}},{"category":"Quota","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null},{"category":"Resource","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.MachineLearningServices/workspaces/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MySQL"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MySQL
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Database for MySQL to stream to a Log Analytics workspace when any Database for MySQL which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Database for MySQL to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-MySQL
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.DBforMySQL/servers","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"MySqlSlowLogs","enabled":"[parameters(''logsEnabled'')]"},{"category":"MySqlAuditLogs","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.DBforMySQL/servers/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NIC"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NIC
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Network Interfaces to stream to a Log Analytics workspace when any Network Interfaces which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Network Interfaces to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-NIC
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Network/networkInterfaces","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Network/networkInterfaces/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NetworkSecurityGroups"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NetworkSecurityGroups
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Network Security Groups to stream to a Log Analytics workspace when any Network Security Groups which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Network Security Groups to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-NetworkSecurityGroups
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Network/networkSecurityGroups","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"NetworkSecurityGroupEvent","enabled":"[parameters(''logsEnabled'')]"},{"category":"NetworkSecurityGroupRuleCounter","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Network/networkSecurityGroups/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PostgreSQL"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PostgreSQL
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Database for PostgreSQL to stream to a Log Analytics workspace when any Database for PostgreSQL which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Database for PostgreSQL to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-PostgreSQL
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.DBforPostgreSQL/servers","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"PostgreSQLLogs","enabled":"[parameters(''logsEnabled'')]"},{"category":"QueryStoreRuntimeStatistics","enabled":"[parameters(''logsEnabled'')]"},{"category":"QueryStoreWaitStatistics","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.DBforPostgreSQL/servers/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PowerBIEmbedded"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PowerBIEmbedded
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Power BI Embedded to stream to a Log Analytics workspace when any Power BI Embedded which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Power BI Embedded to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-PowerBIEmbedded
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.PowerBIDedicated/capacities","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"Engine","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.PowerBIDedicated/capacities/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-RecoveryVault"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-RecoveryVault
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Recovery Services vaults to stream to a Log Analytics workspace when any Recovery Services vaults which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Recovery Services vaults to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-RecoveryVault
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.RecoveryServices/vaults","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logAnalyticsDestinationType":"Dedicated","logs":[{"category":"CoreAzureBackup","enabled":"[parameters(''logsEnabled'')]"},{"category":"AddonAzureBackupAlerts","enabled":"[parameters(''logsEnabled'')]"},{"category":"AddonAzureBackupJobs","enabled":"[parameters(''logsEnabled'')]"},{"category":"AddonAzureBackupPolicy","enabled":"[parameters(''logsEnabled'')]"},{"category":"AddonAzureBackupProtectedInstance","enabled":"[parameters(''logsEnabled'')]"},{"category":"AddonAzureBackupStorage","enabled":"[parameters(''logsEnabled'')]"},{"category":"AzureBackupReport","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.RecoveryServices/vaults/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"count":{"field":"Microsoft.Insights/diagnosticSettings/logs[*]","where":{"allOf":[{"field":"Microsoft.Insights/diagnosticSettings/logs[*].Category","in":["CoreAzureBackup","AddonAzureBackupJobs","AddonAzureBackupAlerts","AddonAzureBackupPolicy","AddonAzureBackupStorage","AddonAzureBackupProtectedInstance","AzureBackupReport"]},{"equals":"True","field":"Microsoft.Insights/diagnosticSettings/logs[*].Enabled"}]}},"equals":7},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"},{"equals":"Dedicated","field":"Microsoft.Insights/diagnosticSettings/logAnalyticsDestinationType"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-RedisCache"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-RedisCache
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Redis Cache to stream to a Log Analytics workspace when any Redis Cache which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Redis Cache to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-RedisCache
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Cache/redis","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Cache/redis/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Relay"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Relay
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Relay to stream to a Log Analytics workspace when any Relay which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Relay to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-Relay
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Relay/namespaces","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"HybridConnectionsEvent","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Relay/namespaces/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLDBs"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLDBs
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for SQL Databases to stream to a Log Analytics workspace when any SQL Databases  which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for SQL Databases  to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-SQLDBs
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Sql/servers/databases","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''fullName'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"SQLInsights","enabled":"[parameters(''logsEnabled'')]"},{"category":"AutomaticTuning","enabled":"[parameters(''logsEnabled'')]"},{"category":"DevOpsOperationsAudit","enabled":"[parameters(''logsEnabled'')]"},{"category":"QueryStoreRuntimeStatistics","enabled":"[parameters(''logsEnabled'')]"},{"category":"QueryStoreWaitStatistics","enabled":"[parameters(''logsEnabled'')]"},{"category":"Errors","enabled":"[parameters(''logsEnabled'')]"},{"category":"DatabaseWaitStatistics","enabled":"[parameters(''logsEnabled'')]"},{"category":"Timeouts","enabled":"[parameters(''logsEnabled'')]"},{"category":"Blocks","enabled":"[parameters(''logsEnabled'')]"},{"category":"Deadlocks","enabled":"[parameters(''logsEnabled'')]"},{"category":"SQLSecurityAuditEvents","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Sql/servers/databases/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLElasticPools"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLElasticPools
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for SQL Elastic Pools to stream to a Log Analytics workspace when any SQL Elastic Pools which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for SQL Elastic Pools to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-SQLElasticPools
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Sql/servers/elasticPools","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''fullName'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Sql/servers/elasticPools/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLMI"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLMI
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for SQL Managed Instances to stream to a Log Analytics workspace when any SQL Managed Instances which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for SQL Managed Instances to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-SQLMI
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Sql/managedInstances","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"ResourceUsageStats","enabled":"[parameters(''logsEnabled'')]"},{"category":"SQLSecurityAuditEvents","enabled":"[parameters(''logsEnabled'')]"},{"category":"DevOpsOperationsAudit","enabled":"[parameters(''logsEnabled'')]"}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Sql/managedInstances/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SearchServices"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SearchServices
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Search Services to stream to a Log Analytics workspace when any Search Services which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Search Services to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-SearchServices
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Search/searchServices","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"OperationLogs","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Search/searchServices/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ServiceBus"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ServiceBus
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for ServiceBus to stream to a Log Analytics workspace when any ServiceBus which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Service Bus namespaces  to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-ServiceBus
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.ServiceBus/namespaces","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"OperationalLogs","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.ServiceBus/namespaces/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SignalR"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SignalR
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for SignalR to stream to a Log Analytics workspace when any SignalR which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for SignalR to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-SignalR
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.SignalRService/SignalR","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"AllLogs","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.SignalRService/SignalR/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-StreamAnalytics"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-StreamAnalytics
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Stream Analytics to stream to a Log Analytics workspace when any Stream Analytics which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Stream Analytics to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-StreamAnalytics
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.StreamAnalytics/streamingjobs","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"Execution","enabled":"[parameters(''logsEnabled'')]"},{"category":"Authoring","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.StreamAnalytics/streamingjobs/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TimeSeriesInsights"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TimeSeriesInsights
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Time Series Insights to stream to a Log Analytics workspace when any Time Series Insights which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Time Series Insights to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-TimeSeriesInsights
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.TimeSeriesInsights/environments","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"Ingress","enabled":"[parameters(''logsEnabled'')]"},{"category":"Management","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.TimeSeriesInsights/environments/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TrafficManager"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TrafficManager
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Traffic Manager to stream to a Log Analytics workspace when any Traffic Manager which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Traffic Manager to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-TrafficManager
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Network/trafficManagerProfiles","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"ProbeHealthStatusEvents","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Network/trafficManagerProfiles/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VM"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VM
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Virtual Machines to stream to a Log Analytics workspace when any Virtual Machines which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Virtual Machines to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-VM
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Compute/virtualMachines","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false}}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Compute/virtualMachines/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VMSS"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VMSS
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Virtual Machine Scale Sets  to stream to a Log Analytics workspace when any Virtual Machine Scale Sets  which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Virtual Machine Scale Sets to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-VMSS
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Compute/virtualMachineScaleSets","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false}}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Compute/virtualMachineScaleSets/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VNetGW"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VNetGW
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for VPN Gateway to stream to a Log Analytics workspace when any VPN Gateway which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled.
          display_name: Deploy Diagnostic Settings for VPN Gateway to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-VNetGW
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Network/virtualNetworkGateways","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"GatewayDiagnosticLog","enabled":"[parameters(''logsEnabled'')]"},{"category":"IKEDiagnosticLog","enabled":"[parameters(''logsEnabled'')]"},{"category":"P2SDiagnosticLog","enabled":"[parameters(''logsEnabled'')]"},{"category":"RouteDiagnosticLog","enabled":"[parameters(''logsEnabled'')]"},{"category":"RouteDiagnosticLog","enabled":"[parameters(''logsEnabled'')]"},{"category":"TunnelDiagnosticLog","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Network/virtualNetworkGateways/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VirtualNetwork"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VirtualNetwork
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Virtual Network to stream to a Log Analytics workspace when any Virtual Network which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for Virtual Network to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-VirtualNetwork
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Network/virtualNetworks","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"VMProtectionAlerts","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false}}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Network/virtualNetworks/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDAppGroup"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDAppGroup
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for WVD Application group to stream to a Log Analytics workspace when any application group which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all and categorys enabled.
          display_name: Deploy Diagnostic Settings for WVD Application group to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-WVDAppGroup
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.DesktopVirtualization/applicationGroups","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"Checkpoint","enabled":"[parameters(''logsEnabled'')]"},{"category":"Error","enabled":"[parameters(''logsEnabled'')]"},{"category":"Management","enabled":"[parameters(''logsEnabled'')]"}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.DesktopVirtualization/applicationGroups/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDHostPools"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDHostPools
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for WVD Host Pools to stream to a Log Analytics workspace when any Host Pools which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all and categorys enabled.
          display_name: Deploy Diagnostic Settings for WVD Host Pools to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-WVDHostPools
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.DesktopVirtualization/hostpools","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"Checkpoint","enabled":"[parameters(''logsEnabled'')]"},{"category":"Error","enabled":"[parameters(''logsEnabled'')]"},{"category":"Management","enabled":"[parameters(''logsEnabled'')]"},{"category":"Connection","enabled":"[parameters(''logsEnabled'')]"},{"category":"HostRegistration","enabled":"[parameters(''logsEnabled'')]"},{"category":"AgentHealthStatus","enabled":"[parameters(''logsEnabled'')]"}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.DesktopVirtualization/hostpools/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDWorkspace"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDWorkspace
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for WVD Workspace to stream to a Log Analytics workspace when any Workspace which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all and categorys enabled.
          display_name: Deploy Diagnostic Settings for WVD Workspace to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-WVDWorkspace
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.DesktopVirtualization/workspaces","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"Checkpoint","enabled":"[parameters(''logsEnabled'')]"},{"category":"Error","enabled":"[parameters(''logsEnabled'')]"},{"category":"Management","enabled":"[parameters(''logsEnabled'')]"},{"category":"Feed","enabled":"[parameters(''logsEnabled'')]"}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.DesktopVirtualization/workspaces/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WebServerFarm"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WebServerFarm
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for App Service Plan to stream to a Log Analytics workspace when any App Service Plan which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for App Service Plan to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-WebServerFarm
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Web/serverfarms","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Web/serverfarms/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Website"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Website
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for Web App to stream to a Log Analytics workspace when any Web App which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for App Service to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-Website
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Web/sites","field":"type"},{"notContains":"functionapp","value":"[field(''kind'')]"}]},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"AppServiceAntivirusScanAuditLogs","enabled":"[parameters(''logsEnabled'')]"},{"category":"AppServiceHTTPLogs","enabled":"[parameters(''logsEnabled'')]"},{"category":"AppServiceConsoleLogs","enabled":"[parameters(''logsEnabled'')]"},{"category":"AppServiceHTTPLogs","enabled":"[parameters(''logsEnabled'')]"},{"category":"AppServiceAppLogs","enabled":"[parameters(''logsEnabled'')]"},{"category":"AppServiceFileAuditLogs","enabled":"[parameters(''logsEnabled'')]"},{"category":"AppServiceAuditLogs","enabled":"[parameters(''logsEnabled'')]"},{"category":"AppServiceIPSecAuditLogs","enabled":"[parameters(''logsEnabled'')]"},{"category":"AppServicePlatformLogs","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Web/sites/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-iotHub"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-iotHub
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys the diagnostic settings for IoT Hub to stream to a Log Analytics workspace when any IoT Hub which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled
          display_name: Deploy Diagnostic Settings for IoT Hub to Log Analytics workspace
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Diagnostics-iotHub
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"logsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable logs stream to the Log Analytics workspace - True or False","displayName":"Enable logs"},"type":"String"},"metricsEnabled":{"allowedValues":["True","False"],"defaultValue":"True","metadata":{"description":"Whether to enable metrics stream to the Log Analytics workspace - True or False","displayName":"Enable metrics"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Devices/IotHubs","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"logsEnabled":{"value":"[parameters(''logsEnabled'')]"},"metricsEnabled":{"value":"[parameters(''metricsEnabled'')]"},"profileName":{"value":"[parameters(''profileName'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"logAnalytics":{"type":"String"},"logsEnabled":{"type":"String"},"metricsEnabled":{"type":"String"},"profileName":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-05-01-preview","dependsOn":[],"location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''), ''/'', ''Microsoft.Insights/'', parameters(''profileName''))]","properties":{"logs":[{"category":"Connections","enabled":"[parameters(''logsEnabled'')]"},{"category":"DeviceTelemetry","enabled":"[parameters(''logsEnabled'')]"},{"category":"C2DCommands","enabled":"[parameters(''logsEnabled'')]"},{"category":"DeviceIdentityOperations","enabled":"[parameters(''logsEnabled'')]"},{"category":"FileUploadOperations","enabled":"[parameters(''logsEnabled'')]"},{"category":"Routes","enabled":"[parameters(''logsEnabled'')]"},{"category":"D2CTwinOperations","enabled":"[parameters(''logsEnabled'')]"},{"category":"C2DTwinOperations","enabled":"[parameters(''logsEnabled'')]"},{"category":"TwinQueries","enabled":"[parameters(''logsEnabled'')]"},{"category":"JobsOperations","enabled":"[parameters(''logsEnabled'')]"},{"category":"DirectMethods","enabled":"[parameters(''logsEnabled'')]"},{"category":"DistributedTracing","enabled":"[parameters(''logsEnabled'')]"},{"category":"Configurations","enabled":"[parameters(''logsEnabled'')]"},{"category":"DeviceStreams","enabled":"[parameters(''logsEnabled'')]"}],"metrics":[{"category":"AllMetrics","enabled":"[parameters(''metricsEnabled'')]","retentionPolicy":{"days":0,"enabled":false},"timeGrain":null}],"workspaceId":"[parameters(''logAnalytics'')]"},"type":"Microsoft.Devices/IotHubs/providers/diagnosticSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/logs.enabled"},{"equals":"true","field":"Microsoft.Insights/diagnosticSettings/metrics.enabled"},{"equals":"[parameters(''logAnalytics'')]","field":"Microsoft.Insights/diagnosticSettings/workspaceId"}]},"name":"setByPolicy","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Insights/diagnosticSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-FirewallPolicy"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-FirewallPolicy
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys Azure Firewall Manager policy in subscription where the policy is assigned.
          display_name: Deploy Azure Firewall Manager policy in the subscription
          management_group_name: myorg-3
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: All
          name: Deploy-FirewallPolicy
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"fwPolicyRegion":{"metadata":{"description":"Select Azure region for Azure Firewall Policy","displayName":"fwPolicyRegion","strongType":"location"},"type":"String"},"fwpolicy":{"defaultValue":{},"metadata":{"description":"Object describing Azure Firewall Policy","displayName":"fwpolicy"},"type":"Object"},"rgName":{"metadata":{"description":"Provide name for resource group.","displayName":"rgName"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"Incremental","parameters":{"fwPolicy":{"value":"[parameters(''fwPolicy'')]"},"fwPolicyRegion":{"value":"[parameters(''fwPolicyRegion'')]"},"rgName":{"value":"[parameters(''rgName'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json","contentVersion":"1.0.0.0","outputs":{},"parameters":{"fwPolicy":{"type":"object"},"fwPolicyRegion":{"type":"String"},"rgName":{"type":"String"}},"resources":[{"apiVersion":"2018-05-01","location":"[deployment().location]","name":"[parameters(''rgName'')]","properties":{},"type":"Microsoft.Resources/resourceGroups"},{"apiVersion":"2018-05-01","dependsOn":["[resourceId(''Microsoft.Resources/resourceGroups/'', parameters(''rgName''))]"],"name":"fwpolicies","properties":{"mode":"Incremental","template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json","contentVersion":"1.0.0.0","outputs":{},"parameters":{},"resources":[{"apiVersion":"2019-09-01","dependsOn":[],"location":"[parameters(''fwpolicy'').location]","name":"[parameters(''fwpolicy'').firewallPolicyName]","properties":{},"resources":[{"apiVersion":"2019-09-01","dependsOn":["[resourceId(''Microsoft.Network/firewallPolicies'',parameters(''fwpolicy'').firewallPolicyName)]"],"name":"[parameters(''fwpolicy'').ruleGroups.name]","properties":{"priority":"[parameters(''fwpolicy'').ruleGroups.properties.priority]","rules":"[parameters(''fwpolicy'').ruleGroups.properties.rules]"},"type":"ruleGroups"}],"tags":{},"type":"Microsoft.Network/firewallPolicies"}],"variables":{}}},"resourceGroup":"[parameters(''rgName'')]","type":"Microsoft.Resources/deployments"}]}}},"deploymentScope":"Subscription","existenceScope":"ResourceGroup","resourceGroupName":"[parameters(''rgName'')]","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"],"type":"Microsoft.Network/firewallPolicies"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-HUB"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-HUB
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys Virtual Network to be used as hub virtual network in desired region in the subscription where this policy is assigned.
          display_name: Deploy Virtual Network to be used as hub virtual network in desired region
          management_group_name: myorg-3
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: All
          name: Deploy-HUB
          parameters: '{"HUB":{"metadata":{"description":"Object describing HUB","displayName":"HUB"},"type":"Object"},"azfw":{"defaultValue":{},"metadata":{"description":"Object describing Azure Firewall","displayName":"azfw"},"type":"Object"},"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"ergw":{"defaultValue":{},"metadata":{"description":"Object describing ExpressRoute gateway","displayName":"ergw"},"type":"Object"},"hubName":{"metadata":{"description":"Name of the Hub","displayName":"hubName"},"type":"String"},"rgName":{"metadata":{"description":"Provide name for resource group.","displayName":"rgName"},"type":"String"},"vpngw":{"defaultValue":{},"metadata":{"description":"Object describing VPN gateway","displayName":"vpngw"},"type":"Object"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"Incremental","parameters":{"HUB":{"value":"[parameters(''HUB'')]"},"azfw":{"value":"[parameters(''azfw'')]"},"ergw":{"value":"[parameters(''ergw'')]"},"hubName":{"value":"[parameters(''hubName'')]"},"rgName":{"value":"[parameters(''rgName'')]"},"vpngw":{"value":"[parameters(''vpngw'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json","contentVersion":"1.0.0.0","parameters":{"HUB":{"metadata":{"description":"Object describing HUB"},"type":"object"},"azfw":{"defaultValue":{},"metadata":{"description":"Object describing the Azure Firewall"},"type":"object"},"ergw":{"defaultValue":{},"metadata":{"description":"Object describing ExpressRoute gateway"},"type":"object"},"hubName":{"metadata":{"description":"Name of the HUB"},"type":"String"},"rgName":{"metadata":{"description":"Provide name for resource group.","displayName":"rgName"},"type":"String"},"vpngw":{"defaultValue":{},"metadata":{"description":"Object describing VPN gateway"},"type":"object"}},"resources":[{"apiVersion":"2020-06-01","location":"[deployment().location]","name":"[parameters(''rgName'')]","properties":{},"type":"Microsoft.Resources/resourceGroups"},{"apiVersion":"2020-06-01","dependsOn":["[resourceId(''Microsoft.Resources/resourceGroups/'', parameters(''rgName''))]"],"name":"[concat(parameters(''hubName''),''-'', parameters(''HUB'').location)]","properties":{"mode":"Incremental","template":{"$schema":"https: //schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","parameters":{},"resources":[{"apiVersion":"2020-04-01","location":"[parameters(''HUB'').location]","name":"[parameters(''hubName'')]","properties":{"addressSpace":{"addressPrefixes":["[parameters(''HUB'').addressPrefix]"]},"subnets":[{"name":"Infrastructure","properties":{"addressPrefix":"[if(not(empty(parameters(''HUB'').subnets.infra)),parameters(''HUB'').subnets.infra, json(''null''))]"}},{"name":"AzureFirewallSubnet","properties":{"addressPrefix":"[if(not(empty(parameters(''HUB'').subnets.azfw)),parameters(''HUB'').subnets.azfw, json(''null''))]"}},{"name":"GatewaySubnet","properties":{"addressPrefix":"[if(not(empty(parameters(''HUB'').subnets.gw)),parameters(''HUB'').subnets.gw, json(''null''))]"}}]},"type":"Microsoft.Network/virtualNetworks"}],"variables":{}}},"resourceGroup":"[parameters(''rgName'')]","type":"Microsoft.Resources/deployments"},{"apiVersion":"2020-06-01","condition":"[greater(length(parameters(''vpngw'')),0)]","dependsOn":["[concat(parameters(''hubName''),''-'', parameters(''HUB'').location)]"],"name":"[concat(parameters(''hubName''),''-vpngw'')]","properties":{"mode":"Incremental","template":{"$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","parameters":{},"resources":[{"apiVersion":"2020-05-01","location":"[parameters(''HUB'').location]","name":"[concat(parameters(''vpngw'').name,''-pip'')]","properties":{"publicIPAllocationMethod":"Dynamic"},"tags":{},"type":"Microsoft.Network/publicIpAddresses"},{"apiVersion":"2020-05-01","dependsOn":["[concat(''Microsoft.Network/publicIPAddresses/'', parameters(''vpngw'').name,''-pip'')]"],"location":"[parameters(''HUB'').location]","name":"[parameters(''vpngw'').name]","properties":{"gatewayType":"Vpn","ipConfigurations":[{"name":"default","properties":{"privateIPAllocationMethod":"Dynamic","publicIpAddress":{"id":"[concat(subscription().id,''/resourceGroups/'',parameters(''rgName''), ''/providers'',''/Microsoft.Network/publicIPAddresses/'', parameters(''vpngw'').name,''-pip'')]"},"subnet":{"id":"[concat(subscription().id,''/resourceGroups/'',parameters(''rgName''), ''/providers'',''/Microsoft.Network/virtualNetworks/'', parameters(''hubName''),''/subnets/GatewaySubnet'')]"}}}],"sku":{"name":"[parameters(''vpngw'').sku]","tier":"[parameters(''vpngw'').sku]"},"vpnType":"[parameters(''vpngw'').vpnType]"},"tags":{},"type":"Microsoft.Network/virtualNetworkGateways"}],"variables":{}}},"resourceGroup":"[parameters(''rgName'')]","type":"Microsoft.Resources/deployments"},{"apiVersion":"2020-06-01","condition":"[greater(length(parameters(''ergw'')),0)]","dependsOn":["[concat(parameters(''hubName''),''-'', parameters(''HUB'').location)]"],"name":"[concat(parameters(''hubName''),''-ergw'')]","properties":{"mode":"Incremental","template":{"$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","parameters":{},"resources":[{"apiVersion":"2020-05-01","location":"[parameters(''HUB'').location]","name":"[concat(parameters(''ergw'').name,''-pip'')]","properties":{"publicIPAllocationMethod":"Dynamic"},"tags":{},"type":"Microsoft.Network/publicIpAddresses"},{"apiVersion":"2020-05-01","dependsOn":["[concat(''Microsoft.Network/publicIPAddresses/'', parameters(''ergw'').name,''-pip'')]"],"location":"[parameters(''HUB'').location]","name":"[parameters(''ergw'').name]","properties":{"gatewayType":"ExpressRoute","ipConfigurations":[{"name":"default","properties":{"privateIPAllocationMethod":"Dynamic","publicIpAddress":{"id":"[concat(subscription().id,''/resourceGroups/'',parameters(''rgName''), ''/providers'',''/Microsoft.Network/publicIPAddresses/'', parameters(''ergw'').name,''-pip'')]"},"subnet":{"id":"[concat(subscription().id,''/resourceGroups/'',parameters(''rgName''), ''/providers'',''/Microsoft.Network/virtualNetworks/'', parameters(''hubName''),''/subnets/GatewaySubnet'')]"}}}],"sku":{"name":"[parameters(''ergw'').sku]","tier":"[parameters(''ergw'').sku]"}},"tags":{},"type":"Microsoft.Network/virtualNetworkGateways"}],"variables":{}}},"resourceGroup":"[parameters(''rgName'')]","type":"Microsoft.Resources/deployments"},{"apiVersion":"2020-06-01","condition":"[greater(length(parameters(''azfw'')),0)]","dependsOn":["[concat(parameters(''hubName''),''-'', parameters(''HUB'').location)]"],"name":"[concat(parameters(''hubName''),''-azfw'')]","properties":{"mode":"Incremental","template":{"$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","parameters":{},"resources":[{"apiVersion":"2020-05-01","location":"[parameters(''azfw'').location]","name":"[concat(parameters(''azfw'').name,''-pip'')]","properties":{"publicIPAllocationMethod":"Static"},"sku":{"name":"Standard"},"tags":{},"type":"Microsoft.Network/publicIpAddresses","zones":"[if(contains(parameters(''azfw''),''pipZones''),parameters(''azfw'').pipZones,json(''null''))]"},{"apiVersion":"2020-05-01","dependsOn":["[concat(parameters(''azfw'').name,''-pip'')]"],"location":"[parameters(''azfw'').location]","name":"[parameters(''azfw'').name]","properties":{"additionalProperties":"[if(contains(parameters(''azfw''),''additionalProperties''),parameters(''azfw'').additionalProperties,json(''null''))]","firewallPolicy":"[if(contains(parameters(''azfw''),''firewallPolicy''),parameters(''azfw'').firewallPolicy,json(''null''))]","ipConfigurations":[{"name":"[concat(parameters(''azfw'').name,''-pip'')]","properties":{"publicIPAddress":{"id":"[concat(subscription().id,''/resourceGroups/'',parameters(''rgName''), ''/providers'',''/Microsoft.Network/publicIPAddresses/'', parameters(''azfw'').name,''-pip'')]"},"subnet":{"id":"[concat(subscription().id,''/resourceGroups/'',parameters(''rgName''), ''/providers'',''/Microsoft.Network/virtualNetworks/'', parameters(''hubName''),''/subnets/AzureFirewallSubnet'')]"}}}],"sku":"[if(contains(parameters(''azfw''),''sku''),parameters(''azfw'').sku,json(''null''))]","threatIntelMode":"[parameters(''azfw'').threatIntelMode]"},"tags":{},"type":"Microsoft.Network/azureFirewalls","zones":"[if(contains(parameters(''azfw''),''fwZones''),parameters(''azfw'').fwZones,json(''null''))]"}],"variables":{}}},"resourceGroup":"[parameters(''rgName'')]","type":"Microsoft.Resources/deployments"}],"variables":{}}}},"deploymentScope":"Subscription","existenceScope":"ResourceGroup","name":"[parameters(''hubName'')]","resourceGroupName":"[parameters(''rgName'')]","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"],"type":"Microsoft.Network/virtualNetworks"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-LA-Config"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-LA-Config
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: 'Deploy the configurations to the Log Analytics in the subscription. This includes a list of solutions like update, automation etc and  enables the vminsight counters. '
          display_name: Deploy the configurations to the Log Analytics in the subscription
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-LA-Config
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"workspaceName":{"metadata":{"description":"Provide name of existing Log Analytics workspace","displayName":"workspaceName"},"type":"String"},"workspaceRegion":{"metadata":{"description":"Select region of existing Log Analytics workspace","displayName":"workspaceRegion"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.OperationalInsights/workspaces","field":"type"}]},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"workspaceName":{"value":"[parameters(''workspaceName'')]"},"workspaceRegion":{"value":"[parameters(''workspaceRegion'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"workspaceName":{"type":"String"},"workspaceRegion":{"type":"String"}},"resources":[{"apiVersion":"2015-11-01-preview","kind":"LinuxPerformanceCollection","name":"[concat(parameters(''workspaceName''), ''/LinuxPerfCollection'')]","properties":{"state":"Enabled"},"type":"Microsoft.OperationalInsights/workspaces/datasources"},{"apiVersion":"2015-11-01-preview","kind":"LinuxPerformanceObject","name":"[concat(parameters(''workspaceName''), ''/'', variables(''vmInsightsPerfCounters'').linuxDiskObject.armResourceName)]","properties":{"instanceName":"[variables(''vmInsightsPerfCounters'').linuxDiskObject.instanceName]","intervalSeconds":"[variables(''vmInsightsPerfCounters'').linuxDiskObject.intervalSeconds]","objectName":"[variables(''vmInsightsPerfCounters'').linuxDiskObject.objectName]","performanceCounters":"[variables(''vmInsightsPerfCounters'').linuxDiskArray]"},"type":"Microsoft.OperationalInsights/workspaces/dataSources"},{"apiVersion":"2015-11-01-preview","kind":"LinuxPerformanceObject","name":"[concat(parameters(''workspaceName''), ''/'', variables(''vmInsightsPerfCounters'').linuxMemoryObject.armResourceName)]","properties":{"instanceName":"[variables(''vmInsightsPerfCounters'').linuxMemoryObject.instanceName]","intervalSeconds":"[variables(''vmInsightsPerfCounters'').linuxMemoryObject.intervalSeconds]","objectName":"[variables(''vmInsightsPerfCounters'').linuxMemoryObject.objectName]","performanceCounters":"[variables(''vmInsightsPerfCounters'').linuxMemoryArray]"},"type":"Microsoft.OperationalInsights/workspaces/dataSources"},{"apiVersion":"2015-11-01-preview","kind":"LinuxPerformanceObject","name":"[concat(parameters(''workspaceName''), ''/'', variables(''vmInsightsPerfCounters'').linuxCpuObject.armResourceName)]","properties":{"instanceName":"[variables(''vmInsightsPerfCounters'').linuxCpuObject.instanceName]","intervalSeconds":"[variables(''vmInsightsPerfCounters'').linuxCpuObject.intervalSeconds]","objectName":"[variables(''vmInsightsPerfCounters'').linuxCpuObject.objectName]","performanceCounters":"[variables(''vmInsightsPerfCounters'').linuxCpuArray]"},"type":"Microsoft.OperationalInsights/workspaces/dataSources"},{"apiVersion":"2015-11-01-preview","kind":"LinuxPerformanceObject","name":"[concat(parameters(''workspaceName''), ''/'', variables(''vmInsightsPerfCounters'').linuxNetworkObject.armResourceName)]","properties":{"instanceName":"[variables(''vmInsightsPerfCounters'').linuxNetworkObject.instanceName]","intervalSeconds":"[variables(''vmInsightsPerfCounters'').linuxNetworkObject.intervalSeconds]","objectName":"[variables(''vmInsightsPerfCounters'').linuxNetworkObject.objectName]","performanceCounters":"[variables(''vmInsightsPerfCounters'').linuxNetworkArray]"},"type":"Microsoft.OperationalInsights/workspaces/dataSources"},{"apiVersion":"2015-11-01-preview","copy":{"count":"[length(variables(''vmInsightsPerfCounters'').windowsArray)]","name":"counterCopy"},"kind":"WindowsPerformanceCounter","name":"[concat(parameters(''workspaceName''), ''/'', variables(''vmInsightsPerfCounters'').windowsArray[copyIndex()].armName)]","properties":{"counterName":"[variables(''vmInsightsPerfCounters'').windowsArray[copyIndex()].counterName]","instanceName":"[variables(''vmInsightsPerfCounters'').windowsArray[copyIndex()].instanceName]","intervalSeconds":"[variables(''vmInsightsPerfCounters'').windowsArray[copyIndex()].intervalSeconds]","objectName":"[variables(''vmInsightsPerfCounters'').windowsArray[copyIndex()].objectName]"},"type":"Microsoft.OperationalInsights/workspaces/dataSources"},{"apiVersion":"2015-11-01-preview","copy":{"count":"[length(variables(''batch1'').solutions)]","name":"solutionCopy"},"location":"[parameters(''workspaceRegion'')]","name":"[concat(variables(''batch1'').solutions[copyIndex()].Name)]","plan":{"name":"[variables(''batch1'').solutions[copyIndex()].name]","product":"[concat(''OMSGallery/'', variables(''batch1'').solutions[copyIndex()].marketplaceName)]","promotionCode":"","publisher":"Microsoft"},"properties":{"workspaceResourceId":"[resourceId(''Microsoft.OperationalInsights/workspaces/'', parameters(''workspaceName''))]"},"type":"Microsoft.OperationsManagement/solutions"}],"variables":{"batch1":{"solutions":[{"marketplaceName":"Security","name":"[concat(''Security'', ''('', parameters(''workspaceName''), '')'')]"},{"marketplaceName":"AgentHealthAssessment","name":"[concat(''AgentHealthAssessment'', ''('', parameters(''workspaceName''), '')'')]"},{"marketplaceName":"ChangeTracking","name":"[concat(''ChangeTracking'', ''('', parameters(''workspaceName''), '')'')]"},{"marketplaceName":"Updates","name":"[concat(''Updates'', ''('', parameters(''workspaceName''), '')'')]"},{"marketplaceName":"AzureActivity","name":"[concat(''AzureActivity'', ''('', parameters(''workspaceName''), '')'')]"},{"marketplaceName":"AzureAutomation","name":"[concat(''AzureAutomation'', ''('', parameters(''workspaceName''), '')'')]"},{"marketplaceName":"ADAssessment","name":"[concat(''ADAssessment'', ''('', parameters(''workspaceName''), '')'')]"},{"marketplaceName":"SQLAssessment","name":"[concat(''SQLAssessment'', ''('', parameters(''workspaceName''), '')'')]"},{"marketplaceName":"VMInsights","name":"[concat(''VMInsights'', ''('', parameters(''workspaceName''), '')'')]"},{"marketplaceName":"ServiceMap","name":"[concat(''ServiceMap'', ''('', parameters(''workspaceName''), '')'')]"},{"marketplaceName":"SecurityInsights","name":"[concat(''SecurityInsights'', ''('', parameters(''workspaceName''), '')'')]"}]},"vmInsightsPerfCounters":{"linuxCpuArray":[{"counterName":"% Processor Time"}],"linuxCpuObject":{"armResourceName":"Processor","instanceName":"*","intervalSeconds":10,"objectName":"Processor"},"linuxDiskArray":[{"counterName":"% Used Inodes"},{"counterName":"Free Megabytes"},{"counterName":"% Used Space"},{"counterName":"Disk Transfers/sec"},{"counterName":"Disk Reads/sec"},{"counterName":"Disk writes/sec"}],"linuxDiskObject":{"armResourceName":"Disk","instanceName":"*","intervalSeconds":10,"objectName":"Logical Disk"},"linuxMemoryArray":[{"counterName":"Available MBytes Memory"}],"linuxMemoryObject":{"armResourceName":"Memory","instanceName":"*","intervalSeconds":10,"objectName":"Memory"},"linuxNetworkArray":[{"counterName":"Total Bytes Received"},{"counterName":"Total Bytes Transmitted"}],"linuxNetworkObject":{"armResourceName":"Network","instanceName":"*","intervalSeconds":10,"objectName":"Network"},"windowsArray":[{"armName":"counter1","counterName":"% Free Space","instanceName":"*","intervalSeconds":10,"objectName":"LogicalDisk"},{"armName":"counter2","counterName":"Avg. Disk sec/Read","instanceName":"*","intervalSeconds":10,"objectName":"LogicalDisk"},{"armName":"counter3","counterName":"Avg. Disk sec/Transfer","instanceName":"*","intervalSeconds":10,"objectName":"LogicalDisk"},{"armName":"counter4","counterName":"Avg. Disk sec/Write","instanceName":"*","intervalSeconds":10,"objectName":"LogicalDisk"},{"armName":"counter5","counterName":"Disk Read Bytes/sec","instanceName":"*","intervalSeconds":10,"objectName":"LogicalDisk"},{"armName":"counter6","counterName":"Disk Reads/sec","instanceName":"*","intervalSeconds":10,"objectName":"LogicalDisk"},{"armName":"counter7","counterName":"Disk Transfers/sec","instanceName":"*","intervalSeconds":10,"objectName":"LogicalDisk"},{"armName":"counter8","counterName":"Disk Write Bytes/sec","instanceName":"*","intervalSeconds":10,"objectName":"LogicalDisk"},{"armName":"counter9","counterName":"Disk Writes/sec","instanceName":"*","intervalSeconds":10,"objectName":"LogicalDisk"},{"armName":"counter10","counterName":"Free Megabytes","instanceName":"*","intervalSeconds":10,"objectName":"LogicalDisk"},{"armName":"counter11","counterName":"Available MBytes","instanceName":"*","intervalSeconds":10,"objectName":"Memory"},{"armName":"counter12","counterName":"Bytes Received/sec","instanceName":"*","intervalSeconds":10,"objectName":"Network Adapter"},{"armName":"counter13","counterName":"Bytes Sent/sec","instanceName":"*","intervalSeconds":10,"objectName":"Network Adapter"},{"armName":"counter14","counterName":"% Processor Time","instanceName":"*","intervalSeconds":10,"objectName":"Processor"}]}}}}},"deploymentScope":"resourceGroup","existenceCondition":{"allOf":[{"field":"name","like":"[parameters(''workspaceName'')]"},{"equals":"[parameters(''workspaceRegion'')]","field":"location"}]},"existenceScope":"Subscription","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.OperationalInsights/workspaces"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Log-Analytics"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Log-Analytics
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys Log Analytics and Automation account to the subscription where the policy is assigned.
          display_name: Deploy the Log Analytics in the subscription
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: All
          name: Deploy-Log-Analytics
          parameters: '{"automationAccountName":{"metadata":{"description":"Provide name for automation account","displayName":"automationAccountName"},"type":"String"},"automationRegion":{"metadata":{"description":"Select Azure region for Automation account","displayName":"automationRegion"},"type":"String"},"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"retentionInDays":{"defaultValue":"30","metadata":{"description":"Select data retention (days) for Log Analytics.","displayName":"Data retention"},"type":"String"},"rgName":{"metadata":{"description":"Provide name for resource group.","displayName":"rgName"},"type":"String"},"workspaceName":{"metadata":{"description":"Provide name for log analytics workspace","displayName":"workspaceName"},"type":"String"},"workspaceRegion":{"metadata":{"description":"Select Azure region for Log Analytics","displayName":"workspaceRegion"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"Incremental","parameters":{"automationAccountName":{"value":"[parameters(''automationAccountName'')]"},"automationRegion":{"value":"[parameters(''automationRegion'')]"},"retentionInDays":{"value":"[parameters(''retentionInDays'')]"},"rgName":{"value":"[parameters(''rgName'')]"},"workspaceName":{"value":"[parameters(''workspaceName'')]"},"workspaceRegion":{"value":"[parameters(''workspaceRegion'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json","contentVersion":"1.0.0.0","outputs":{},"parameters":{"automationAccountName":{"type":"String"},"automationRegion":{"type":"String"},"retentionInDays":{"type":"String"},"rgName":{"type":"String"},"workspaceName":{"type":"String"},"workspaceRegion":{"type":"String"}},"resources":[{"apiVersion":"2018-05-01","location":"[deployment().location]","name":"[parameters(''rgName'')]","properties":{},"type":"Microsoft.Resources/resourceGroups"},{"apiVersion":"2018-05-01","dependsOn":["[resourceId(''Microsoft.Resources/resourceGroups/'', parameters(''rgName''))]"],"name":"log-analytics","properties":{"mode":"Incremental","template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json","contentVersion":"1.0.0.0","outputs":{},"parameters":{},"resources":[{"apiVersion":"2015-10-31","comments":"Automation account for ","location":"[parameters(''AutomationRegion'')]","name":"[parameters(''AutomationAccountName'')]","properties":{"sku":{"name":"Basic"}},"type":"Microsoft.Automation/automationAccounts"},{"apiVersion":"2020-08-01","location":"[parameters(''workspaceRegion'')]","name":"[parameters(''workspaceName'')]","properties":{"enableLogAccessUsingOnlyResourcePermissions":true,"retentionInDays":"[int(parameters(''retentionInDays''))]","sku":{"name":"PerGB2018"}},"resources":[{"apiVersion":"2020-08-01","dependsOn":["[resourceId(''Microsoft.OperationalInsights/workspaces/'', parameters(''workspaceName''))]","[resourceId(''Microsoft.Automation/automationAccounts/'', parameters(''AutomationAccountName''))]"],"name":"Automation","properties":{"resourceId":"[concat(subscription().id, ''/resourceGroups/'', parameters(''rgName''), ''/providers/Microsoft.Automation/automationAccounts/'', parameters(''AutomationAccountName''))]"},"type":"linkedServices"}],"type":"Microsoft.OperationalInsights/workspaces"}],"variables":{}}},"resourceGroup":"[parameters(''rgName'')]","type":"Microsoft.Resources/deployments"}],"variables":{}}}},"deploymentScope":"Subscription","existenceCondition":{"allOf":[{"field":"name","like":"[parameters(''workspaceName'')]"}]},"existenceScope":"Subscription","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.OperationalInsights/workspaces"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-MySQL-sslEnforcement"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-MySQL-sslEnforcement
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy a specific min TLS version requirement and enforce SSL on Azure Database for MySQL server. Enforce the Server to client applications using minimum version of Tls to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.
          display_name: Azure Database for MySQL server deploy a specific min TLS version and enforce SSL.
          management_group_name: myorg-3
          metadata: '{"category":"SQL","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-MySQL-sslEnforcement
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy minimum TLS version Azure Database for MySQL server","displayName":"Effect minimum TLS version Azure Database for MySQL server"},"type":"String"},"minimalTlsVersion":{"allowedValues":["TLS1_2","TLS1_0","TLS1_1","TLSEnforcementDisabled"],"defaultValue":"TLS1_2","metadata":{"description":"Select version  minimum TLS version Azure Database for MySQL server to enforce","displayName":"Select version minimum TLS for MySQL server"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.DBforMySQL/servers","field":"type"},{"anyOf":[{"field":"Microsoft.DBforMySQL/servers/sslEnforcement","notEquals":"Enabled"},{"field":"Microsoft.DBforMySQL/servers/minimalTlsVersion","notequals":"[parameters(''minimalTlsVersion'')]"}]}]},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"minimalTlsVersion":{"value":"[parameters(''minimalTlsVersion'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"minimalTlsVersion":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-12-01","location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''))]","properties":{"minimalTlsVersion":"[parameters(''minimalTlsVersion'')]","sslEnforcement":"[if(equals(parameters(''minimalTlsVersion''), ''TLSEnforcementDisabled''),''Disabled'', ''Enabled'')]"},"type":"Microsoft.DBforMySQL/servers"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"Enabled","field":"Microsoft.DBforMySQL/servers/sslEnforcement"},{"equals":"[parameters(''minimalTlsVersion'')]","field":"Microsoft.DBforMySQL/servers/minimalTlsVersion"}]},"roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/8e3af657-a8ff-443c-a75c-2fe8c4bcb635"],"type":"Microsoft.DBforMySQL/servers"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys NSG flow logs and traffic analytics to a storageaccountid with a specfied retention period.
          display_name: Deploys NSG flow logs and traffic analytics
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Nsg-FlowLogs
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"flowAnalyticsEnabled":{"defaultValue":false,"metadata":{"displayName":"Enable Traffic Analytics"},"type":"Boolean"},"logAnalytics":{"defaultValue":"","metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Resource ID of Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"retention":{"defaultValue":5,"metadata":{"displayName":"Retention"},"type":"Integer"},"storageAccountResourceId":{"metadata":{"displayName":"Storage Account Resource Id","strongType":"Microsoft.Storage/storageAccounts"},"type":"String"},"trafficAnalyticsInterval":{"defaultValue":60,"metadata":{"displayName":"Traffic Analytics processing interval mins (10/60)"},"type":"Integer"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Network/networkSecurityGroups","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"flowAnalyticsEnabled":{"value":"[parameters(''flowAnalyticsEnabled'')]"},"location":{"value":"[field(''location'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"networkSecurityGroupName":{"value":"[field(''name'')]"},"resourceGroupName":{"value":"[resourceGroup().name]"},"retention":{"value":"[parameters(''retention'')]"},"storageAccountResourceId":{"value":"[parameters(''storageAccountResourceId'')]"},"trafficAnalyticsInterval":{"value":"[parameters(''trafficAnalyticsInterval'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"flowAnalyticsEnabled":{"type":"bool"},"location":{"type":"String"},"logAnalytics":{"type":"String"},"networkSecurityGroupName":{"type":"String"},"resourceGroupName":{"type":"String"},"retention":{"type":"int"},"storageAccountResourceId":{"type":"String"},"trafficAnalyticsInterval":{"type":"int"}},"resources":[{"apiVersion":"2020-05-01","location":"[parameters(''location'')]","name":"[take(concat(''NetworkWatcher_'', toLower(parameters(''location'')),  ''/'', parameters(''networkSecurityGroupName''), ''-'', parameters(''resourceGroupName''), ''-flowlog'' ), 80)]","properties":{"enabled":true,"flowAnalyticsConfiguration":{"networkWatcherFlowAnalyticsConfiguration":{"enabled":"[bool(parameters(''flowAnalyticsEnabled''))]","trafficAnalyticsInterval":"[parameters(''trafficAnalyticsInterval'')]","workspaceId":"[if(not(empty(parameters(''logAnalytics''))), reference(parameters(''logAnalytics''), ''2020-03-01-preview'', ''Full'').properties.customerId, json(''null'')) ]","workspaceRegion":"[if(not(empty(parameters(''logAnalytics''))), reference(parameters(''logAnalytics''), ''2020-03-01-preview'', ''Full'').location, json(''null'')) ]","workspaceResourceId":"[if(not(empty(parameters(''logAnalytics''))), parameters(''logAnalytics''), json(''null''))]"}},"format":{"type":"JSON","version":2},"retentionPolicy":{"days":"[parameters(''retention'')]","enabled":true},"storageId":"[parameters(''storageAccountResourceId'')]","targetResourceId":"[resourceId(parameters(''resourceGroupName''), ''Microsoft.Network/networkSecurityGroups'', parameters(''networkSecurityGroupName''))]"},"type":"Microsoft.Network/networkWatchers/flowLogs"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Network/networkWatchers/flowLogs/enabled"},{"equals":"[parameters(''flowAnalyticsEnabled'')]","field":"Microsoft.Network/networkWatchers/flowLogs/flowAnalyticsConfiguration.networkWatcherFlowAnalyticsConfiguration.enabled"}]},"resourceGroupName":"NetworkWatcherRG","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa","/providers/microsoft.authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"],"type":"Microsoft.Network/networkWatchers/flowLogs"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs-to-LA"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs-to-LA
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys NSG flow logs and traffic analytics to Log Analytics with a specfied retention period.
          display_name: Deploys NSG flow logs and traffic analytics to Log Analytics
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.1.0"}'
          mode: Indexed
          name: Deploy-Nsg-FlowLogs-to-LA
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"interval":{"defaultValue":60,"metadata":{"displayName":"Traffic Analytics processing interval mins (10/60)"},"type":"Integer"},"retention":{"defaultValue":5,"metadata":{"displayName":"Retention"},"type":"Integer"},"workspace":{"defaultValue":"","metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Resource ID of Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Network/networkSecurityGroups","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"Incremental","parameters":{"interval":{"value":"[parameters(''interval'')]"},"location":{"value":"[field(''location'')]"},"networkSecurityGroup":{"value":"[field(''id'')]"},"retention":{"value":"[parameters(''retention'')]"},"workspace":{"value":"[parameters(''workspace'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"interval":{"type":"int"},"location":{"type":"String"},"networkSecurityGroup":{"type":"String"},"retention":{"type":"int"},"time":{"defaultValue":"[utcNow()]","type":"String"},"workspace":{"type":"String"}},"resources":[{"apiVersion":"2019-10-01","name":"[concat(variables(''resourceGroupName''), ''.'', variables(''securityGroupName''))]","properties":{"mode":"Incremental","template":{"$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","resources":[{"apiVersion":"2019-06-01","kind":"StorageV2","location":"[parameters(''location'')]","name":"[variables(''storageAccountName'')]","properties":{},"sku":{"name":"Standard_LRS","tier":"Standard"},"type":"Microsoft.Storage/storageAccounts"}]}},"resourceGroup":"[variables(''resourceGroupName'')]","type":"Microsoft.Resources/deployments"},{"apiVersion":"2019-10-01","dependsOn":["[concat(variables(''resourceGroupName''), ''.'', variables(''securityGroupName''))]"],"name":"[concat(''NetworkWatcherRG'', ''.'', variables(''securityGroupName''))]","properties":{"mode":"Incremental","template":{"$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","resources":[{"apiVersion":"2020-05-01","location":"[parameters(''location'')]","name":"[concat(''NetworkWatcher_'', toLower(parameters(''location'')))]","properties":{},"resources":[{"apiVersion":"2019-11-01","dependsOn":["[concat(''NetworkWatcher_'', toLower(parameters(''location'')))]"],"location":"[parameters(''location'')]","name":"[concat(variables(''securityGroupName''), ''-Network-flowlog'')]","properties":{"enabled":true,"flowAnalyticsConfiguration":{"networkWatcherFlowAnalyticsConfiguration":{"enabled":true,"trafficAnalyticsInterval":"[parameters(''interval'')]","workspaceResourceId":"[parameters(''workspace'')]"}},"format":{"type":"JSON","version":2},"retentionPolicy":{"days":"[parameters(''retention'')]","enabled":true},"storageId":"[concat(subscription().id, ''/resourceGroups/'', variables(''resourceGroupName''), ''/providers/Microsoft.Storage/storageAccounts/'', variables(''storageAccountName''))]","targetResourceId":"[parameters(''networkSecurityGroup'')]"},"type":"flowLogs"}],"type":"Microsoft.Network/networkWatchers"}]}},"resourceGroup":"NetworkWatcherRG","type":"Microsoft.Resources/deployments"}],"variables":{"resourceGroupName":"[split(parameters(''networkSecurityGroup''), ''/'')[4]]","securityGroupName":"[split(parameters(''networkSecurityGroup''), ''/'')[8]]","storageAccountName":"[concat(''es'', uniqueString(variables(''securityGroupName''), parameters(''time'')))]"}}}},"deploymentScope":"subscription","existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Network/networkWatchers/flowLogs/enabled"}]},"existenceScope":"resourceGroup","name":"[if(empty(coalesce(field(''Microsoft.Network/networkSecurityGroups/flowLogs[*].id''))), ''null/null'', concat(split(first(field(''Microsoft.Network/networkSecurityGroups/flowLogs[*].id'')), ''/'')[8], ''/'', split(first(field(''Microsoft.Network/networkSecurityGroups/flowLogs[*].id'')), ''/'')[10]))]","resourceGroupName":"[if(empty(coalesce(field(''Microsoft.Network/networkSecurityGroups/flowLogs''))), ''NetworkWatcherRG'', split(first(field(''Microsoft.Network/networkSecurityGroups/flowLogs[*].id'')), ''/'')[4])]","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7","/providers/Microsoft.Authorization/roleDefinitions/81a9662b-bebf-436f-a333-f67b29880f12","/providers/Microsoft.Authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293","/providers/Microsoft.Authorization/roleDefinitions/17d1049b-9a84-46fb-8f53-869881c3d3ab","/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"],"type":"Microsoft.Network/networkWatchers/flowlogs"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-PostgreSQL-sslEnforcement"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-PostgreSQL-sslEnforcement
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy a specific min TLS version requirement and enforce SSL on Azure Database for PostgreSQL server. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.
          display_name: 'Azure Database for PostgreSQL server deploy a specific min TLS version requirement and enforce SSL '
          management_group_name: myorg-3
          metadata: '{"category":"SQL","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-PostgreSQL-sslEnforcement
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy minimum TLS version Azure Database for PostgreSQL server","displayName":"Effect Azure Database for PostgreSQL server"},"type":"String"},"minimalTlsVersion":{"allowedValues":["TLS1_2","TLS1_0","TLS1_1","TLSEnforcementDisabled"],"defaultValue":"TLS1_2","metadata":{"description":"Select version minimum TLS version Azure Database for PostgreSQL server to enforce","displayName":"Select version for PostgreSQL server"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.DBforPostgreSQL/servers","field":"type"},{"anyOf":[{"field":"Microsoft.DBforPostgreSQL/servers/sslEnforcement","notEquals":"Enabled"},{"field":"Microsoft.DBforPostgreSQL/servers/minimalTlsVersion","notEquals":"[parameters(''minimalTlsVersion'')]"}]}]},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"minimalTlsVersion":{"value":"[parameters(''minimalTlsVersion'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"minimalTlsVersion":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2017-12-01","location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''))]","properties":{"minimalTlsVersion":"[parameters(''minimalTlsVersion'')]","sslEnforcement":"[if(equals(parameters(''minimalTlsVersion''), ''TLSEnforcementDisabled''),''Disabled'', ''Enabled'')]"},"type":"Microsoft.DBforPostgreSQL/servers"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"Enabled","field":"Microsoft.DBforPostgreSQL/servers/sslEnforcement"},{"equals":"[parameters(''minimalTlsVersion'')]","field":"Microsoft.DBforPostgreSQL/servers/minimalTlsVersion"}]},"name":"current","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/8e3af657-a8ff-443c-a75c-2fe8c4bcb635"],"type":"Microsoft.DBforPostgreSQL/servers"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-SQL-minTLS"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-SQL-minTLS
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploys a specific min TLS version requirement and enforce SSL on SQL servers. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.
          display_name: SQL servers deploys a specific min TLS version requirement.
          management_group_name: myorg-3
          metadata: '{"category":"SQL","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-SQL-minTLS
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy minimum TLS version SQL servers","displayName":"Effect SQL servers"},"type":"String"},"minimalTlsVersion":{"allowedValues":["1.2","1.1","1.0"],"defaultValue":"1.2","metadata":{"description":"Select version minimum TLS version SQL servers to enforce","displayName":"Select version for SQL server"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Sql/servers","field":"type"},{"field":"Microsoft.Sql/servers/minimalTlsVersion","notequals":"[parameters(''minimalTlsVersion'')]"}]},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"minimalTlsVersion":{"value":"[parameters(''minimalTlsVersion'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"minimalTlsVersion":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2019-06-01-preview","location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''))]","properties":{"minimalTlsVersion":"[parameters(''minimalTlsVersion'')]"},"type":"Microsoft.Sql/servers"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"[parameters(''minimalTlsVersion'')]","field":"Microsoft.Sql/servers/minimalTlsVersion"}]},"name":"current","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/8e3af657-a8ff-443c-a75c-2fe8c4bcb635"],"type":"Microsoft.Sql/servers"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-AuditingSettings"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-AuditingSettings
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy auditing settings to SQL Database when it not exist in the deployment
          display_name: Deploy SQL database auditing settings
          management_group_name: myorg-3
          metadata: '{"category":"SQL","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Sql-AuditingSettings
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Sql/servers/databases","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"sqlServerDataBaseName":{"value":"[field(''name'')]"},"sqlServerName":{"value":"[first(split(field(''fullname''),''/''))]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"sqlServerDataBaseName":{"type":"String"},"sqlServerName":{"type":"String"}},"resources":[{"apiVersion":"2017-03-01-preview","name":"[concat( parameters(''sqlServerName''),''/'',parameters(''sqlServerDataBaseName''),''/default'')]","properties":{"auditActionsAndGroups":["BATCH_COMPLETED_GROUP","DATABASE_OBJECT_CHANGE_GROUP","SCHEMA_OBJECT_CHANGE_GROUP","BACKUP_RESTORE_GROUP","APPLICATION_ROLE_CHANGE_PASSWORD_GROUP","DATABASE_PRINCIPAL_CHANGE_GROUP","DATABASE_PRINCIPAL_IMPERSONATION_GROUP","DATABASE_ROLE_MEMBER_CHANGE_GROUP","USER_CHANGE_PASSWORD_GROUP","DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP","DATABASE_OBJECT_PERMISSION_CHANGE_GROUP","DATABASE_PERMISSION_CHANGE_GROUP","SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP","SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP","FAILED_DATABASE_AUTHENTICATION_GROUP"],"isAzureMonitorTargetEnabled":true,"state":"enabled"},"type":"Microsoft.Sql/servers/databases/auditingSettings"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"enabled","field":"Microsoft.Sql/servers/databases/auditingSettings/state"},{"equals":"true","field":"Microsoft.Sql/servers/databases/auditingSettings/isAzureMonitorTargetEnabled"}]},"name":"default","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/056cd41c-7e88-42e1-933e-88ba6a50c9c3"],"type":"Microsoft.Sql/servers/databases/auditingSettings"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-SecurityAlertPolicies"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-SecurityAlertPolicies
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy the security Alert Policies configuration with email admin accounts when it not exist in current configuration
          display_name: Deploy SQL Database security Alert Policies configuration with email admin accounts
          management_group_name: myorg-3
          metadata: '{"category":"SQL","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Sql-SecurityAlertPolicies
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Sql/servers/databases","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"sqlServerDataBaseName":{"value":"[field(''name'')]"},"sqlServerName":{"value":"[first(split(field(''fullname''),''/''))]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"sqlServerDataBaseName":{"type":"String"},"sqlServerName":{"type":"String"}},"resources":[{"apiVersion":"2018-06-01-preview","name":"[concat(parameters(''sqlServerName''),''/'',parameters(''sqlServerDataBaseName''),''/default'')]","properties":{"disabledAlerts":[""],"emailAccountAdmins":true,"emailAddresses":["admin@contoso.com"],"retentionDays":0,"state":"Enabled","storageAccountAccessKey":"","storageEndpoint":null},"type":"Microsoft.Sql/servers/databases/securityAlertPolicies"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"Enabled","field":"Microsoft.Sql/servers/databases/securityAlertPolicies/state"}]},"roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/056cd41c-7e88-42e1-933e-88ba6a50c9c3"],"type":"Microsoft.Sql/servers/databases/securityAlertPolicies"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-Tde"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-Tde
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy the Transparent Data Encryption when it is not enabled in the deployment
          display_name: 'Deploy SQL Database Transparent Data Encryption '
          management_group_name: myorg-3
          metadata: '{"category":"SQL","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Sql-Tde
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Sql/servers/databases","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"sqlServerDataBaseName":{"value":"[field(''name'')]"},"sqlServerName":{"value":"[first(split(field(''fullname''),''/''))]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"sqlServerDataBaseName":{"type":"String"},"sqlServerName":{"type":"String"}},"resources":[{"apiVersion":"2014-04-01","name":"[concat( parameters(''sqlServerName''),''/'',parameters(''sqlServerDataBaseName''),''/current'')]","properties":{"status":"Enabled"},"type":"Microsoft.Sql/servers/databases/transparentDataEncryption"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"Enabled","field":"Microsoft.Sql/transparentDataEncryption.status"}]},"roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/056cd41c-7e88-42e1-933e-88ba6a50c9c3"],"type":"Microsoft.Sql/servers/databases/transparentDataEncryption"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-vulnerabilityAssessments"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-vulnerabilityAssessments
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy SQL Database vulnerability Assessments when it not exist in the deployment. To the specific  storage account in the parameters
          display_name: Deploy SQL Database vulnerability Assessments
          management_group_name: myorg-3
          metadata: '{"category":"SQL","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Sql-vulnerabilityAssessments
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"vulnerabilityAssessmentsEmail":{"metadata":{"description":"The email address to send alerts","displayName":"The email address to send alerts"},"type":"String"},"vulnerabilityAssessmentsStorageID":{"metadata":{"description":"The storage account ID to store assessments","displayName":"The storage account ID to store assessments"},"type":"String"}}'
          policy_rule: '{"if":{"equals":"Microsoft.Sql/servers/databases","field":"type"},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"sqlServerDataBaseName":{"value":"[field(''name'')]"},"sqlServerName":{"value":"[first(split(field(''fullname''),''/''))]"},"vulnerabilityAssessmentsEmail":{"value":"[parameters(''vulnerabilityAssessmentsEmail'')]"},"vulnerabilityAssessmentsStorageID":{"value":"[parameters(''vulnerabilityAssessmentsStorageID'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"sqlServerDataBaseName":{"type":"String"},"sqlServerName":{"type":"String"},"vulnerabilityAssessmentsEmail":{"type":"String"},"vulnerabilityAssessmentsStorageID":{"type":"String"}},"resources":[{"apiVersion":"2017-03-01-preview","name":"[concat(parameters(''sqlServerName''),''/'',parameters(''sqlServerDataBaseName''),''/default'')]","properties":{"recurringScans":{"emailSubscriptionAdmins":false,"emails":["[parameters(''vulnerabilityAssessmentsEmail'')]"],"isEnabled":true},"storageAccountAccessKey":"[listkeys(parameters(''vulnerabilityAssessmentsStorageID''), providers(''Microsoft.Storage'', ''storageAccounts'').apiVersions[0]).keys[0].value]","storageContainerPath":"[concat(''https://'', last( split(parameters(''vulnerabilityAssessmentsStorageID'') ,  ''/'') ) , ''.blob.core.windows.net/vulneraabilitylogs'')]"},"type":"Microsoft.Sql/servers/databases/vulnerabilityAssessments"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"[parameters(''vulnerabilityAssessmentsEmail'')]","field":"Microsoft.Sql/servers/databases/vulnerabilityAssessments/recurringScans.emails"},{"equals":true,"field":"Microsoft.Sql/servers/databases/vulnerabilityAssessments/recurringScans.isEnabled"}]},"roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/056cd41c-7e88-42e1-933e-88ba6a50c9c3","/providers/Microsoft.Authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa"],"type":"Microsoft.Sql/servers/databases/vulnerabilityAssessments"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-SqlMi-minTLS"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-SqlMi-minTLS
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy a specific min TLS version requirement and enforce SSL on SQL managed instances. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.
          display_name: SQL managed instances deploy a specific min TLS version requirement.
          management_group_name: myorg-3
          metadata: '{"category":"SQL","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-SqlMi-minTLS
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy minimum TLS version SQL servers","displayName":"Effect SQL servers"},"type":"String"},"minimalTlsVersion":{"allowedValues":["1.2","1.1","1.0"],"defaultValue":"1.2","metadata":{"description":"Select version minimum TLS version SQL servers to enforce","displayName":"Select version for SQL server"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Sql/managedInstances","field":"type"},{"field":"Microsoft.Sql/managedInstances/minimalTlsVersion","notequals":"[parameters(''minimalTlsVersion'')]"}]},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"minimalTlsVersion":{"value":"[parameters(''minimalTlsVersion'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"minimalTlsVersion":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2020-02-02-preview","location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''))]","properties":{"minimalTlsVersion":"[parameters(''minimalTlsVersion'')]"},"type":"Microsoft.Sql/managedInstances"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"[parameters(''minimalTlsVersion'')]","field":"Microsoft.Sql/managedInstances/minimalTlsVersion"}]},"name":"current","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/8e3af657-a8ff-443c-a75c-2fe8c4bcb635"],"type":"Microsoft.Sql/managedInstances"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Storage-sslEnforcement"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Storage-sslEnforcement
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy a specific min TLS version requirement and enforce SSL on Azure STorage. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against 'man in the middle' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.
          display_name: 'Azure Storage deploy a specific min TLS version requirement and enforce SSL/HTTPS '
          management_group_name: myorg-3
          metadata: '{"category":"Storage","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Storage-sslEnforcement
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy minimum TLS version Azure STorage","displayName":"Effect Azure STorage"},"type":"String"},"minimumTlsVersion":{"allowedValues":["TLS1_2","TLS1_1","TLS1_0"],"defaultValue":"TLS1_2","metadata":{"description":"Select version minimum TLS version Azure STorage to enforce","displayName":"Select version for PostgreSQL server"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Storage/storageAccounts","field":"type"},{"anyOf":[{"field":"Microsoft.Storage/storageAccounts/supportsHttpsTrafficOnly","notEquals":"true"},{"field":"Microsoft.Storage/storageAccounts/minimumTlsVersion","notEquals":"[parameters(''minimumTlsVersion'')]"}]}]},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"location":{"value":"[field(''location'')]"},"minimumTlsVersion":{"value":"[parameters(''minimumTlsVersion'')]"},"resourceName":{"value":"[field(''name'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"location":{"type":"String"},"minimumTlsVersion":{"type":"String"},"resourceName":{"type":"String"}},"resources":[{"apiVersion":"2019-06-01","location":"[parameters(''location'')]","name":"[concat(parameters(''resourceName''))]","properties":{"minimumTlsVersion":"[parameters(''minimumTlsVersion'')]","supportsHttpsTrafficOnly":true},"type":"Microsoft.Storage/storageAccounts"}],"variables":{}}}},"existenceCondition":{"allOf":[{"equals":"true","field":"Microsoft.Storage/storageAccounts/supportsHttpsTrafficOnly"},{"equals":"[parameters(''minimumTlsVersion'')]","field":"Microsoft.Storage/storageAccounts/minimumTlsVersion"},{"equals":"false","field":"Microsoft.Storage/storageAccounts/supportsHttpsTrafficOnly"}]},"name":"current","roleDefinitionIds":["/providers/microsoft.authorization/roleDefinitions/8e3af657-a8ff-443c-a75c-2fe8c4bcb635"],"type":"Microsoft.DBforPostgreSQL/servers"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-VNET-HubSpoke"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-VNET-HubSpoke
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: This policy deploys virtual network and peer to the hub
          display_name: Deploys virtual network peering to hub
          management_group_name: myorg-3
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: All
          name: Deploy-VNET-HubSpoke
          parameters: '{"hubResourceId":{"metadata":{"description":"Resource ID for the HUB vNet","displayName":"hubResourceId"},"type":"String"},"vNetCidrRange":{"metadata":{"description":"CIDR Range for the vNet","displayName":"vNetCidrRange"},"type":"String"},"vNetLocation":{"metadata":{"description":"Location for the vNet","displayName":"vNetLocation"},"type":"String"},"vNetName":{"metadata":{"description":"Name of the landing zone vNet","displayName":"vNetName"},"type":"String"},"vNetRgName":{"metadata":{"description":"Name of the landing zone vNet RG","displayName":"vNetRgName"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"ResourceGroupName":"[parameters(''vNetRgName'')]","deployment":{"location":"northeurope","properties":{"mode":"Incremental","parameters":{"hubResourceId":{"value":"[parameters(''hubResourceId'')]"},"vNetCidrRange":{"value":"[parameters(''vNetCidrRange'')]"},"vNetLocation":{"value":"[parameters(''vNetLocation'')]"},"vNetName":{"value":"[parameters(''vNetName'')]"},"vNetRgName":{"value":"[parameters(''vNetRgName'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json","contentVersion":"1.0.0.0","outputs":{},"parameters":{"hubResourceId":{"type":"String"},"vNetCidrRange":{"type":"String"},"vNetLocation":{"type":"String"},"vNetName":{"type":"String"},"vNetPeerUseRemoteGateway":{"defaultValue":false,"type":"bool"},"vNetRgName":{"type":"String"}},"resources":[{"apiVersion":"2020-06-01","dependsOn":[],"location":"[parameters(''vNetLocation'')]","name":"[concat(''es-lz-vnet-'',substring(uniqueString(subscription().id),0,6),''-rg'')]","properties":{"mode":"Incremental","template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{},"resources":[{"apiVersion":"2020-06-01","location":"[parameters(''vNetLocation'')]","name":"[parameters(''vNetRgName'')]","properties":{},"type":"Microsoft.Resources/resourceGroups"},{"apiVersion":"2020-06-01","location":"[parameters(''vNetLocation'')]","name":"NetworkWatcherRG","properties":{},"type":"Microsoft.Resources/resourceGroups"}],"variables":{}}},"type":"Microsoft.Resources/deployments"},{"apiVersion":"2020-06-01","dependsOn":["[concat(''es-lz-vnet-'',substring(uniqueString(subscription().id),0,6),''-rg'')]"],"name":"[concat(''es-lz-vnet-'',substring(uniqueString(subscription().id),0,6))]","properties":{"mode":"Incremental","template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{},"resources":[{"apiVersion":"2020-06-01","dependsOn":[],"location":"[parameters(''vNetLocation'')]","name":"[parameters(''vNetName'')]","properties":{"addressSpace":{"addressPrefixes":["[parameters(''vNetCidrRange'')]"]}},"type":"Microsoft.Network/virtualNetworks"},{"apiVersion":"2020-05-01","dependsOn":["[parameters(''vNetName'')]"],"name":"[concat(parameters(''vNetName''), ''/peerToHub'')]","properties":{"allowForwardedTraffic":true,"allowGatewayTransit":true,"allowVirtualNetworkAccess":true,"remoteVirtualNetwork":{"id":"[parameters(''hubResourceId'')]"},"useRemoteGateways":"[parameters(''vNetPeerUseRemoteGateway'')]"},"type":"Microsoft.Network/virtualNetworks/virtualNetworkPeerings"},{"apiVersion":"2020-06-01","dependsOn":["[parameters(''vNetName'')]"],"name":"[concat(''es-lz-hub-'',substring(uniqueString(subscription().id),0,6),''-peering'')]","properties":{"expressionEvaluationOptions":{"scope":"inner"},"mode":"Incremental","parameters":{"hubName":{"value":"[split(parameters(''hubResourceId''),''/'')[8]]"},"remoteVirtualNetwork":{"value":"[concat(subscription().id,''/resourceGroups/'',parameters(''vNetRgName''), ''/providers/'',''Microsoft.Network/virtualNetworks/'', parameters(''vNetName''))]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"hubName":{"defaultValue":false,"type":"String"},"remoteVirtualNetwork":{"defaultValue":false,"type":"String"}},"resources":[{"apiVersion":"2020-05-01","name":"[[concat(parameters(''hubName''),''/'',last(split(parameters(''remoteVirtualNetwork''),''/'')))]","properties":{"allowForwardedTraffic":true,"allowGatewayTransit":true,"allowVirtualNetworkAccess":true,"remoteVirtualNetwork":{"id":"[[parameters(''remoteVirtualNetwork'')]"},"useRemoteGateways":false},"type":"Microsoft.Network/virtualNetworks/virtualNetworkPeerings"}],"variables":{}}},"resourceGroup":"[split(parameters(''hubResourceId''),''/'')[4]]","subscriptionId":"[split(parameters(''hubResourceId''),''/'')[2]]","type":"Microsoft.Resources/deployments"}],"variables":{}}},"resourceGroup":"[parameters(''vNetRgName'')]","type":"Microsoft.Resources/deployments"}],"variables":{}}}},"deploymentScope":"Subscription","existenceCondition":{"allOf":[{"field":"name","like":"[parameters(''vNetName'')]"},{"equals":"[parameters(''vNetLocation'')]","field":"location"}]},"existenceScope":"ResourceGroup","name":"[parameters(''vNetName'')]","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"],"type":"Microsoft.Network/virtualNetworks"},"effect":"deployIfNotExists"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Windows-DomainJoin"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Windows-DomainJoin
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy Windows Domain Join Extension with keyvault configuration when the extension does not exist on a given windows Virtual Machine
          display_name: Deploy Windows Domain Join Extension with keyvault configuration
          management_group_name: myorg-3
          metadata: '{"category":"Guest Configuration","version":"1.0.0"}'
          mode: Indexed
          name: Deploy-Windows-DomainJoin
          parameters: '{"domainFQDN":{"metadata":{"displayName":"domainFQDN"},"type":"String"},"domainOUPath":{"metadata":{"displayName":"domainOUPath"},"type":"String"},"domainPassword":{"metadata":{"displayName":"domainPassword"},"type":"String"},"domainUsername":{"metadata":{"displayName":"domainUsername"},"type":"String"},"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"keyVaultResourceId":{"metadata":{"displayName":"keyVaultResourceId"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Compute/virtualMachines","field":"type"},{"equals":"MicrosoftWindowsServer","field":"Microsoft.Compute/imagePublisher"},{"equals":"WindowsServer","field":"Microsoft.Compute/imageOffer"},{"field":"Microsoft.Compute/imageSKU","in":["2008-R2-SP1","2008-R2-SP1-smalldisk","2008-R2-SP1-zhcn","2012-Datacenter","2012-datacenter-gensecond","2012-Datacenter-smalldisk","2012-datacenter-smalldisk-g2","2012-Datacenter-zhcn","2012-datacenter-zhcn-g2","2012-R2-Datacenter","2012-r2-datacenter-gensecond","2012-R2-Datacenter-smalldisk","2012-r2-datacenter-smalldisk-g2","2012-R2-Datacenter-zhcn","2012-r2-datacenter-zhcn-g2","2016-Datacenter","2016-datacenter-gensecond","2016-datacenter-gs","2016-Datacenter-Server-Core","2016-datacenter-server-core-g2","2016-Datacenter-Server-Core-smalldisk","2016-datacenter-server-core-smalldisk-g2","2016-Datacenter-smalldisk","2016-datacenter-smalldisk-g2","2016-Datacenter-with-Containers","2016-datacenter-with-containers-g2","2016-Datacenter-with-RDSH","2016-Datacenter-zhcn","2016-datacenter-zhcn-g2","2019-Datacenter","2019-Datacenter-Core","2019-datacenter-core-g2","2019-Datacenter-Core-smalldisk","2019-datacenter-core-smalldisk-g2","2019-Datacenter-Core-with-Containers","2019-datacenter-core-with-containers-g2","2019-Datacenter-Core-with-Containers-smalldisk","2019-datacenter-core-with-containers-smalldisk-g2","2019-datacenter-gensecond","2019-datacenter-gs","2019-Datacenter-smalldisk","2019-datacenter-smalldisk-g2","2019-Datacenter-with-Containers","2019-datacenter-with-containers-g2","2019-Datacenter-with-Containers-smalldisk","2019-datacenter-with-containers-smalldisk-g2","2019-Datacenter-zhcn","2019-datacenter-zhcn-g2","Datacenter-Core-1803-with-Containers-smalldisk","datacenter-core-1803-with-containers-smalldisk-g2","Datacenter-Core-1809-with-Containers-smalldisk","datacenter-core-1809-with-containers-smalldisk-g2","Datacenter-Core-1903-with-Containers-smalldisk","datacenter-core-1903-with-containers-smalldisk-g2","datacenter-core-1909-with-containers-smalldisk","datacenter-core-1909-with-containers-smalldisk-g1","datacenter-core-1909-with-containers-smalldisk-g2"]}]},"then":{"details":{"deployment":{"properties":{"mode":"Incremental","parameters":{"domainFQDN":{"value":"[parameters(''domainFQDN'')]"},"domainOUPath":{"value":"[parameters(''domainOUPath'')]"},"domainPassword":{"reference":{"keyVault":{"id":"[parameters(''keyVaultResourceId'')]"},"secretName":"[parameters(''domainPassword'')]"}},"domainUsername":{"reference":{"keyVault":{"id":"[parameters(''keyVaultResourceId'')]"},"secretName":"[parameters(''domainUsername'')]"}},"keyVaultResourceId":{"value":"[parameters(''keyVaultResourceId'')]"},"location":{"value":"[field(''location'')]"},"vmName":{"value":"[field(''name'')]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"domainFQDN":{"type":"String"},"domainOUPath":{"type":"String"},"domainPassword":{"type":"securestring"},"domainUsername":{"type":"String"},"keyVaultResourceId":{"type":"String"},"location":{"type":"String"},"vmName":{"type":"String"}},"resources":[{"apiVersion":"2015-06-15","location":"[resourceGroup().location]","name":"[concat(variables(''vmName''),''/joindomain'')]","properties":{"autoUpgradeMinorVersion":true,"protectedSettings":{"Password":"[parameters(''domainPassword'')]"},"publisher":"Microsoft.Compute","settings":{"Name":"[parameters(''domainFQDN'')]","OUPath":"[parameters(''domainOUPath'')]","Options":"[variables(''domainJoinOptions'')]","Restart":"true","User":"[parameters(''domainUserName'')]"},"type":"JsonADDomainExtension","typeHandlerVersion":"1.3"},"type":"Microsoft.Compute/virtualMachines/extensions"}],"variables":{"domainJoinOptions":3,"vmName":"[parameters(''vmName'')]"}}}},"existenceCondition":{"allOf":[{"equals":"JsonADDomainExtension","field":"Microsoft.Compute/virtualMachines/extensions/type"},{"equals":"Microsoft.Compute","field":"Microsoft.Compute/virtualMachines/extensions/publisher"}]},"roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/9980e02c-c2be-4d73-94e8-173b1dc7cf3c"],"type":"Microsoft.Compute/virtualMachines/extensions"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-vHUB"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-vHUB
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: 'Deploy Virtual Hub network with Virtual Wan and Gateway and Firewall configured in the desired region. '
          display_name: Deploy Virtual Hub network with Virtual Wan and Gateway and Firewall configured.
          management_group_name: myorg-3
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: All
          name: Deploy-vHUB
          parameters: '{"azfw":{"defaultValue":{},"metadata":{"description":"Object describing the Azure Firewall in vHUB","displayName":"azfw"},"type":"Object"},"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"ergw":{"defaultValue":{},"metadata":{"description":"Object describing ExpressRoute gateway","displayName":"ergw"},"type":"Object"},"rgName":{"metadata":{"description":"Provide name for resource group.","displayName":"rgName"},"type":"String"},"vHUB":{"metadata":{"description":"Object describing Virtual WAN vHUB","displayName":"vHUB"},"type":"Object"},"vHubName":{"defaultValue":"","metadata":{"description":"Name of the vHUB","displayName":"vHubName"},"type":"String"},"vpngw":{"defaultValue":{},"metadata":{"description":"Object describing VPN gateway","displayName":"vpngw"},"type":"Object"},"vwanname":{"metadata":{"description":"Name of the Virtual WAN","displayName":"vwanname"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"Incremental","parameters":{"azfw":{"value":"[parameters(''azfw'')]"},"ergw":{"value":"[parameters(''ergw'')]"},"rgName":{"value":"[parameters(''rgName'')]"},"vHUB":{"value":"[parameters(''vHUB'')]"},"vHUBName":{"value":"[parameters(''vHUBName'')]"},"vpngw":{"value":"[parameters(''vpngw'')]"},"vwanname":{"value":"[parameters(''vwanname'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json","contentVersion":"1.0.0.0","parameters":{"azfw":{"defaultValue":{},"metadata":{"description":"Object describing the Azure Firewall in vHUB"},"type":"object"},"ergw":{"defaultValue":{},"metadata":{"description":"Object describing ExpressRoute gateway"},"type":"object"},"rgName":{"metadata":{"description":"Provide name for resource group.","displayName":"rgName"},"type":"String"},"vHUB":{"metadata":{"description":"Object describing Virtual WAN vHUB"},"type":"object"},"vHUBName":{"metadata":{"description":"Name of the vHUB","displayName":"vHUBName"},"type":"String"},"vpngw":{"defaultValue":{},"metadata":{"description":"Object describing VPN gateway"},"type":"object"},"vwanname":{"metadata":{"description":"Name of the Virtual WAN"},"type":"String"}},"resources":[{"apiVersion":"2018-05-01","location":"[deployment().location]","name":"[parameters(''rgName'')]","properties":{},"type":"Microsoft.Resources/resourceGroups"},{"apiVersion":"2018-05-01","dependsOn":["[resourceId(''Microsoft.Resources/resourceGroups/'', parameters(''rgName''))]"],"name":"[concat(''vHUBdeploy-'',parameters(''vHUB'').location)]","properties":{"mode":"Incremental","template":{"$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","parameters":{},"resources":[{"apiVersion":"2020-05-01","location":"[parameters(''vHUB'').location]","name":"[parameters(''vHUBname'')]","properties":{"addressPrefix":"[parameters(''vHUB'').addressPrefix]","sku":"[variables(''vhubsku'')]","virtualWan":{"id":"[variables(''vwanresourceid'')]"}},"type":"Microsoft.Network/virtualHubs"}],"variables":{}}},"resourceGroup":"[parameters(''rgName'')]","type":"Microsoft.Resources/deployments"},{"apiVersion":"2018-05-01","condition":"[greater(length(parameters(''vpngw'')),0)]","dependsOn":["[concat(''vHUBdeploy-'',parameters(''vHUB'').location)]"],"name":"[concat(parameters(''vHUBName''),''-vpngw'')]","properties":{"mode":"Incremental","template":{"$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","parameters":{},"resources":[{"apiVersion":"2020-05-01","location":"[parameters(''vHUB'').location]","name":"[parameters(''vpngw'').name]","properties":{"bgpSettings":"[parameters(''vpngw'').bgpSettings]","virtualHub":{"id":"[variables(''vwanhub'')]"},"vpnGatewayScaleUnit":"[parameters(''vpngw'').vpnGatewayScaleUnit]"},"type":"Microsoft.Network/vpnGateways"}],"variables":{}}},"resourceGroup":"[parameters(''rgName'')]","type":"Microsoft.Resources/deployments"},{"apiVersion":"2018-05-01","condition":"[greater(length(parameters(''ergw'')),0)]","dependsOn":["[concat(''vHUBdeploy-'',parameters(''vHUB'').location)]"],"name":"[concat(parameters(''vHUBName''),''-ergw'')]","properties":{"mode":"Incremental","template":{"$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","parameters":{},"resources":[{"apiVersion":"2020-05-01","location":"[parameters(''vHUB'').location]","name":"[parameters(''ergw'').name]","properties":{"autoScaleConfiguration":"[parameters(''ergw'').autoScaleConfiguration]","virtualHub":{"id":"[variables(''vwanhub'')]"}},"type":"Microsoft.Network/expressRouteGateways"}],"variables":{}}},"resourceGroup":"[parameters(''rgName'')]","type":"Microsoft.Resources/deployments"}],"variables":{"vhubsku":"Standard","vwanhub":"[concat(subscription().id,''/resourceGroups/'',parameters(''rgName''),''/providers/Microsoft.Network/virtualHubs/'',parameters(''vHUBName''))]","vwanresourceid":"[concat(subscription().id,''/resourceGroups/'',parameters(''rgName''),''/providers/Microsoft.Network/virtualWans/'',parameters(''vwanname''))]"}}}},"deploymentScope":"Subscription","existenceScope":"ResourceGroup","name":"[parameters(''vHubName'')]","resourceGroupName":"[parameters(''rgName'')]","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"],"type":"Microsoft.Network/virtualHubs"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-vNet"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-vNet
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy spoke network with configuration to hub network based on ipam configuration object
          display_name: Deploy spoke network with configuration to hub network based on ipam configuration object
          management_group_name: myorg-3
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: All
          name: Deploy-vNet
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"ipam":{"defaultValue":[],"metadata":{"displayName":"ipam"},"type":"Array"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"Incremental","parameters":{"ipam":{"defaultValue":[],"value":"[parameters(''ipam'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json","contentVersion":"1.0.0.0","outputs":{"ipam":{"condition":"[bool(''true'')]","type":"Int","value":"[length(parameters(''ipam''))]"}},"parameters":{"ipam":{"defaultValue":[{"hubVirtualNetworkConnection":{"properties":{"allowHubToRemoteVnetTransit":true,"allowRemoteVnetToUseHubVnetGateways":false,"enableInternetSecurity":true},"vWanVhubResourceId":"/subscriptions/99c2838f-a548-4884-a6e2-38c1f8fb4c0b/resourceGroups/contoso-global-vwan/providers/Microsoft.Network/virtualHubs/contoso-vhub-weu"},"location":"westeurope","name":"bu1-weu-msx3-vNet1","networkSecurityGroups":{"properties":{"securityRules":[]}},"routeTables":{"properties":{"routes":[]}},"virtualNetworks":{"properties":{"addressSpace":{"addressPrefixes":["10.51.217.0/24"]}}}}],"type":"Array"}},"resources":[{"apiVersion":"2020-06-01","condition":"[if(and(not(empty(parameters(''ipam''))), equals(toLower(parameters(''ipam'')[copyIndex()].name),toLower(variables(''vNetName'')))),bool(''true''),bool(''false''))]","copy":{"count":"[length(parameters(''ipam''))]","name":"ipam-rg-loop"},"dependsOn":[],"location":"[parameters(''ipam'')[copyIndex()].location]","name":"[concat(''es-ipam-'',subscription().displayName,''-RG-'',copyIndex())]","properties":{"mode":"Incremental","template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{},"resources":[{"apiVersion":"2020-06-01","location":"[parameters(''ipam'')[copyIndex()].location]","name":"[variables(''vNetRgName'')]","properties":{},"type":"Microsoft.Resources/resourceGroups"},{"apiVersion":"2020-06-01","location":"[parameters(''ipam'')[copyIndex()].location]","name":"NetworkWatcherRG","properties":{},"type":"Microsoft.Resources/resourceGroups"}],"variables":{}}},"type":"Microsoft.Resources/deployments"},{"apiVersion":"2020-06-01","condition":"[if(and(not(empty(parameters(''ipam''))), equals(toLower(parameters(''ipam'')[copyIndex()].name),toLower(variables(''vNetName'')))),bool(''true''),bool(''false''))]","copy":{"count":"[length(parameters(''ipam''))]","name":"ipam-loop"},"dependsOn":["[concat(''es-ipam-'',subscription().displayName,''-RG-'',copyIndex())]"],"name":"[concat(''es-ipam-'',subscription().displayName,''-nsg-udr-vnet-hub-vwan-peering-'',copyIndex())]","properties":{"mode":"Incremental","template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{},"resources":[{"apiVersion":"2020-05-01","condition":"[contains(parameters(''ipam'')[copyIndex()],''networkSecurityGroups'')]","location":"[parameters(''ipam'')[copyIndex()].location]","name":"[concat(subscription().displayName, ''-nsg'')]","properties":"[if(contains(parameters(''ipam'')[copyIndex()],''networkSecurityGroups''),parameters(''ipam'')[copyIndex()].networkSecurityGroups.properties,json(''null''))]","type":"Microsoft.Network/networkSecurityGroups"},{"apiVersion":"2020-05-01","condition":"[contains(parameters(''ipam'')[copyIndex()],''routeTables'')]","location":"[parameters(''ipam'')[copyIndex()].location]","name":"[concat(subscription().displayName, ''-udr'')]","properties":"[if(contains(parameters(''ipam'')[copyIndex()],''routeTables''),parameters(''ipam'')[copyIndex()].routeTables.properties,json(''null''))]","type":"Microsoft.Network/routeTables"},{"apiVersion":"2020-05-01","condition":"[contains(parameters(''ipam'')[copyIndex()],''virtualNetworks'')]","dependsOn":["[concat(subscription().displayName, ''-nsg'')]","[concat(subscription().displayName, ''-udr'')]"],"location":"[parameters(''ipam'')[copyIndex()].location]","name":"[concat(subscription().displayName, ''-vnet'')]","properties":"[if(contains(parameters(''ipam'')[copyIndex()],''virtualNetworks''),parameters(''ipam'')[copyIndex()].virtualNetworks.properties,json(''null''))]","type":"Microsoft.Network/virtualNetworks"},{"apiVersion":"2020-05-01","condition":"[contains(parameters(''ipam'')[copyIndex()],''virtualNetworkPeerings'')]","dependsOn":["[concat(subscription().displayName, ''-vnet'')]"],"name":"[concat(variables(''vNetName''), ''/peerToHub'')]","properties":"[if(contains(parameters(''ipam'')[copyIndex()],''virtualNetworkPeerings''),parameters(''ipam'')[copyIndex()].virtualNetworkPeerings.properties,json(''null''))]","type":"Microsoft.Network/virtualNetworks/virtualNetworkPeerings"},{"apiVersion":"2020-06-01","condition":"[and(contains(parameters(''ipam'')[copyIndex()],''virtualNetworks''),contains(parameters(''ipam'')[copyIndex()],''hubVirtualNetworkConnection''),contains(parameters(''ipam'')[copyIndex()].hubVirtualNetworkConnection,''vWanVhubResourceId''))]","dependsOn":["[concat(subscription().displayName, ''-vnet'')]"],"name":"[concat(''es-ipam-vWan-'',subscription().displayName,''-peering-'',copyIndex())]","properties":{"expressionEvaluationOptions":{"scope":"inner"},"mode":"Incremental","parameters":{"allowHubToRemoteVnetTransit":{"value":"[if(and(contains(parameters(''ipam'')[copyIndex()],''hubVirtualNetworkConnection''),contains(parameters(''ipam'')[copyIndex()].hubVirtualNetworkConnection,''vWanVhubResourceId'')),parameters(''ipam'')[copyIndex()].hubVirtualNetworkConnection.properties.allowHubToRemoteVnetTransit,json(''null''))]"},"allowRemoteVnetToUseHubVnetGateways":{"value":"[if(and(contains(parameters(''ipam'')[copyIndex()],''hubVirtualNetworkConnection''),contains(parameters(''ipam'')[copyIndex()].hubVirtualNetworkConnection,''vWanVhubResourceId'')),parameters(''ipam'')[copyIndex()].hubVirtualNetworkConnection.properties.allowRemoteVnetToUseHubVnetGateways,json(''null''))]"},"enableInternetSecurity":{"value":"[if(and(contains(parameters(''ipam'')[copyIndex()],''hubVirtualNetworkConnection''),contains(parameters(''ipam'')[copyIndex()].hubVirtualNetworkConnection,''vWanVhubResourceId'')),parameters(''ipam'')[copyIndex()].hubVirtualNetworkConnection.properties.enableInternetSecurity,json(''null''))]"},"remoteVirtualNetwork":{"value":"[concat(subscription().id,''/resourceGroups/'',variables(''vNetRgName''), ''/providers/'',''Microsoft.Network/virtualNetworks/'', concat(subscription().displayName, ''-vnet''))]"},"vWanVhubName":{"value":"[if(and(contains(parameters(''ipam'')[copyIndex()],''hubVirtualNetworkConnection''),contains(parameters(''ipam'')[copyIndex()].hubVirtualNetworkConnection,''vWanVhubResourceId'')),split(parameters(''ipam'')[copyIndex()].hubVirtualNetworkConnection.vWanVhubResourceId,''/'')[8],json(''null''))]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"allowHubToRemoteVnetTransit":{"defaultValue":true,"type":"bool"},"allowRemoteVnetToUseHubVnetGateways":{"defaultValue":false,"type":"bool"},"enableInternetSecurity":{"defaultValue":true,"type":"bool"},"remoteVirtualNetwork":{"type":"String"},"vWanVhubName":{"defaultValue":"","type":"String"}},"resources":[{"apiVersion":"2020-05-01","name":"[[concat(parameters(''vWanVhubName''),''/'',last(split(parameters(''remoteVirtualNetwork''),''/'')))]","properties":{"allowHubToRemoteVnetTransit":"[[parameters(''allowHubToRemoteVnetTransit'')]","allowRemoteVnetToUseHubVnetGateways":"[[parameters(''allowRemoteVnetToUseHubVnetGateways'')]","enableInternetSecurity":"[[parameters(''enableInternetSecurity'')]","remoteVirtualNetwork":{"id":"[[parameters(''remoteVirtualNetwork'')]"}},"type":"Microsoft.Network/virtualHubs/hubVirtualNetworkConnections"}],"variables":{}}},"resourceGroup":"[if(and(contains(parameters(''ipam'')[copyIndex()],''hubVirtualNetworkConnection''),contains(parameters(''ipam'')[copyIndex()].hubVirtualNetworkConnection,''vWanVhubResourceId'')),split(parameters(''ipam'')[copyIndex()].hubVirtualNetworkConnection.vWanVhubResourceId,''/'')[4],json(''null''))]","subscriptionId":"[if(and(contains(parameters(''ipam'')[copyIndex()],''hubVirtualNetworkConnection''),contains(parameters(''ipam'')[copyIndex()].hubVirtualNetworkConnection,''vWanVhubResourceId'')),split(parameters(''ipam'')[copyIndex()].hubVirtualNetworkConnection.vWanVhubResourceId,''/'')[2],json(''null''))]","type":"Microsoft.Resources/deployments"},{"apiVersion":"2020-06-01","condition":"[and(contains(parameters(''ipam'')[copyIndex()],''virtualNetworks''),contains(parameters(''ipam'')[copyIndex()],''virtualNetworkPeerings''),contains(parameters(''ipam'')[copyIndex()].virtualNetworkPeerings.properties.remoteVirtualNetwork,''id''))]","dependsOn":["[concat(subscription().displayName, ''-vnet'')]"],"name":"[concat(''es-ipam-hub-'',subscription().displayName,''-peering-'',copyIndex())]","properties":{"expressionEvaluationOptions":{"scope":"inner"},"mode":"Incremental","parameters":{"hubName":{"value":"[if(and(contains(parameters(''ipam'')[copyIndex()],''virtualNetworkPeerings''),contains(parameters(''ipam'')[copyIndex()].virtualNetworkPeerings.properties.remoteVirtualNetwork,''id'')),split(parameters(''ipam'')[copyIndex()].virtualNetworkPeerings.properties.remoteVirtualNetwork.id,''/'')[8],json(''null''))]"},"remoteVirtualNetwork":{"value":"[concat(subscription().id,''/resourceGroups/'',variables(''vNetRgName''), ''/providers/'',''Microsoft.Network/virtualNetworks/'', concat(subscription().displayName, ''-vnet''))]"}},"template":{"$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#","contentVersion":"1.0.0.0","outputs":{},"parameters":{"hubName":{"defaultValue":false,"type":"String"},"remoteVirtualNetwork":{"defaultValue":false,"type":"String"}},"resources":[{"apiVersion":"2020-05-01","name":"[[concat(parameters(''hubName''),''/'',last(split(parameters(''remoteVirtualNetwork''),''/'')))]","properties":{"allowForwardedTraffic":true,"allowGatewayTransit":true,"allowVirtualNetworkAccess":true,"remoteVirtualNetwork":{"id":"[[parameters(''remoteVirtualNetwork'')]"},"useRemoteGateways":false},"type":"Microsoft.Network/virtualNetworks/virtualNetworkPeerings"}],"variables":{}}},"resourceGroup":"[if(and(contains(parameters(''ipam'')[copyIndex()],''virtualNetworkPeerings''),contains(parameters(''ipam'')[copyIndex()].virtualNetworkPeerings.properties.remoteVirtualNetwork,''id'')),split(parameters(''ipam'')[copyIndex()].virtualNetworkPeerings.properties.remoteVirtualNetwork.id,''/'')[4],json(''null''))]","subscriptionId":"[if(and(contains(parameters(''ipam'')[copyIndex()],''virtualNetworkPeerings''),contains(parameters(''ipam'')[copyIndex()].virtualNetworkPeerings.properties.remoteVirtualNetwork,''id'')),split(parameters(''ipam'')[copyIndex()].virtualNetworkPeerings.properties.remoteVirtualNetwork.id,''/'')[2],json(''null''))]","type":"Microsoft.Resources/deployments"}],"variables":{}}},"resourceGroup":"[variables(''vNetRgName'')]","type":"Microsoft.Resources/deployments"}],"variables":{"vNetName":"[concat(subscription().displayName, ''-vNet'')]","vNetRgName":"[concat(subscription().displayName, ''-network'')]","vNetSubId":"[subscription().subscriptionId]"}}}},"deploymentScope":"Subscription","existenceCondition":{"allOf":[{"equals":"Microsoft.Resources/subscriptions/resourceGroups","field":"type"},{"field":"name","like":"[concat(subscription().displayName, ''-network'')]"}]},"existenceScope":"Subscription","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"],"type":"Microsoft.Resources/resourceGroups"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-vWAN"]
        mode: managed
        type: azurerm_policy_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-vWAN
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy the Virtual WAN in the specific region.
          display_name: Deploy the Virtual WAN in the specific region
          management_group_name: myorg-3
          metadata: '{"category":"Network","version":"1.0.0"}'
          mode: All
          name: Deploy-vWAN
          parameters: '{"effect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Enable or disable the execution of the policy","displayName":"Effect"},"type":"String"},"rgName":{"metadata":{"description":"Provide name for resource group.","displayName":"rgName"},"type":"String"},"vwanRegion":{"metadata":{"description":"Select Azure region for Virtual WAN","displayName":"vwanRegion","strongType":"location"},"type":"String"},"vwanname":{"metadata":{"description":"Name of the Virtual WAN","displayName":"vwanname"},"type":"String"}}'
          policy_rule: '{"if":{"allOf":[{"equals":"Microsoft.Resources/subscriptions","field":"type"}]},"then":{"details":{"deployment":{"location":"northeurope","properties":{"mode":"Incremental","parameters":{"rgName":{"value":"[parameters(''rgName'')]"},"vwanRegion":{"value":"[parameters(''vwanRegion'')]"},"vwanname":{"value":"[parameters(''vwanname'')]"}},"template":{"$schema":"http://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json","contentVersion":"1.0.0.0","outputs":{},"parameters":{"rgName":{"type":"String"},"vwanRegion":{"type":"String"},"vwanname":{"type":"String"}},"resources":[{"apiVersion":"2018-05-01","location":"[deployment().location]","name":"[parameters(''rgName'')]","properties":{},"type":"Microsoft.Resources/resourceGroups"},{"apiVersion":"2018-05-01","dependsOn":["[resourceId(''Microsoft.Resources/resourceGroups/'', parameters(''rgName''))]"],"name":"vwan","properties":{"mode":"Incremental","template":{"$schema":"http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json","contentVersion":"1.0.0.0","outputs":{},"parameters":{},"resources":[{"apiVersion":"2020-05-01","location":"[parameters(''vwanRegion'')]","name":"[parameters(''vwanname'')]","properties":{"type":"[variables(''vwansku'')]","virtualHubs":[],"vpnSites":[]},"type":"Microsoft.Network/virtualWans"}]}},"resourceGroup":"[parameters(''rgName'')]","type":"Microsoft.Resources/deployments"}],"variables":{"vwansku":"Standard"}}}},"deploymentScope":"Subscription","existenceScope":"ResourceGroup","name":"[parameters(''vwanname'')]","resourceGroupName":"[parameters(''rgName'')]","roleDefinitionIds":["/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"],"type":"Microsoft.Network/virtualWans"},"effect":"[parameters(''effect'')]"}}'
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policySetDefinitions/Deny-PublicEndpoints"]
        mode: managed
        type: azurerm_policy_set_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policySetDefinitions/Deny-PublicEndpoints
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: 'This policy denies creation of Azure PAAS services with exposed public endpoints.  This policy set includes the policy for the following services KeyVault, Storage accounts, AKS, Cosmos, SQL Servers, MariaDB, MySQL and Postgress. '
          display_name: Public network access should be disabled for PAAS services
          management_group_name: myorg-3
          metadata: '{"category":"Network","version":"1.0.0"}'
          name: Deny-PublicEndpoints
          parameters: '{"AKSPublicIpDenyEffect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"This policy denies  the creation of  Azure Kubernetes Service non-private clusters","displayName":"Public network access on AKS API should be disabled"},"type":"String"},"CosmosPublicIpDenyEffect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"This policy denies that  Cosmos database accounts  are created with out public network access is disabled.","displayName":"Public network access should be disabled for CosmosDB"},"type":"String"},"KeyVaultPublicIpDenyEffect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"This policy denies creation of Key Vaults with IP Firewall exposed to all public endpoints","displayName":"Public network access should be disabled for KeyVault"},"type":"String"},"MariaDBPublicIpDenyEffect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"This policy denies the creation of Maria DB accounts with exposed public endpoints","displayName":"Public network access should be disabled for MariaDB"},"type":"String"},"MySQLPublicIpDenyEffect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"This policy denies creation of MySql DB accounts with exposed public endpoints","displayName":"Public network access should be disabled for MySQL"},"type":"String"},"PostgreSQLPublicIpDenyEffect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"This policy denies creation of Postgre SQL DB accounts with exposed public endpoints","displayName":"Public network access should be disabled for PostgreSql"},"type":"String"},"SqlServerPublicIpDenyEffect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"This policy denies creation of Sql servers with exposed public endpoints","displayName":"Public network access on Azure SQL Database should be disabled"},"type":"String"},"StoragePublicIpDenyEffect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Deny","metadata":{"description":"This policy denies creation of storage accounts with IP Firewall exposed to all public endpoints","displayName":"Public network access onStorage accounts should be disabled"},"type":"String"}}'
          policy_definition_group: []
          policy_definition_reference:
            - parameter_values: '{"effect":{"value":"[parameters(''CosmosPublicIpDenyEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-CosmosDB
              policy_group_names: null
              reference_id: CosmosDenyPaasPublicIP
            - parameter_values: '{"effect":{"value":"[parameters(''MariaDBPublicIpDenyEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-MariaDB
              policy_group_names: null
              reference_id: MariaDBDenyPaasPublicIP
            - parameter_values: '{"effect":{"value":"[parameters(''MySQLPublicIpDenyEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-MySQL
              policy_group_names: null
              reference_id: MySQLDenyPaasPublicIP
            - parameter_values: '{"effect":{"value":"[parameters(''PostgreSQLPublicIpDenyEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-PostgreSql
              policy_group_names: null
              reference_id: PostgreSQLDenyPaasPublicIP
            - parameter_values: '{"effect":{"value":"[parameters(''KeyVaultPublicIpDenyEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-KeyVault
              policy_group_names: null
              reference_id: KeyVaultDenyPaasPublicIP
            - parameter_values: '{"effect":{"value":"[parameters(''SqlServerPublicIpDenyEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-Sql
              policy_group_names: null
              reference_id: SqlServerDenyPaasPublicIP
            - parameter_values: '{"effect":{"value":"[parameters(''StoragePublicIpDenyEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-Storage
              policy_group_names: null
              reference_id: StorageDenyPaasPublicIP
            - parameter_values: '{"effect":{"value":"[parameters(''AKSPublicIpDenyEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-Aks
              policy_group_names: null
              reference_id: AKSDenyPaasPublicIP
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policySetDefinitions/Deploy-ASC-Config"]
        mode: managed
        type: azurerm_policy_set_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policySetDefinitions/Deploy-ASC-Config
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy Azure Security Center configuration
          display_name: Deploy Azure Security Center configuration
          management_group_name: myorg-3
          metadata: '{"category":"Security Center","version":"1.0.0"}'
          name: Deploy-ASC-Config
          parameters: '{"ascExportResourceGroupLocation":{"metadata":{"description":"The location where the resource group and the export to Log Analytics workspace configuration are created.","displayName":"Resource Group location for the export to Log Analytics workspace configuration"},"type":"String"},"ascExportResourceGroupName":{"metadata":{"description":"The resource group name where the export to Log Analytics workspace configuration is created. If you enter a name for a resource group that doesn''t exist, it''ll be created in the subscription. Note that each resource group can only have one export to Log Analytics workspace configured.","displayName":"Resource Group name for the export to Log Analytics workspace configuration"},"type":"String"},"emailSecurityContact":{"metadata":{"description":"Provide email address for Azure Security Center contact details","displayName":"Security contacts email address"},"type":"string"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Primary Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"pricingTierAppServices":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier for App Services","displayName":"Azure Defender pricing tier for App Services"},"type":"string"},"pricingTierArm":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier for Azure Resource Manager","displayName":"Azure Defender pricing tier for Azure Resource Manager"},"type":"string"},"pricingTierContainerRegistry":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier for ACR","displayName":"Azure Defender pricing tier for ACR"},"type":"string"},"pricingTierDns":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier for DNS","displayName":"Azure Defender pricing tier for DNS"},"type":"string"},"pricingTierKeyVaults":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier for AKV","displayName":"Azure Defender pricing tier for AKV"},"type":"string"},"pricingTierKubernetesService":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier for AKS","displayName":"Azure Defender pricing tier for AKS"},"type":"string"},"pricingTierSqlServerVirtualMachines":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier for SQL Server Virtual Machines","displayName":"Azure Defender pricing tier for SQL Server Virtual Machines"},"type":"string"},"pricingTierSqlServers":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier for SQL Servers","displayName":"Azure Defender pricing tier for SQL Servers"},"type":"string"},"pricingTierStorageAccounts":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier for Storage Accounts","displayName":"Azure Defender pricing tier for Storage Accounts"},"type":"string"},"pricingTierVMs":{"allowedValues":["Standard","Free"],"defaultValue":"Standard","metadata":{"description":"Azure Defender pricing tier for Virtual Machines","displayName":"Azure Defender pricing tier for Virtual Machines"},"type":"string"}}'
          policy_definition_group: []
          policy_definition_reference:
            - parameter_values: '{"pricingTier":{"value":"[parameters(''pricingTierVMs'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-VMs
              policy_group_names: null
              reference_id: defenderForVM
            - parameter_values: '{"pricingTier":{"value":"[parameters(''pricingTierSqlServers'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-Sql
              policy_group_names: null
              reference_id: defenderForSqlServers
            - parameter_values: '{"pricingTier":{"value":"[parameters(''pricingTierAppServices'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-AppSrv
              policy_group_names: null
              reference_id: defenderForAppServices
            - parameter_values: '{"pricingTier":{"value":"[parameters(''pricingTierStorageAccounts'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-SA
              policy_group_names: null
              reference_id: defenderForStorageAccounts
            - parameter_values: '{"pricingTier":{"value":"[parameters(''pricingTierSqlServerVirtualMachines'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-SQLVM
              policy_group_names: null
              reference_id: defenderForSqlServerVirtualMachines
            - parameter_values: '{"pricingTier":{"value":"[parameters(''pricingTierKubernetesService'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-AKS
              policy_group_names: null
              reference_id: defenderForKubernetesService
            - parameter_values: '{"pricingTier":{"value":"[parameters(''pricingTierContainerRegistry'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-ACR
              policy_group_names: null
              reference_id: defenderForContainerRegistry
            - parameter_values: '{"pricingTier":{"value":"[parameters(''pricingTierKeyVaults'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-AKV
              policy_group_names: null
              reference_id: defenderForKeyVaults
            - parameter_values: '{"pricingTier":{"value":"[parameters(''pricingTierDns'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-DNS
              policy_group_names: null
              reference_id: defenderForDns
            - parameter_values: '{"pricingTier":{"value":"[parameters(''pricingTierArm'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-ARM
              policy_group_names: null
              reference_id: defenderForArm
            - parameter_values: '{"emailSecurityContact":{"value":"[parameters(''emailSecurityContact'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-SecurityContacts
              policy_group_names: null
              reference_id: securityEmailContact
            - parameter_values: '{"resourceGroupLocation":{"value":"[parameters(''ascExportResourceGroupLocation'')]"},"resourceGroupName":{"value":"[parameters(''ascExportResourceGroupName'')]"},"workspaceResourceId":{"value":"[parameters(''logAnalytics'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/ffb6f416-7bd2-4488-8828-56585fef2be9
              policy_group_names: null
              reference_id: ascExport
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Diag-LogAnalytics"]
        mode: managed
        type: azurerm_policy_set_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Diag-LogAnalytics
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: 'This policy set deploys the configurations of application Azure resources to forward diagnostic logs and metrics to an Azure Log Analytics workspace. See the list of policies of the services that are included '
          display_name: Deploy Diagnostic Settings to Azure Services
          management_group_name: myorg-3
          metadata: '{"category":"Monitoring","version":"1.0.0"}'
          name: Deploy-Diag-LogAnalytics
          parameters: '{"ACILogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Container Instances to stream to a Log Analytics workspace when any ACR which is missing this diagnostic settings is created or updated. The policy wil set the diagnostic with all metrics enabled.","displayName":"Deploy Diagnostic Settings for Container Instances to Log Analytics workspace"},"type":"String"},"ACRLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Container Registry to stream to a Log Analytics workspace when any ACR which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics  enabled.","displayName":"Deploy Diagnostic Settings for Container Registry to Log Analytics workspace"},"type":"String"},"AKSLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Kubernetes Service to stream to a Log Analytics workspace when any Kubernetes Service which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled.","displayName":"Deploy Diagnostic Settings for Kubernetes Service to Log Analytics workspace"},"type":"String"},"APIMgmtLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for API Management to stream to a Log Analytics workspace when any API Management which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for API Management to Log Analytics workspace"},"type":"String"},"APIforFHIRLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Azure API for FHIR to stream to a Log Analytics workspace when any Azure API for FHIR which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Azure API for FHIR to Log Analytics workspace"},"type":"String"},"AnalysisServiceLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Analysis Services to stream to a Log Analytics workspace when any Analysis Services which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Analysis Services to Log Analytics workspace"},"type":"String"},"AppServiceLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for App Service Plan to stream to a Log Analytics workspace when any App Service Plan which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for App Service Plan to Log Analytics workspace"},"type":"String"},"AppServiceWebappLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Web App to stream to a Log Analytics workspace when any Web App which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for App Service to Log Analytics workspace"},"type":"String"},"ApplicationGatewayLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Application Gateway to stream to a Log Analytics workspace when any Application Gateway which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Application Gateway to Log Analytics workspace"},"type":"String"},"AutomationLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Automation to stream to a Log Analytics workspace when any Automation which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Automation to Log Analytics workspace"},"type":"String"},"BatchLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Batch to stream to a Log Analytics workspace when any Batch which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Batch to Log Analytics workspace"},"type":"String"},"CDNEndpointsLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for CDN Endpoint to stream to a Log Analytics workspace when any CDN Endpoint which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for CDN Endpoint to Log Analytics workspace"},"type":"String"},"CognitiveServicesLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Cognitive Services to stream to a Log Analytics workspace when any Cognitive Services which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Cognitive Services to Log Analytics workspace"},"type":"String"},"CosmosLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Cosmos DB to stream to a Log Analytics workspace when any Cosmos DB which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Cosmos DB to Log Analytics workspace"},"type":"String"},"DataExplorerClusterLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Azure Data Explorer Cluster to stream to a Log Analytics workspace when any Azure Data Explorer Cluster which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Azure Data Explorer Cluster to Log Analytics workspace"},"type":"String"},"DataFactoryLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Data Factory to stream to a Log Analytics workspace when any Data Factory which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Data Factory to Log Analytics workspace"},"type":"String"},"DataLakeAnalyticsLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Data Lake Analytics to stream to a Log Analytics workspace when any Data Lake Analytics which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Data Lake Analytics to Log Analytics workspace"},"type":"String"},"DataLakeStoreLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Azure Data Lake Store to stream to a Log Analytics workspace when anyAzure Data Lake Store which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Azure Data Lake Store to Log Analytics workspace"},"type":"String"},"DatabricksLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Databricks to stream to a Log Analytics workspace when any Databricks which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Databricks to Log Analytics workspace"},"type":"String"},"EventGridSubLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Event Grid subscriptions to stream to a Log Analytics workspace when any Event Grid subscriptions which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Event Grid subscriptions to Log Analytics workspace"},"type":"String"},"EventGridTopicLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Event Grid Topic to stream to a Log Analytics workspace when any Event Grid Topic which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Event Grid Topic to Log Analytics workspace"},"type":"String"},"EventHubLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Event Hubs to stream to a Log Analytics workspace when any Event Hubs which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Event Hubs to Log Analytics workspace"},"type":"String"},"EventSystemTopicLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Event Grid System Topic to stream to a Log Analytics workspace when any Event Grid System Topic which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Event Grid System Topic to Log Analytics workspace"},"type":"String"},"ExpressRouteLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for ExpressRoute to stream to a Log Analytics workspace when any ExpressRoute which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for ExpressRoute to Log Analytics workspace"},"type":"String"},"FirewallLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Firewall to stream to a Log Analytics workspace when any Firewall which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Firewall to Log Analytics workspace"},"type":"String"},"FrontDoorLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Front Door to stream to a Log Analytics workspace when any Front Door which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Front Door to Log Analytics workspace"},"type":"String"},"FunctionAppLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Azure Function App to stream to a Log Analytics workspace when any function app which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Azure Function App to Log Analytics workspace"},"type":"String"},"HDInsightLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for HDInsight to stream to a Log Analytics workspace when any HDInsight which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for HDInsight to Log Analytics workspace"},"type":"String"},"IotHubLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for IoT Hub to stream to a Log Analytics workspace when any IoT Hub which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for IoT Hub to Log Analytics workspace"},"type":"String"},"KeyVaultLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Key Vault to stream to a Log Analytics workspace when any Key Vault which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Key Vault to Log Analytics workspace"},"type":"String"},"LoadBalancerLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Load Balancer to stream to a Log Analytics workspace when any Load Balancer which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Load Balancer to Log Analytics workspace"},"type":"String"},"LogicAppsISELogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Logic Apps integration service environment to stream to a Log Analytics workspace when any Logic Apps integration service environment which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Logic Apps integration service environment to Log Analytics workspace"},"type":"String"},"LogicAppsWFLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Logic Apps Workflow runtimeto stream to a Log Analytics workspace when any Logic Apps Workflow runtime which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Logic Apps Workflow runtime to Log Analytics workspace"},"type":"String"},"MariaDBLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for MariaDB to stream to a Log Analytics workspace when any MariaDB  which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for MariaDB to Log Analytics workspace"},"type":"String"},"MediaServiceLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Azure Media Service to stream to a Log Analytics workspace when any Azure Media Service which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Azure Media Service to Log Analytics workspace"},"type":"String"},"MlWorkspaceLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Machine Learning workspace to stream to a Log Analytics workspace when any Machine Learning workspace which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Machine Learning workspace to Log Analytics workspace"},"type":"String"},"MySQLLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Database for MySQL to stream to a Log Analytics workspace when any Database for MySQL which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Database for MySQL to Log Analytics workspace"},"type":"String"},"NetworkNICLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Network Interfaces to stream to a Log Analytics workspace when any Network Interfaces which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Network Interfaces to Log Analytics workspace"},"type":"String"},"NetworkPublicIPNicLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Public IP addresses to stream to a Log Analytics workspace when any Public IP addresses which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Public IP addresses to Log Analytics workspace"},"type":"String"},"NetworkSecurityGroupsLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Network Security Groups to stream to a Log Analytics workspace when any Network Security Groups which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Network Security Groups to Log Analytics workspace"},"type":"String"},"PostgreSQLLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Database for PostgreSQL to stream to a Log Analytics workspace when any Database for PostgreSQL which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Database for PostgreSQL to Log Analytics workspace"},"type":"String"},"PowerBIEmbeddedLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Power BI Embedded to stream to a Log Analytics workspace when any Power BI Embedded which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Power BI Embedded to Log Analytics workspace"},"type":"String"},"RecoveryVaultLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Recovery Services vaults to stream to a Log Analytics workspace when any Recovery Services vaults which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Recovery Services vaults to Log Analytics workspace"},"type":"String"},"RedisCacheLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Redis Cache to stream to a Log Analytics workspace when any Redis Cache which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Redis Cache to Log Analytics workspace"},"type":"String"},"RelayLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Relay to stream to a Log Analytics workspace when any Relay which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Relay to Log Analytics workspace"},"type":"String"},"SQLDBsLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for SQL Databases to stream to a Log Analytics workspace when any SQL Databases  which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for SQL Databases  to Log Analytics workspace"},"type":"String"},"SQLElasticPoolsLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for SQL Elastic Pools to stream to a Log Analytics workspace when any SQL Elastic Pools which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for SQL Elastic Pools to Log Analytics workspace"},"type":"String"},"SQLMLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for SQL Managed Instances to stream to a Log Analytics workspace when any SQL Managed Instances which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for SQL Managed Instances to Log Analytics workspace"},"type":"String"},"SearchServicesLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Search Services to stream to a Log Analytics workspace when any Search Services which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Search Services to Log Analytics workspace"},"type":"String"},"ServiceBusLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for ServiceBus to stream to a Log Analytics workspace when any ServiceBus which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Service Bus namespaces  to Log Analytics workspace"},"type":"String"},"SignalRLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for SignalR to stream to a Log Analytics workspace when any SignalR which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for SignalR to Log Analytics workspace"},"type":"String"},"StorageAccountsLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Storage Accounts to stream to a Log Analytics workspace when any storage account which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Storage Accounts to Log Analytics workspace"},"type":"String"},"StreamAnalyticsLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Stream Analytics to stream to a Log Analytics workspace when any Stream Analytics which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Stream Analytics to Log Analytics workspace"},"type":"String"},"TimeSeriesInsightsLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Time Series Insights to stream to a Log Analytics workspace when any Time Series Insights which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Time Series Insights to Log Analytics workspace"},"type":"String"},"TrafficManagerLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Traffic Manager to stream to a Log Analytics workspace when any Traffic Manager which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Traffic Manager to Log Analytics workspace"},"type":"String"},"VMSSLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Virtual Machine Scale Sets  to stream to a Log Analytics workspace when any Virtual Machine Scale Sets  which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Virtual Machine Scale Sets to Log Analytics workspace"},"type":"String"},"VNetGWLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for VPN Gateway to stream to a Log Analytics workspace when any VPN Gateway which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled.","displayName":"Deploy Diagnostic Settings for VPN Gateway to Log Analytics workspace"},"type":"String"},"VirtualMachinesLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Virtual Machines to stream to a Log Analytics workspace when any Virtual Machines which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Virtual Machines to Log Analytics workspace"},"type":"String"},"VirtualNetworkLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for Virtual Network to stream to a Log Analytics workspace when any Virtual Network which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for Virtual Network to Log Analytics workspace"},"type":"String"},"WVDAppGroupsLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for WVD Application groups to stream to a Log Analytics workspace when any application groups which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for WVD Application Groups to Log Analytics workspace"},"type":"String"},"WVDHostPoolsLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for WVD Host pools to stream to a Log Analytics workspace when any host pool which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for WVD Host pools to Log Analytics workspace"},"type":"String"},"WVDWorkspaceLogAnalyticsEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploys the diagnostic settings for WVD Workspace to stream to a Log Analytics workspace when any Workspace which is missing this diagnostic settings is created or updated. The policy wil  set the diagnostic with all metrics and category enabled","displayName":"Deploy Diagnostic Settings for WVD Workspace to Log Analytics workspace"},"type":"String"},"logAnalytics":{"metadata":{"description":"Select Log Analytics workspace from dropdown list. If this workspace is outside of the scope of the assignment you must manually grant ''Log Analytics Contributor'' permissions (or similar) to the policy assignment''s principal ID.","displayName":"Log Analytics workspace","strongType":"omsWorkspace"},"type":"String"},"profileName":{"defaultValue":"setbypolicy","metadata":{"description":"The diagnostic settings profile name","displayName":"Profile name"},"type":"String"}}'
          policy_definition_group: []
          policy_definition_reference:
            - parameter_values: '{"effect":{"value":"[parameters(''StorageAccountsLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/6f8f98a4-f108-47cb-8e98-91a0d85cd474
              policy_group_names: null
              reference_id: StorageAccountDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''WVDAppGroupsLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDAppGroup
              policy_group_names: null
              reference_id: WVDAppGroupDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''WVDWorkspaceLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDWorkspace
              policy_group_names: null
              reference_id: WVDWorkspaceDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''WVDHostPoolsLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDHostPools
              policy_group_names: null
              reference_id: WVDHostPoolsDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''ACILogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACI
              policy_group_names: null
              reference_id: ACIDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''ACRLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACR
              policy_group_names: null
              reference_id: ACRDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''AKSLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AKS
              policy_group_names: null
              reference_id: AKSDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''AnalysisServiceLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AnalysisService
              policy_group_names: null
              reference_id: AnalysisServiceDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''APIforFHIRLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApiForFHIR
              policy_group_names: null
              reference_id: APIforFHIRDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''APIMgmtLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-APIMgmt
              policy_group_names: null
              reference_id: APIMgmtDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''ApplicationGatewayLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApplicationGateway
              policy_group_names: null
              reference_id: ApplicationGatewayDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''AutomationLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AA
              policy_group_names: null
              reference_id: AutomationDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''BatchLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Batch
              policy_group_names: null
              reference_id: BatchDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''CDNEndpointsLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CDNEndpoints
              policy_group_names: null
              reference_id: CDNEndpointsDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''CognitiveServicesLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CognitiveServices
              policy_group_names: null
              reference_id: CognitiveServicesDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''CosmosLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CosmosDB
              policy_group_names: null
              reference_id: CosmosDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''DatabricksLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Databricks
              policy_group_names: null
              reference_id: DatabricksDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''DataExplorerClusterLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataExplorerCluster
              policy_group_names: null
              reference_id: DataExplorerClusterDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''DataFactoryLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataFactory
              policy_group_names: null
              reference_id: DataFactoryDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''DataLakeStoreLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataLakeStore
              policy_group_names: null
              reference_id: DataLakeStoreDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''DataLakeAnalyticsLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DLAnalytics
              policy_group_names: null
              reference_id: DataLakeAnalyticsDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''EventGridSubLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSub
              policy_group_names: null
              reference_id: EventGridSubDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''EventGridTopicLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridTopic
              policy_group_names: null
              reference_id: EventGridTopicDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''EventHubLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventHub
              policy_group_names: null
              reference_id: EventHubDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''EventSystemTopicLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSystemTopic
              policy_group_names: null
              reference_id: EventSystemTopicDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''ExpressRouteLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ExpressRoute
              policy_group_names: null
              reference_id: ExpressRouteDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''FirewallLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Firewall
              policy_group_names: null
              reference_id: FirewallDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''FrontDoorLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-FrontDoor
              policy_group_names: null
              reference_id: FrontDoorDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''FunctionAppLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Function
              policy_group_names: null
              reference_id: FunctionAppDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''HDInsightLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-HDInsight
              policy_group_names: null
              reference_id: HDInsightDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''IotHubLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-iotHub
              policy_group_names: null
              reference_id: IotHubDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''KeyVaultLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-KeyVault
              policy_group_names: null
              reference_id: KeyVaultDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''LoadBalancerLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LoadBalancer
              policy_group_names: null
              reference_id: LoadBalancerDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''LogicAppsISELogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogicAppsISE
              policy_group_names: null
              reference_id: LogicAppsISEDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''LogicAppsWFLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogicAppsWF
              policy_group_names: null
              reference_id: LogicAppsWFDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''MariaDBLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MariaDB
              policy_group_names: null
              reference_id: MariaDBDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''MediaServiceLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MediaService
              policy_group_names: null
              reference_id: MediaServiceDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''MlWorkspaceLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MlWorkspace
              policy_group_names: null
              reference_id: MlWorkspaceDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''MySQLLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MySQL
              policy_group_names: null
              reference_id: MySQLDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''NetworkSecurityGroupsLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NetworkSecurityGroups
              policy_group_names: null
              reference_id: NetworkSecurityGroupsDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''NetworkNICLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NIC
              policy_group_names: null
              reference_id: NetworkNICDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''PostgreSQLLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PostgreSQL
              policy_group_names: null
              reference_id: PostgreSQLDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''PowerBIEmbeddedLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PowerBIEmbedded
              policy_group_names: null
              reference_id: PowerBIEmbeddedDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''NetworkPublicIPNicLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"metricsEnabled":{"value":"True"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/752154a7-1e0f-45c6-a880-ac75a7e4f648
              policy_group_names: null
              reference_id: NetworkPublicIPNicDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''RecoveryVaultLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-RecoveryVault
              policy_group_names: null
              reference_id: RecoveryVaultDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''RedisCacheLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-RedisCache
              policy_group_names: null
              reference_id: RedisCacheDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''RelayLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Relay
              policy_group_names: null
              reference_id: RelayDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''SearchServicesLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SearchServices
              policy_group_names: null
              reference_id: SearchServicesDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''ServiceBusLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ServiceBus
              policy_group_names: null
              reference_id: ServiceBusDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''SignalRLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SignalR
              policy_group_names: null
              reference_id: SignalRDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''SQLDBsLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLDBs
              policy_group_names: null
              reference_id: SQLDBsDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''SQLElasticPoolsLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLElasticPools
              policy_group_names: null
              reference_id: SQLElasticPoolsDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''SQLMLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLMI
              policy_group_names: null
              reference_id: SQLMDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''StreamAnalyticsLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-StreamAnalytics
              policy_group_names: null
              reference_id: StreamAnalyticsDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''TimeSeriesInsightsLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TimeSeriesInsights
              policy_group_names: null
              reference_id: TimeSeriesInsightsDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''TrafficManagerLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TrafficManager
              policy_group_names: null
              reference_id: TrafficManagerDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''VirtualNetworkLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VirtualNetwork
              policy_group_names: null
              reference_id: VirtualNetworkDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''VirtualMachinesLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VM
              policy_group_names: null
              reference_id: VirtualMachinesDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''VMSSLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VMSS
              policy_group_names: null
              reference_id: VMSSDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''VNetGWLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VNetGW
              policy_group_names: null
              reference_id: VNetGWDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''AppServiceLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WebServerFarm
              policy_group_names: null
              reference_id: AppServiceDeployDiagnosticLogDeployLogAnalytics
            - parameter_values: '{"effect":{"value":"[parameters(''AppServiceWebappLogAnalyticsEffect'')]"},"logAnalytics":{"value":"[parameters(''logAnalytics'')]"},"profileName":{"value":"[parameters(''profileName'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Website
              policy_group_names: null
              reference_id: AppServiceWebappDeployDiagnosticLogDeployLogAnalytics
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Sql-Security"]
        mode: managed
        type: azurerm_policy_set_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Sql-Security
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deploy auditing, Alert, TDE and SQL vulnerability to SQL Databases when it not exist in the deployment
          display_name: Deploy SQL Database built-in SQL security configuration
          management_group_name: myorg-3
          metadata: '{"category":"SQL","version":"1.0.0"}'
          name: Deploy-Sql-Security
          parameters: '{"SqlDbAuditingSettingsDeploySqlSecurityEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploy auditing settings to SQL Database when it not exist in the deployment","displayName":"Deploy SQL database auditing settings"},"type":"String"},"SqlDbSecurityAlertPoliciesDeploySqlSecurityEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploy the security Alert Policies configuration with email admin accounts when it not exist in current configuration","displayName":"Deploy SQL Database security Alert Policies configuration with email admin accounts"},"type":"String"},"SqlDbTdeDeploySqlSecurityEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploy the Transparent Data Encryption when it is not enabled in the deployment","displayName":"Deploy SQL Database Transparent Data Encryption "},"type":"String"},"SqlDbVulnerabilityAssessmentsDeploySqlSecurityEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploy SQL Database vulnerability Assessments when it not exist in the deployment. To the specific  storage account in the parameters","displayName":"Deploy SQL Database vulnerability Assessments"},"type":"String"},"vulnerabilityAssessmentsEmail":{"metadata":{"description":"The email address to send alerts","displayName":"The email address to send alerts"},"type":"String"},"vulnerabilityAssessmentsStorageID":{"metadata":{"description":"The storage account ID to store assessments","displayName":"The storage account ID to store assessments"},"type":"String"}}'
          policy_definition_group: []
          policy_definition_reference:
            - parameter_values: '{"effect":{"value":"[parameters(''SqlDbTdeDeploySqlSecurityEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-Tde
              policy_group_names: null
              reference_id: SqlDbTdeDeploySqlSecurity
            - parameter_values: '{"effect":{"value":"[parameters(''SqlDbSecurityAlertPoliciesDeploySqlSecurityEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-SecurityAlertPolicies
              policy_group_names: null
              reference_id: SqlDbSecurityAlertPoliciesDeploySqlSecurity
            - parameter_values: '{"effect":{"value":"[parameters(''SqlDbAuditingSettingsDeploySqlSecurityEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-AuditingSettings
              policy_group_names: null
              reference_id: SqlDbAuditingSettingsDeploySqlSecurity
            - parameter_values: '{"effect":{"value":"[parameters(''SqlDbVulnerabilityAssessmentsDeploySqlSecurityEffect'')]"},"vulnerabilityAssessmentsEmail":{"value":"[parameters(''vulnerabilityAssessmentsEmail'')]"},"vulnerabilityAssessmentsStorageID":{"value":"[parameters(''vulnerabilityAssessmentsStorageID'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-vulnerabilityAssessments
              policy_group_names: null
              reference_id: SqlDbVulnerabilityAssessmentsDeploySqlSecurity
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policySetDefinitions/Enforce-EncryptTransit"]
        mode: managed
        type: azurerm_policy_set_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policySetDefinitions/Enforce-EncryptTransit
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: 'Choose either Deploy if not exist and append in combination with audit or Select Deny in the Policy effect. Deny polices shift left. Deploy if not exist and append enforce but can be changed, and because missing exsistense condition require then the combination of Audit. '
          display_name: Deny or Deploy and append TLS requirements and SSL enforcement on resources without Encryption in transit
          management_group_name: myorg-3
          metadata: '{"category":"Encryption","version":"1.0.0"}'
          name: Enforce-EncryptTransit
          parameters: '{"AKSIngressHttpsOnlyEffect":{"allowedValues":["audit","deny","disabled"],"defaultValue":"deny","metadata":{"description":"This policy enforces HTTPS ingress in a Kubernetes cluster. This policy is generally available for Kubernetes Service (AKS), and preview for AKS Engine and Azure Arc enabled Kubernetes. For instructions on using this policy, visit https://aka.ms/kubepolicydoc.","displayName":"AKS Service. Enforce HTTPS ingress in Kubernetes cluster"},"type":"String"},"APIAppServiceHttpsEffect":{"allowedValues":["Audit","Disabled","Deny"],"defaultValue":"Audit","metadata":{"description":"Choose Deny or Audit in combination with Append policy. Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks.","displayName":"App Service API App. API App should only be accessible over HTTPS. Choose Deny or Audit in combination with Append policy."},"type":"String"},"APIAppServiceLatestTlsEffect":{"allowedValues":["AuditIfNotExists","Disabled"],"defaultValue":"AuditIfNotExists","metadata":{"description":"App Service API App. Only Audit, deny not possible as it is a related resource.  Upgrade to the latest TLS version.","displayName":"App Service API App. Latest TLS version should be used in your API App"},"type":"String"},"AppServiceHttpEffect":{"allowedValues":["Append","Disabled"],"defaultValue":"Append","metadata":{"description":"Append the AppService sites object to ensure that min Tls version is set to required TLS version. Please note Append does not enforce compliance use then deny.","displayName":"App Service. Appends the AppService sites config WebApp, APIApp, Function App with TLS version selected below"},"type":"String"},"AppServiceTlsVersionEffect":{"allowedValues":["Append","Disabled"],"defaultValue":"Append","metadata":{"description":"App Service. Appends the AppService sites object to ensure that  HTTPS only is enabled for  server/service authentication and protects data in transit from network layer eavesdropping attacks. Please note Append does not enforce compliance use then deny.","displayName":"App Service. Appends the AppService WebApp, APIApp, Function App to enable https only"},"type":"String"},"AppServiceminTlsVersion":{"allowedValues":["1.2","1.0","1.1"],"defaultValue":"1.2","metadata":{"description":"App Service. Select version  minimum TLS version for a  Web App config to enforce","displayName":"App Service. Select version minimum TLS Web App config"},"type":"String"},"FunctionLatestTlsEffect":{"allowedValues":["AuditIfNotExists","Disabled"],"defaultValue":"AuditIfNotExists","metadata":{"description":"Only Audit, deny not possible as it is a related resource. Upgrade to the latest TLS version.","displayName":"App Service Function App. Latest TLS version should be used in your Function App"},"type":"String"},"FunctionServiceHttpsEffect":{"allowedValues":["Audit","Disabled","Deny"],"defaultValue":"Audit","metadata":{"description":"App Service Function App. Choose Deny or Audit in combination with Append policy. Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks.","displayName":"App Service Function App. Function App should only be accessible over HTTPS. Choose Deny or Audit in combination with Append policy."},"type":"String"},"MySQLEnableSSLDeployEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploy a specific min TLS version requirement and enforce SSL on Azure Database for MySQL server. Enforce the Server to client applications using minimum version of Tls to secure the connection between your database server and your client applications helps protect against ''man in the middle'' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.","displayName":"MySQL database servers. Deploy if not exist set minimum TLS version Azure Database for MySQL server"},"type":"String"},"MySQLEnableSSLEffect":{"allowedValues":["Audit","Disabled","Deny"],"defaultValue":"Audit","metadata":{"description":"Azure Database for MySQL supports connecting your Azure Database for MySQL server to client applications using Secure Sockets Layer (SSL). Enforcing SSL connections between your database server and your client applications helps protect against ''man in the middle'' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.","displayName":"MySQL database servers. Enforce SSL connection should be enabled for MySQL database servers"},"type":"String"},"MySQLminimalTlsVersion":{"allowedValues":["TLS1_2","TLS1_0","TLS1_1","TLSEnforcementDisabled"],"defaultValue":"TLS1_2","metadata":{"description":"Select version  minimum TLS version Azure Database for MySQL server to enforce","displayName":"MySQL database servers. Select version minimum TLS for MySQL server"},"type":"String"},"PostgreSQLEnableSSLDeployEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploy a specific min TLS version requirement and enforce SSL on Azure Database for PostgreSQL server. Enforce the Server to client applications using minimum version of Tls to secure the connection between your database server and your client applications helps protect against ''man in the middle'' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.","displayName":"PostgreSQL database servers. Deploy if not exist set minimum TLS version Azure Database for PostgreSQL server"},"type":"String"},"PostgreSQLEnableSSLEffect":{"allowedValues":["Audit","Disabled","Deny"],"defaultValue":"Audit","metadata":{"description":"Azure Database for PostgreSQL supports connecting your Azure Database for PostgreSQL server to client applications using Secure Sockets Layer (SSL). Enforcing SSL connections between your database server and your client applications helps protect against ''man in the middle'' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.","displayName":"PostgreSQL database servers. Enforce SSL connection should be enabled for PostgreSQL database servers"},"type":"String"},"PostgreSQLminimalTlsVersion":{"allowedValues":["TLS1_2","TLS1_0","TLS1_1","TLSEnforcementDisabled"],"defaultValue":"TLS1_2","metadata":{"description":"PostgreSQL database servers. Select version  minimum TLS version Azure Database for MySQL server to enforce","displayName":"PostgreSQL database servers. Select version minimum TLS for MySQL server"},"type":"String"},"RedisMinTlsVersion":{"allowedValues":["1.2","1.0","1.1"],"defaultValue":"1.2","metadata":{"description":"Select version  minimum TLS version for a Azure Cache for Redis to enforce","displayName":"Azure Cache for Redis.Select version minimum TLS for Azure Cache for Redis"},"type":"String"},"RedisTLSDeployEffect":{"allowedValues":["Append","Disabled"],"defaultValue":"Append","metadata":{"description":"Deploy a specific min TLS version requirement and enforce SSL on Azure Cache for Redis. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against ''man in the middle'' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.","displayName":"Azure Cache for Redis. Deploy a specific min TLS version requirement and enforce SSL Azure Cache for Redis"},"type":"String"},"RedisTLSEffect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Audit","metadata":{"description":"Azure Cache for Redis. Audit enabling of only connections via SSL to Azure Cache for Redis. Use of secure connections ensures authentication between the server and the service and protects data in transit from network layer attacks such as man-in-the-middle, eavesdropping, and session-hijacking.","displayName":"Azure Cache for Redis. Only secure connections to your Azure Cache for Redis should be enabled"},"type":"String"},"SQLManagedInstanceMinTlsVersion":{"allowedValues":["1.2","1.0","1.1"],"defaultValue":"1.2","metadata":{"description":"Select version  minimum TLS version for Azure Managed Instanceto to  enforce","displayName":"Azure Managed Instance.Select version minimum TLS for Azure Managed Instance"},"type":"String"},"SQLManagedInstanceTLSDeployEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploy a specific min TLS version requirement and enforce SSL on SQL servers. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against ''man in the middle'' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.","displayName":"Azure Managed Instance. Deploy a specific min TLS version requirement and enforce SSL on SQL servers"},"type":"String"},"SQLManagedInstanceTLSEffect":{"allowedValues":["Audit","Disabled","Deny"],"defaultValue":"Audit","metadata":{"description":"Setting minimal TLS version to 1.2 improves security by ensuring your SQL Managed Instance can only be accessed from clients using TLS 1.2. Using versions of TLS less than 1.2 is not recommended since they have well documented security vulnerabilities.","displayName":"SQL Managed Instance should have the minimal TLS version of 1.2"},"type":"String"},"SQLServerTLSDeployEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Deploy a specific min TLS version requirement and enforce SSL on SQL servers. Enables secure server to client by enforce  minimal Tls Version to secure the connection between your database server and your client applications helps protect against ''man in the middle'' attacks by encrypting the data stream between the server and your application. This configuration enforces that SSL is always enabled for accessing your database server.","displayName":"Azure SQL Database. Deploy a specific min TLS version requirement and enforce SSL on SQL servers"},"type":"String"},"SQLServerTLSEffect":{"allowedValues":["Audit","Disabled","Deny"],"defaultValue":"Audit","metadata":{"description":"Setting minimal TLS version to 1.2 improves security by ensuring your Azure SQL Database can only be accessed from clients using TLS 1.2. Using versions of TLS less than 1.2 is not recommended since they have well documented security vulnerabilities.","displayName":"Azure SQL Database should have the minimal TLS version of 1.2"},"type":"String"},"SQLServerminTlsVersion":{"allowedValues":["1.2","1.0","1.1"],"defaultValue":"1.2","metadata":{"description":"Select version  minimum TLS version for Azure SQL Database to enforce","displayName":"Azure SQL Database.Select version minimum TLS for Azure SQL Database"},"type":"String"},"StorageDeployHttpsEnabledEffect":{"allowedValues":["DeployIfNotExists","Disabled"],"defaultValue":"DeployIfNotExists","metadata":{"description":"Audit requirement of Secure transfer in your storage account. Secure transfer is an option that forces your storage account to accept requests only from secure connections (HTTPS). Use of HTTPS ensures authentication between the server and the service and protects data in transit from network layer attacks such as man-in-the-middle, eavesdropping, and session-hijacking","displayName":"Azure Storage Account. Deploy Secure transfer to storage accounts should be enabled"},"type":"String"},"StorageHttpsEnabledEffect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Audit","metadata":{"description":"Audit requirement of Secure transfer in your storage account. Secure transfer is an option that forces your storage account to accept requests only from secure connections (HTTPS). Use of HTTPS ensures authentication between the server and the service and protects data in transit from network layer attacks such as man-in-the-middle, eavesdropping, and session-hijacking","displayName":"Azure Storage Account. Secure transfer to storage accounts should be enabled"},"type":"String"},"StorageminimumTlsVersion":{"allowedValues":["TLS1_2","TLS1_1","TLS1_0"],"defaultValue":"TLS1_2","metadata":{"description":"Select version  minimum TLS version on Azure Storage Account to enforce","displayName":"Storage Account select minimum TLS version"},"type":"String"},"WebAppServiceHttpsEffect":{"allowedValues":["Audit","Disabled","Deny"],"defaultValue":"Audit","metadata":{"description":"Choose Deny or Audit in combination with Append policy. Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks.","displayName":"App Service Web App. Web Application should only be accessible over HTTPS. Choose Deny or Audit in combination with Append policy."},"type":"String"},"WebAppServiceLatestTlsEffect":{"allowedValues":["AuditIfNotExists","Disabled"],"defaultValue":"AuditIfNotExists","metadata":{"description":"Only Audit, deny not possible as it is a related resource. Upgrade to the latest TLS version.","displayName":"App Service Web App. Latest TLS version should be used in your Web App"},"type":"String"}}'
          policy_definition_group: []
          policy_definition_reference:
            - parameter_values: '{"effect":{"value":"[parameters(''AppServiceHttpEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-httpsonly
              policy_group_names: null
              reference_id: AppServiceHttpEffect
            - parameter_values: '{"effect":{"value":"[parameters(''AppServiceTlsVersionEffect'')]"},"minTlsVersion":{"value":"[parameters(''AppServiceminTlsVersion'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-latestTLS
              policy_group_names: null
              reference_id: AppServiceminTlsVersion
            - parameter_values: '{"effect":{"value":"[parameters(''APIAppServiceLatestTlsEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/8cb6aa8b-9e41-4f4e-aa25-089a7ac2581e
              policy_group_names: null
              reference_id: APIAppServiceLatestTlsEffect
            - parameter_values: '{"effect":{"value":"[parameters(''FunctionLatestTlsEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/f9d614c5-c173-4d56-95a7-b4437057d193
              policy_group_names: null
              reference_id: FunctionLatestTlsEffect
            - parameter_values: '{"effect":{"value":"[parameters(''WebAppServiceLatestTlsEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/f0e6e85b-9b9f-4a4b-b67b-f730d42f1b0b
              policy_group_names: null
              reference_id: WebAppServiceLatestTlsEffect
            - parameter_values: '{"effect":{"value":"[parameters(''APIAppServiceHttpsEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceApiApp-http
              policy_group_names: null
              reference_id: APIAppServiceHttpsEffect
            - parameter_values: '{"effect":{"value":"[parameters(''FunctionServiceHttpsEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceFunctionApp-http
              policy_group_names: null
              reference_id: FunctionServiceHttpsEffect
            - parameter_values: '{"effect":{"value":"[parameters(''WebAppServiceHttpsEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceWebApp-http
              policy_group_names: null
              reference_id: WebAppServiceHttpsEffect
            - parameter_values: '{"effect":{"value":"[parameters(''AKSIngressHttpsOnlyEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/1a5b4dca-0b6f-4cf5-907c-56316bc1bf3d
              policy_group_names: null
              reference_id: AKSIngressHttpsOnlyEffect
            - parameter_values: '{"effect":{"value":"[parameters(''MySQLEnableSSLDeployEffect'')]"},"minimalTlsVersion":{"value":"[parameters(''MySQLminimalTlsVersion'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-MySQL-sslEnforcement
              policy_group_names: null
              reference_id: MySQLEnableSSLDeployEffect
            - parameter_values: '{"effect":{"value":"[parameters(''MySQLEnableSSLEffect'')]"},"minimalTlsVersion":{"value":"[parameters(''MySQLminimalTlsVersion'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-MySql-http
              policy_group_names: null
              reference_id: MySQLEnableSSLEffect
            - parameter_values: '{"effect":{"value":"[parameters(''PostgreSQLEnableSSLDeployEffect'')]"},"minimalTlsVersion":{"value":"[parameters(''PostgreSQLminimalTlsVersion'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-PostgreSQL-sslEnforcement
              policy_group_names: null
              reference_id: PostgreSQLEnableSSLDeployEffect
            - parameter_values: '{"effect":{"value":"[parameters(''PostgreSQLEnableSSLEffect'')]"},"minimalTlsVersion":{"value":"[parameters(''PostgreSQLminimalTlsVersion'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-PostgreSql-http
              policy_group_names: null
              reference_id: PostgreSQLEnableSSLEffect
            - parameter_values: '{"effect":{"value":"[parameters(''RedisTLSDeployEffect'')]"},"minimumTlsVersion":{"value":"[parameters(''RedisMinTlsVersion'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-sslEnforcement
              policy_group_names: null
              reference_id: RedisTLSDeployEffect
            - parameter_values: '{"effect":{"value":"[parameters(''RedisTLSDeployEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-disableNonSslPort
              policy_group_names: null
              reference_id: RedisdisableNonSslPort
            - parameter_values: '{"effect":{"value":"[parameters(''RedisTLSEffect'')]"},"minimumTlsVersion":{"value":"[parameters(''RedisMinTlsVersion'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-Redis-http
              policy_group_names: null
              reference_id: RedisDenyhttps
            - parameter_values: '{"effect":{"value":"[parameters(''SQLManagedInstanceTLSDeployEffect'')]"},"minimalTlsVersion":{"value":"[parameters(''SQLManagedInstanceMinTlsVersion'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-SqlMi-minTLS
              policy_group_names: null
              reference_id: SQLManagedInstanceTLSDeployEffect
            - parameter_values: '{"effect":{"value":"[parameters(''SQLManagedInstanceTLSEffect'')]"},"minimalTlsVersion":{"value":"[parameters(''SQLManagedInstanceMinTlsVersion'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-SqlMi-minTLS
              policy_group_names: null
              reference_id: SQLManagedInstanceTLSEffect
            - parameter_values: '{"effect":{"value":"[parameters(''SQLServerTLSDeployEffect'')]"},"minimalTlsVersion":{"value":"[parameters(''SQLServerminTlsVersion'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-SQL-minTLS
              policy_group_names: null
              reference_id: SQLServerTLSDeployEffect
            - parameter_values: '{"effect":{"value":"[parameters(''SQLServerTLSEffect'')]"},"minimalTlsVersion":{"value":"[parameters(''SQLServerminTlsVersion'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-Sql-minTLS
              policy_group_names: null
              reference_id: SQLServerTLSEffect
            - parameter_values: '{"effect":{"value":"[parameters(''StorageHttpsEnabledEffect'')]"},"minimumTlsVersion":{"value":"[parameters(''StorageMinimumTlsVersion'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-Storage-minTLS
              policy_group_names: null
              reference_id: StorageHttpsEnabledEffect
            - parameter_values: '{"effect":{"value":"[parameters(''StorageDeployHttpsEnabledEffect'')]"},"minimumTlsVersion":{"value":"[parameters(''StorageMinimumTlsVersion'')]"}}'
              policy_definition_id: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Storage-sslEnforcement
              policy_group_names: null
              reference_id: StorageDeployHttpsEnabledEffect
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_policy_set_definition.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Encryption-CMK"]
        mode: managed
        type: azurerm_policy_set_definition
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Encryption-CMK
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Deny or Audit resources without Encryption with a customer-managed key (CMK)
          display_name: Deny or Audit resources without Encryption with a customer-managed key (CMK)
          management_group_name: myorg-3
          metadata: '{"category":"Encryption","version":"1.0.0"}'
          name: Enforce-Encryption-CMK
          parameters: '{"ACRCmkEffect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Audit","metadata":{"description":"Use customer-managed keys to manage the encryption at rest of the contents of your registries. By default, the data is encrypted at rest with service-managed keys, but customer-managed keys (CMK) are commonly required to meet regulatory compliance standards. CMKs enable the data to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management. Learn more about CMK encryption at https://aka.ms/acr/CMK.","displayName":"Container registries should be encrypted with a customer-managed key (CMK)"},"type":"String"},"AksCmkEffect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Audit","metadata":{"description":"Encrypting OS and data disks using customer-managed keys provides more control and greater flexibility in key management. This is a common requirement in many regulatory and industry compliance standards.","displayName":"Azure Kubernetes Service clusters both operating systems and data disks should be encrypted by customer-managed keys"},"type":"String"},"AzureBatchCMKEffect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Audit","metadata":{"description":"Use customer-managed keys (CMKs) to manage the encryption at rest of your Batch account''s data. By default, customer data is encrypted with service-managed keys, but CMKs are commonly required to meet regulatory compliance standards. CMKs enable the data to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management. Learn more about CMK encryption at https://aka.ms/Batch-CMK.","displayName":"Azure Batch account should use customer-managed keys to encrypt data"},"type":"String"},"CognitiveServicesCMKEffect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Audit","metadata":{"description":"Customer-managed keys (CMK) are commonly required to meet regulatory compliance standards. CMKs enable the data stored in Cognitive Services to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management. Learn more about CMK encryption at https://aka.ms/cosmosdb-cmk.","displayName":"Cognitive Services accounts should enable data encryption with a customer-managed key (CMK)"},"type":"String"},"CosmosCMKEffect":{"allowedValues":["audit","deny","disabled"],"defaultValue":"audit","metadata":{"description":"Use customer-managed keys to manage the encryption at rest of your Azure Cosmos DB. By default, the data is encrypted at rest with service-managed keys, but customer-managed keys (CMK) are commonly required to meet regulatory compliance standards. CMKs enable the data to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management. Learn more about CMK encryption at https://aka.ms/cosmosdb-cmk.","displayName":"Azure Cosmos DB accounts should use customer-managed keys to encrypt data at rest"},"type":"String"},"DataBoxCMKEffect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Audit","metadata":{"description":"Use a customer-managed key to control the encryption of the device unlock password for Azure Data Box. Customer-managed keys also help manage access to the device unlock password by the Data Box service in order to prepare the device and copy data in an automated manner. The data on the device itself is already encrypted at rest with Advanced Encryption Standard 256-bit encryption, and the device unlock password is encrypted by default with a Microsoft managed key.","displayName":"Azure Data Box jobs should use a customer-managed key to encrypt the device unlock password"},"type":"String"},"EncryptedVMDisksEffect":{"allowedValues":["AuditIfNotExists","Disabled"],"defaultValue":"AuditIfNotExists","metadata":{"description":"Virtual machines without an enabled disk encryption will be monitored by Azure Security Center as recommendations.","displayName":"Disk encryption should be applied on virtual machines"},"type":"String"},"HealthcareAPIsCMKEffect":{"allowedValues":["audit","disabled"],"defaultValue":"audit","metadata":{"description":"Use a customer-managed key to control the encryption at rest of the data stored in Azure API for FHIR when this is a regulatory or compliance requirement. Customer-managed keys also deliver double encryption by adding a second layer of encryption on top of the default one done with service-managed keys.","displayName":"Azure API for FHIR should use a customer-managed key (CMK) to encrypt data at rest"},"type":"String"},"MySQLCMKEffect":{"allowedValues":["AuditIfNotExists","Disabled"],"defaultValue":"AuditIfNotExists","metadata":{"description":"Use customer-managed keys to manage the encryption at rest of your MySQL servers. By default, the data is encrypted at rest with service-managed keys, but customer-managed keys (CMK) are commonly required to meet regulatory compliance standards. CMKs enable the data to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management.","displayName":"Azure MySQL servers bring your own key data protection should be enabled"},"type":"String"},"PostgreSQLCMKEffect":{"allowedValues":["AuditIfNotExists","Disabled"],"defaultValue":"AuditIfNotExists","metadata":{"description":"Use customer-managed keys to manage the encryption at rest of your PostgreSQL servers. By default, the data is encrypted at rest with service-managed keys, but customer-managed keys (CMK) are commonly required to meet regulatory compliance standards. CMKs enable the data to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management.","displayName":"Azure PostgreSQL servers bring your own key data protection should be enabled"},"type":"String"},"SqlServerTDECMKEffect":{"allowedValues":["AuditIfNotExists","Disabled"],"defaultValue":"AuditIfNotExists","metadata":{"description":"Implementing Transparent Data Encryption (TDE) with your own key provides increased transparency and control over the TDE Protector, increased security with an HSM-backed external service, and promotion of separation of duties. This recommendation applies to organizations with a related compliance requirement.","displayName":"SQL servers should use customer-managed keys to encrypt data at rest"},"type":"String"},"StorageCMKEffect":{"allowedValues":["Audit","Disabled"],"defaultValue":"Audit","metadata":{"description":"Secure your storage account with greater flexibility using customer-managed keys (CMKs). When you specify a CMK, that key is used to protect and control access to the key that encrypts your data. Using CMKs provides additional capabilities to control rotation of the key encryption key or cryptographically erase data.","displayName":"Storage accounts should use customer-managed key (CMK) for encryption, no deny as this would result in not able to create storage account because the first need of MSI for encryption"},"type":"String"},"StreamAnalyticsCMKEffect":{"allowedValues":["audit","deny","disabled"],"defaultValue":"audit","metadata":{"description":"Use customer-managed keys when you want to securely store any metadata and private data assets of your Stream Analytics jobs in your storage account. This gives you total control over how your Stream Analytics data is encrypted.","displayName":"Azure Stream Analytics jobs should use customer-managed keys to encrypt data"},"type":"String"},"SynapseWorkspaceCMKEffect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Audit","metadata":{"description":"Use customer-managed keys to control the encryption at rest of the data stored in Azure Synapse workspaces. Customer-managed keys deliver double encryption by adding a second layer of encryption on top of the default encryption with service-managed keys.","displayName":"Azure Synapse workspaces should use customer-managed keys to encrypt data at rest"},"type":"String"},"WorkspaceCMKEffect":{"allowedValues":["Audit","Deny","Disabled"],"defaultValue":"Audit","metadata":{"description":"Manage encryption at rest of your Azure Machine Learning workspace data with customer-managed keys (CMK). By default, customer data is encrypted with service-managed keys, but CMKs are commonly required to meet regulatory compliance standards. CMKs enable the data to be encrypted with an Azure Key Vault key created and owned by you. You have full control and responsibility for the key lifecycle, including rotation and management. Learn more about CMK encryption at https://aka.ms/azureml-workspaces-cmk.","displayName":"Azure Machine Learning workspaces should be encrypted with a customer-managed key (CMK)"},"type":"String"}}'
          policy_definition_group: []
          policy_definition_reference:
            - parameter_values: '{"effect":{"value":"[parameters(''ACRCmkEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/5b9159ae-1701-4a6f-9a7a-aa9c8ddd0580
              policy_group_names: null
              reference_id: ACRCmkDeny
            - parameter_values: '{"effect":{"value":"[parameters(''AksCmkEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/7d7be79c-23ba-4033-84dd-45e2a5ccdd67
              policy_group_names: null
              reference_id: AksCmkDeny
            - parameter_values: '{"effect":{"value":"[parameters(''WorkspaceCMKEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/ba769a63-b8cc-4b2d-abf6-ac33c7204be8
              policy_group_names: null
              reference_id: WorkspaceCMK
            - parameter_values: '{"effect":{"value":"[parameters(''CognitiveServicesCMKEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/67121cc7-ff39-4ab8-b7e3-95b84dab487d
              policy_group_names: null
              reference_id: CognitiveServicesCMK
            - parameter_values: '{"effect":{"value":"[parameters(''CosmosCMKEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/1f905d99-2ab7-462c-a6b0-f709acca6c8f
              policy_group_names: null
              reference_id: CosmosCMKEffect
            - parameter_values: '{"effect":{"value":"[parameters(''DataBoxCMKEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/86efb160-8de7-451d-bc08-5d475b0aadae
              policy_group_names: null
              reference_id: DataBoxCMKEffect
            - parameter_values: '{"effect":{"value":"[parameters(''StreamAnalyticsCMKEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/87ba29ef-1ab3-4d82-b763-87fcd4f531f7
              policy_group_names: null
              reference_id: StreamAnalyticsCMKEffect
            - parameter_values: '{"effect":{"value":"[parameters(''SynapseWorkspaceCMKEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/f7d52b2d-e161-4dfa-a82b-55e564167385
              policy_group_names: null
              reference_id: SynapseWorkspaceCMKEffect
            - parameter_values: '{"effect":{"value":"[parameters(''StorageCMKEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/6fac406b-40ca-413b-bf8e-0bf964659c25
              policy_group_names: null
              reference_id: StorageCMKEffect
            - parameter_values: '{"effect":{"value":"[parameters(''MySQLCMKEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/83cef61d-dbd1-4b20-a4fc-5fbc7da10833
              policy_group_names: null
              reference_id: MySQLCMKEffect
            - parameter_values: '{"effect":{"value":"[parameters(''PostgreSQLCMKEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/18adea5e-f416-4d0f-8aa8-d24321e3e274
              policy_group_names: null
              reference_id: PostgreSQLCMKEffect
            - parameter_values: '{"effect":{"value":"[parameters(''SqlServerTDECMKEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/0d134df8-db83-46fb-ad72-fe0c9428c8dd
              policy_group_names: null
              reference_id: SqlServerTDECMKEffect
            - parameter_values: '{"effect":{"value":"[parameters(''HealthcareAPIsCMKEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/051cba44-2429-45b9-9649-46cec11c7119
              policy_group_names: null
              reference_id: HealthcareAPIsCMKEffect
            - parameter_values: '{"effect":{"value":"[parameters(''AzureBatchCMKEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/99e9ccd8-3db9-4592-b0d1-14b1715a4d8a
              policy_group_names: null
              reference_id: AzureBatchCMKEffect
            - parameter_values: '{"effect":{"value":"[parameters(''EncryptedVMDisksEffect'')]"}}'
              policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/0961003e-5a0a-4549-abde-af6a37f2724d
              policy_group_names: null
              reference_id: EncryptedVMDisksEffect
          policy_type: Custom
          timeouts: null
      - address: module.test_root_id_3.azurerm_resource_group.enterprise_scale["/subscriptions/b472fb3a-8b1f-4494-bfdb-5f2f380d04f8/resourceGroups/myorg-3-mgmt"]
        mode: managed
        type: azurerm_resource_group
        name: enterprise_scale
        index: /subscriptions/b472fb3a-8b1f-4494-bfdb-5f2f380d04f8/resourceGroups/myorg-3-mgmt
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          location: uksouth
          name: myorg-3-mgmt
          tags:
            deployedBy: terraform/azure/caf-enterprise-scale
          timeouts: null
      - address: module.test_root_id_3.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3-customer-sap/providers/Microsoft.Authorization/roleAssignments/207a5b54-9b17-5bd1-96f8-268924017981"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3-customer-sap/providers/Microsoft.Authorization/roleAssignments/207a5b54-9b17-5bd1-96f8-268924017981
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: 207a5b54-9b17-5bd1-96f8-268924017981
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/9980e02c-c2be-4d73-94e8-173b1dc7cf3c
          scope: /providers/Microsoft.Management/managementGroups/myorg-3-customer-sap
          timeouts: null
      - address: module.test_root_id_3.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3-customer-sap/providers/Microsoft.Authorization/roleAssignments/2f139301-0ff6-5a13-973c-8ea35eebe2b0"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3-customer-sap/providers/Microsoft.Authorization/roleAssignments/2f139301-0ff6-5a13-973c-8ea35eebe2b0
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: 2f139301-0ff6-5a13-973c-8ea35eebe2b0
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/17d1049b-9a84-46fb-8f53-869881c3d3ab
          scope: /providers/Microsoft.Management/managementGroups/myorg-3-customer-sap
          timeouts: null
      - address: module.test_root_id_3.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3-customer-sap/providers/Microsoft.Authorization/roleAssignments/77e578fe-ff27-538f-adc4-730db71fdd0d"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3-customer-sap/providers/Microsoft.Authorization/roleAssignments/77e578fe-ff27-538f-adc4-730db71fdd0d
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: 77e578fe-ff27-538f-adc4-730db71fdd0d
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa
          scope: /providers/Microsoft.Management/managementGroups/myorg-3-customer-sap
          timeouts: null
      - address: module.test_root_id_3.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3-customer-sap/providers/Microsoft.Authorization/roleAssignments/b7bf3386-c1ee-5a60-9641-6a30a45acdf7"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3-customer-sap/providers/Microsoft.Authorization/roleAssignments/b7bf3386-c1ee-5a60-9641-6a30a45acdf7
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: b7bf3386-c1ee-5a60-9641-6a30a45acdf7
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c
          scope: /providers/Microsoft.Management/managementGroups/myorg-3-customer-sap
          timeouts: null
      - address: module.test_root_id_3.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3-customer-sap/providers/Microsoft.Authorization/roleAssignments/d64a855e-addd-5bd3-bf31-c6665d7c5d14"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3-customer-sap/providers/Microsoft.Authorization/roleAssignments/d64a855e-addd-5bd3-bf31-c6665d7c5d14
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: d64a855e-addd-5bd3-bf31-c6665d7c5d14
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7
          scope: /providers/Microsoft.Management/managementGroups/myorg-3-customer-sap
          timeouts: null
      - address: module.test_root_id_3.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3-landing-zones/providers/Microsoft.Authorization/roleAssignments/19e1649f-7277-5e64-867f-8773880ddd4c"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3-landing-zones/providers/Microsoft.Authorization/roleAssignments/19e1649f-7277-5e64-867f-8773880ddd4c
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: 19e1649f-7277-5e64-867f-8773880ddd4c
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/5e467623-bb1f-42f4-a55d-6e525e11384b
          scope: /providers/Microsoft.Management/managementGroups/myorg-3-landing-zones
          timeouts: null
      - address: module.test_root_id_3.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3-landing-zones/providers/Microsoft.Authorization/roleAssignments/1b3b204a-680d-5241-825e-d6cc8150b164"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3-landing-zones/providers/Microsoft.Authorization/roleAssignments/1b3b204a-680d-5241-825e-d6cc8150b164
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: 1b3b204a-680d-5241-825e-d6cc8150b164
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/9980e02c-c2be-4d73-94e8-173b1dc7cf3c
          scope: /providers/Microsoft.Management/managementGroups/myorg-3-landing-zones
          timeouts: null
      - address: module.test_root_id_3.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3-landing-zones/providers/Microsoft.Authorization/roleAssignments/457bf416-d80f-58ff-a498-468d506da4cc"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3-landing-zones/providers/Microsoft.Authorization/roleAssignments/457bf416-d80f-58ff-a498-468d506da4cc
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: 457bf416-d80f-58ff-a498-468d506da4cc
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/ed7f3fbd-7b88-4dd4-9017-9adb7ce333f8
          scope: /providers/Microsoft.Management/managementGroups/myorg-3-landing-zones
          timeouts: null
      - address: module.test_root_id_3.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3-landing-zones/providers/Microsoft.Authorization/roleAssignments/99290d7c-a172-5310-bcfd-a744c96e9997"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3-landing-zones/providers/Microsoft.Authorization/roleAssignments/99290d7c-a172-5310-bcfd-a744c96e9997
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: 99290d7c-a172-5310-bcfd-a744c96e9997
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/9b7fa17d-e63e-47b0-bb0a-15c516ac86ec
          scope: /providers/Microsoft.Management/managementGroups/myorg-3-landing-zones
          timeouts: null
      - address: module.test_root_id_3.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3-management/providers/Microsoft.Authorization/roleAssignments/3f38bf91-7fd6-52cc-ae3a-294080f1b1ea"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3-management/providers/Microsoft.Authorization/roleAssignments/3f38bf91-7fd6-52cc-ae3a-294080f1b1ea
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: 3f38bf91-7fd6-52cc-ae3a-294080f1b1ea
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa
          scope: /providers/Microsoft.Management/managementGroups/myorg-3-management
          timeouts: null
      - address: module.test_root_id_3.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3-management/providers/Microsoft.Authorization/roleAssignments/8da794b1-3948-5f39-889a-5674ab8ddd00"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3-management/providers/Microsoft.Authorization/roleAssignments/8da794b1-3948-5f39-889a-5674ab8ddd00
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: 8da794b1-3948-5f39-889a-5674ab8ddd00
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293
          scope: /providers/Microsoft.Management/managementGroups/myorg-3-management
          timeouts: null
      - address: module.test_root_id_3.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/05e6826e-c0ed-5d51-977b-bc10e672b939"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/05e6826e-c0ed-5d51-977b-bc10e672b939
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: 05e6826e-c0ed-5d51-977b-bc10e672b939
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293
          scope: /providers/Microsoft.Management/managementGroups/myorg-3
          timeouts: null
      - address: module.test_root_id_3.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/2639a403-9029-5a74-a65c-e080797f6a1c"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/2639a403-9029-5a74-a65c-e080797f6a1c
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: 2639a403-9029-5a74-a65c-e080797f6a1c
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c
          scope: /providers/Microsoft.Management/managementGroups/myorg-3
          timeouts: null
      - address: module.test_root_id_3.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/36088e64-b1d1-5fb7-b99f-9bc4ee81a9c8"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/36088e64-b1d1-5fb7-b99f-9bc4ee81a9c8
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: 36088e64-b1d1-5fb7-b99f-9bc4ee81a9c8
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa
          scope: /providers/Microsoft.Management/managementGroups/myorg-3
          timeouts: null
      - address: module.test_root_id_3.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/3d6ab317-7357-521b-b5e8-1b706ecd744a"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/3d6ab317-7357-521b-b5e8-1b706ecd744a
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: 3d6ab317-7357-521b-b5e8-1b706ecd744a
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293
          scope: /providers/Microsoft.Management/managementGroups/myorg-3
          timeouts: null
      - address: module.test_root_id_3.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/499c3ee6-f049-5472-b69f-056a209ee521"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/499c3ee6-f049-5472-b69f-056a209ee521
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: 499c3ee6-f049-5472-b69f-056a209ee521
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c
          scope: /providers/Microsoft.Management/managementGroups/myorg-3
          timeouts: null
      - address: module.test_root_id_3.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/4c8095f1-1344-5bf0-b3aa-705d1b723bce"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/4c8095f1-1344-5bf0-b3aa-705d1b723bce
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: 4c8095f1-1344-5bf0-b3aa-705d1b723bce
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293
          scope: /providers/Microsoft.Management/managementGroups/myorg-3
          timeouts: null
      - address: module.test_root_id_3.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/573872ae-4ff8-52e6-80fc-ce716e7ea175"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/573872ae-4ff8-52e6-80fc-ce716e7ea175
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: 573872ae-4ff8-52e6-80fc-ce716e7ea175
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7
          scope: /providers/Microsoft.Management/managementGroups/myorg-3
          timeouts: null
      - address: module.test_root_id_3.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/7216205c-ca85-5af0-b14e-a9666dc2c688"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/7216205c-ca85-5af0-b14e-a9666dc2c688
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: 7216205c-ca85-5af0-b14e-a9666dc2c688
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293
          scope: /providers/Microsoft.Management/managementGroups/myorg-3
          timeouts: null
      - address: module.test_root_id_3.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/76acd7bb-b449-505f-8eb4-8f48f4c2980a"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/76acd7bb-b449-505f-8eb4-8f48f4c2980a
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: 76acd7bb-b449-505f-8eb4-8f48f4c2980a
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/17d1049b-9a84-46fb-8f53-869881c3d3ab
          scope: /providers/Microsoft.Management/managementGroups/myorg-3
          timeouts: null
      - address: module.test_root_id_3.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/7e07d7dc-6d7c-5494-abb1-1dc09474c33f"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/7e07d7dc-6d7c-5494-abb1-1dc09474c33f
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: 7e07d7dc-6d7c-5494-abb1-1dc09474c33f
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/17d1049b-9a84-46fb-8f53-869881c3d3ab
          scope: /providers/Microsoft.Management/managementGroups/myorg-3
          timeouts: null
      - address: module.test_root_id_3.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/a6c5c6b2-2a70-5422-b834-a8d24cb85e6c"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/a6c5c6b2-2a70-5422-b834-a8d24cb85e6c
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: a6c5c6b2-2a70-5422-b834-a8d24cb85e6c
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa
          scope: /providers/Microsoft.Management/managementGroups/myorg-3
          timeouts: null
      - address: module.test_root_id_3.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/c0552ed6-a893-564a-9706-8fc6ba3752fe"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/c0552ed6-a893-564a-9706-8fc6ba3752fe
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: c0552ed6-a893-564a-9706-8fc6ba3752fe
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293
          scope: /providers/Microsoft.Management/managementGroups/myorg-3
          timeouts: null
      - address: module.test_root_id_3.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/cca56fa4-07b7-54a1-9e9c-49a42b7dda5f"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/cca56fa4-07b7-54a1-9e9c-49a42b7dda5f
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: cca56fa4-07b7-54a1-9e9c-49a42b7dda5f
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/9980e02c-c2be-4d73-94e8-173b1dc7cf3c
          scope: /providers/Microsoft.Management/managementGroups/myorg-3
          timeouts: null
      - address: module.test_root_id_3.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/d661a31a-da27-5650-b064-7a93f091b098"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/d661a31a-da27-5650-b064-7a93f091b098
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: d661a31a-da27-5650-b064-7a93f091b098
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293
          scope: /providers/Microsoft.Management/managementGroups/myorg-3
          timeouts: null
      - address: module.test_root_id_3.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/e9c384db-7603-5acb-9880-9f5f337c3cff"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/e9c384db-7603-5acb-9880-9f5f337c3cff
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: e9c384db-7603-5acb-9880-9f5f337c3cff
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/9980e02c-c2be-4d73-94e8-173b1dc7cf3c
          scope: /providers/Microsoft.Management/managementGroups/myorg-3
          timeouts: null
      - address: module.test_root_id_3.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/ee29e5c8-8d3b-5037-9705-b99dffd78101"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/ee29e5c8-8d3b-5037-9705-b99dffd78101
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: ee29e5c8-8d3b-5037-9705-b99dffd78101
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd
          scope: /providers/Microsoft.Management/managementGroups/myorg-3
          timeouts: null
      - address: module.test_root_id_3.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/ef51d054-f421-5991-b773-8c4099323a71"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/ef51d054-f421-5991-b773-8c4099323a71
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: ef51d054-f421-5991-b773-8c4099323a71
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/056cd41c-7e88-42e1-933e-88ba6a50c9c3
          scope: /providers/Microsoft.Management/managementGroups/myorg-3
          timeouts: null
      - address: module.test_root_id_3.azurerm_role_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/fe26a3c0-a6be-5a3c-b551-3a9970772e50"]
        mode: managed
        type: azurerm_role_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/fe26a3c0-a6be-5a3c-b551-3a9970772e50
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          condition: null
          condition_version: null
          delegated_managed_identity_resource_id: null
          description: null
          name: fe26a3c0-a6be-5a3c-b551-3a9970772e50
          role_definition_id: /providers/Microsoft.Authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa
          scope: /providers/Microsoft.Management/managementGroups/myorg-3
          timeouts: null
      - address: module.test_root_id_3.azurerm_role_definition.enterprise_scale["/providers/Microsoft.Authorization/roleDefinitions/e2703054-5e24-55a2-b1d9-d608208f872e"]
        mode: managed
        type: azurerm_role_definition
        name: enterprise_scale
        index: /providers/Microsoft.Authorization/roleDefinitions/e2703054-5e24-55a2-b1d9-d608208f872e
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 1
        values:
          assignable_scopes:
            - /providers/Microsoft.Management/managementGroups/myorg-3
          description: Enterprise-scale custom Role Definition. Grants full access to manage Virtual Network subnets, but no other network resources.
          name: '[MYORG-3] Network-Subnet-Contributor'
          permissions:
            - actions:
                - Microsoft.Authorization/*/read
                - Microsoft.Insights/alertRules/*
                - Microsoft.ResourceHealth/availabilityStatuses/read
                - Microsoft.Resources/deployments/*
                - Microsoft.Resources/subscriptions/resourceGroups/read
                - Microsoft.Support/*
                - Microsoft.Network/*/read
                - Microsoft.Network/virtualNetworks/subnets/*
              data_actions: null
              not_actions: []
              not_data_actions: null
          role_definition_id: e2703054-5e24-55a2-b1d9-d608208f872e
          scope: /providers/Microsoft.Management/managementGroups/myorg-3
          timeouts: null
      - address: module.test_root_id_3.time_sleep.after_azurerm_management_group
        mode: managed
        type: time_sleep
        name: after_azurerm_management_group
        provider_name: registry.terraform.io/hashicorp/time
        schema_version: 0
        values:
          create_duration: 30s
          destroy_duration: 0s
          triggers:
            azurerm_management_group_level_1: '["/providers/Microsoft.Management/managementGroups/myorg-3"]'
            azurerm_management_group_level_2: '["/providers/Microsoft.Management/managementGroups/myorg-3-decommissioned","/providers/Microsoft.Management/managementGroups/myorg-3-landing-zones","/providers/Microsoft.Management/managementGroups/myorg-3-platform","/providers/Microsoft.Management/managementGroups/myorg-3-sandboxes"]'
            azurerm_management_group_level_3: '["/providers/Microsoft.Management/managementGroups/myorg-3-connectivity","/providers/Microsoft.Management/managementGroups/myorg-3-customer-corp","/providers/Microsoft.Management/managementGroups/myorg-3-customer-online","/providers/Microsoft.Management/managementGroups/myorg-3-customer-sap","/providers/Microsoft.Management/managementGroups/myorg-3-identity","/providers/Microsoft.Management/managementGroups/myorg-3-management"]'
            azurerm_management_group_level_4: '["/providers/Microsoft.Management/managementGroups/myorg-3-customer-web-dev","/providers/Microsoft.Management/managementGroups/myorg-3-customer-web-prod","/providers/Microsoft.Management/managementGroups/myorg-3-customer-web-test"]'
            azurerm_management_group_level_5: '[]'
            azurerm_management_group_level_6: '[]'
      - address: module.test_root_id_3.time_sleep.after_azurerm_policy_assignment
        mode: managed
        type: time_sleep
        name: after_azurerm_policy_assignment
        provider_name: registry.terraform.io/hashicorp/time
        schema_version: 0
        values:
          create_duration: 30s
          destroy_duration: 0s
          triggers:
            azurerm_policy_assignment_enterprise_scale: '["/providers/Microsoft.Management/managementGroups/myorg-3-customer-online/providers/Microsoft.Authorization/policyAssignments/Deny-RSG-Locations","/providers/Microsoft.Management/managementGroups/myorg-3-customer-online/providers/Microsoft.Authorization/policyAssignments/Deny-Resource-Locations","/providers/Microsoft.Management/managementGroups/myorg-3-customer-sap/providers/Microsoft.Authorization/policyAssignments/Deny-RSG-Locations","/providers/Microsoft.Management/managementGroups/myorg-3-customer-sap/providers/Microsoft.Authorization/policyAssignments/Deny-Resource-Locations","/providers/Microsoft.Management/managementGroups/myorg-3-customer-sap/providers/Microsoft.Authorization/policyAssignments/Deploy-HITRUST-HIPAA","/providers/Microsoft.Management/managementGroups/myorg-3-customer-web-dev/providers/Microsoft.Authorization/policyAssignments/Deny-RSG-Locations","/providers/Microsoft.Management/managementGroups/myorg-3-customer-web-dev/providers/Microsoft.Authorization/policyAssignments/Deny-Resource-Locations","/providers/Microsoft.Management/managementGroups/myorg-3-customer-web-test/providers/Microsoft.Authorization/policyAssignments/Deny-RSG-Locations","/providers/Microsoft.Management/managementGroups/myorg-3-customer-web-test/providers/Microsoft.Authorization/policyAssignments/Deny-Resource-Locations","/providers/Microsoft.Management/managementGroups/myorg-3-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-IP-Forwarding","/providers/Microsoft.Management/managementGroups/myorg-3-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Priv-Containers-AKS","/providers/Microsoft.Management/managementGroups/myorg-3-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Priv-Escalation-AKS","/providers/Microsoft.Management/managementGroups/myorg-3-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-RDP-From-Internet","/providers/Microsoft.Management/managementGroups/myorg-3-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Storage-http","/providers/Microsoft.Management/managementGroups/myorg-3-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-Subnet-Without-Nsg","/providers/Microsoft.Management/managementGroups/myorg-3-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deny-http-Ingress-AKS","/providers/Microsoft.Management/managementGroups/myorg-3-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-AKS-Policy","/providers/Microsoft.Management/managementGroups/myorg-3-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-DB-Auditing","/providers/Microsoft.Management/managementGroups/myorg-3-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-Security","/providers/Microsoft.Management/managementGroups/myorg-3-landing-zones/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Backup","/providers/Microsoft.Management/managementGroups/myorg-3-management/providers/Microsoft.Authorization/policyAssignments/Deploy-Log-Analytics","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyAssignments/Deny-RSG-Locations","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyAssignments/Deny-Resource-Locations","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyAssignments/Deploy-ASC-Defender","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyAssignments/Deploy-ASC-Monitoring","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyAssignments/Deploy-AzActivity-Log","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyAssignments/Deploy-HITRUST-HIPAA","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyAssignments/Deploy-LX-Arc-Monitoring","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyAssignments/Deploy-Resource-Diag","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyAssignments/Deploy-SQL-Auditing","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyAssignments/Deploy-VM-Monitoring","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyAssignments/Deploy-VMSS-Monitoring","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyAssignments/Deploy-WS-Arc-Monitoring"]'
      - address: module.test_root_id_3.time_sleep.after_azurerm_policy_definition
        mode: managed
        type: time_sleep
        name: after_azurerm_policy_definition
        provider_name: registry.terraform.io/hashicorp/time
        schema_version: 0
        values:
          create_duration: 30s
          destroy_duration: 0s
          triggers:
            azurerm_policy_definition_enterprise_scale: '["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-httpsonly","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Append-AppService-latestTLS","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Append-KV-SoftDelete","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-disableNonSslPort","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Append-Redis-sslEnforcement","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-AA-child-resources","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-AppGW-Without-WAF","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceApiApp-http","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceFunctionApp-http","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-AppServiceWebApp-http","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-MySql-http","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-PostgreSql-http","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-Private-DNS-Zones","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-Aks","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-CosmosDB","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-KeyVault","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-MariaDB","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-MySQL","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-PostgreSql","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-Sql","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicEndpoint-Storage","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-PublicIP","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-RDP-From-Internet","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-Redis-http","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-Sql-minTLS","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-SqlMi-minTLS","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-Storage-minTLS","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Nsg","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Udr","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-VNET-Peer-Cross-Sub","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deny-VNet-Peering","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-ACR","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-AKS","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-AKV","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-ARM","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-AppSrv","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-DNS","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-SA","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-SQLVM","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-Sql","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-Defender-VMs","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-ASC-SecurityContacts","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Budget","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-DDoSProtection","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-Blob-PrivateEndpoint","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-File-PrivateEndpoint","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-KeyVault-PrivateEndpoint","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-Queue-PrivateEndpoint","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-Sql-PrivateEndpoint","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-DNSZoneGroup-For-Table-PrivateEndpoint","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AA","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACI","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ACR","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AKS","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-APIMgmt","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ActivityLog","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-AnalysisService","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApiForFHIR","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ApplicationGateway","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Batch","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CDNEndpoints","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CognitiveServices","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-CosmosDB","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DLAnalytics","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataExplorerCluster","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataFactory","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-DataLakeStore","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Databricks","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSub","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridSystemTopic","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventGridTopic","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-EventHub","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ExpressRoute","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Firewall","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-FrontDoor","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Function","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-HDInsight","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-KeyVault","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LoadBalancer","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogicAppsISE","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-LogicAppsWF","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MariaDB","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MediaService","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MlWorkspace","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-MySQL","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NIC","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-NetworkSecurityGroups","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PostgreSQL","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-PowerBIEmbedded","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-RecoveryVault","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-RedisCache","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Relay","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLDBs","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLElasticPools","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SQLMI","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SearchServices","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-ServiceBus","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-SignalR","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-StreamAnalytics","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TimeSeriesInsights","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-TrafficManager","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VM","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VMSS","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VNetGW","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-VirtualNetwork","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDAppGroup","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDHostPools","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WVDWorkspace","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-WebServerFarm","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-Website","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Diagnostics-iotHub","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-FirewallPolicy","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-HUB","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-LA-Config","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Log-Analytics","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-MySQL-sslEnforcement","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Nsg-FlowLogs-to-LA","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-PostgreSQL-sslEnforcement","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-SQL-minTLS","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-AuditingSettings","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-SecurityAlertPolicies","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-Tde","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Sql-vulnerabilityAssessments","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-SqlMi-minTLS","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Storage-sslEnforcement","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-VNET-HubSpoke","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-Windows-DomainJoin","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-vHUB","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-vNet","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policyDefinitions/Deploy-vWAN"]'
      - address: module.test_root_id_3.time_sleep.after_azurerm_policy_set_definition
        mode: managed
        type: time_sleep
        name: after_azurerm_policy_set_definition
        provider_name: registry.terraform.io/hashicorp/time
        schema_version: 0
        values:
          create_duration: 30s
          destroy_duration: 0s
          triggers:
            azurerm_policy_set_definition_enterprise_scale: '["/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policySetDefinitions/Deny-PublicEndpoints","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policySetDefinitions/Deploy-ASC-Config","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Diag-LogAnalytics","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Sql-Security","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policySetDefinitions/Enforce-EncryptTransit","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Encryption-CMK"]'
      - address: module.test_root_id_3.time_sleep.after_azurerm_role_assignment
        mode: managed
        type: time_sleep
        name: after_azurerm_role_assignment
        provider_name: registry.terraform.io/hashicorp/time
        schema_version: 0
        values:
          create_duration: 0s
          destroy_duration: 0s
          triggers:
            azurerm_policy_assignment_enterprise_scale: '["/providers/Microsoft.Management/managementGroups/myorg-3-customer-sap/providers/Microsoft.Authorization/roleAssignments/207a5b54-9b17-5bd1-96f8-268924017981","/providers/Microsoft.Management/managementGroups/myorg-3-customer-sap/providers/Microsoft.Authorization/roleAssignments/2f139301-0ff6-5a13-973c-8ea35eebe2b0","/providers/Microsoft.Management/managementGroups/myorg-3-customer-sap/providers/Microsoft.Authorization/roleAssignments/77e578fe-ff27-538f-adc4-730db71fdd0d","/providers/Microsoft.Management/managementGroups/myorg-3-customer-sap/providers/Microsoft.Authorization/roleAssignments/b7bf3386-c1ee-5a60-9641-6a30a45acdf7","/providers/Microsoft.Management/managementGroups/myorg-3-customer-sap/providers/Microsoft.Authorization/roleAssignments/d64a855e-addd-5bd3-bf31-c6665d7c5d14","/providers/Microsoft.Management/managementGroups/myorg-3-landing-zones/providers/Microsoft.Authorization/roleAssignments/19e1649f-7277-5e64-867f-8773880ddd4c","/providers/Microsoft.Management/managementGroups/myorg-3-landing-zones/providers/Microsoft.Authorization/roleAssignments/1b3b204a-680d-5241-825e-d6cc8150b164","/providers/Microsoft.Management/managementGroups/myorg-3-landing-zones/providers/Microsoft.Authorization/roleAssignments/457bf416-d80f-58ff-a498-468d506da4cc","/providers/Microsoft.Management/managementGroups/myorg-3-landing-zones/providers/Microsoft.Authorization/roleAssignments/99290d7c-a172-5310-bcfd-a744c96e9997","/providers/Microsoft.Management/managementGroups/myorg-3-management/providers/Microsoft.Authorization/roleAssignments/3f38bf91-7fd6-52cc-ae3a-294080f1b1ea","/providers/Microsoft.Management/managementGroups/myorg-3-management/providers/Microsoft.Authorization/roleAssignments/8da794b1-3948-5f39-889a-5674ab8ddd00","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/05e6826e-c0ed-5d51-977b-bc10e672b939","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/2639a403-9029-5a74-a65c-e080797f6a1c","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/36088e64-b1d1-5fb7-b99f-9bc4ee81a9c8","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/3d6ab317-7357-521b-b5e8-1b706ecd744a","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/499c3ee6-f049-5472-b69f-056a209ee521","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/4c8095f1-1344-5bf0-b3aa-705d1b723bce","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/573872ae-4ff8-52e6-80fc-ce716e7ea175","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/7216205c-ca85-5af0-b14e-a9666dc2c688","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/76acd7bb-b449-505f-8eb4-8f48f4c2980a","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/7e07d7dc-6d7c-5494-abb1-1dc09474c33f","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/a6c5c6b2-2a70-5422-b834-a8d24cb85e6c","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/c0552ed6-a893-564a-9706-8fc6ba3752fe","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/cca56fa4-07b7-54a1-9e9c-49a42b7dda5f","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/d661a31a-da27-5650-b064-7a93f091b098","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/e9c384db-7603-5acb-9880-9f5f337c3cff","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/ee29e5c8-8d3b-5037-9705-b99dffd78101","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/ef51d054-f421-5991-b773-8c4099323a71","/providers/Microsoft.Management/managementGroups/myorg-3/providers/Microsoft.Authorization/roleAssignments/fe26a3c0-a6be-5a3c-b551-3a9970772e50"]'
      - address: module.test_root_id_3.time_sleep.after_azurerm_role_definition
        mode: managed
        type: time_sleep
        name: after_azurerm_role_definition
        provider_name: registry.terraform.io/hashicorp/time
        schema_version: 0
        values:
          create_duration: 60s
          destroy_duration: 0s
          triggers:
            azurerm_role_definition_enterprise_scale: '["/providers/Microsoft.Authorization/roleDefinitions/e2703054-5e24-55a2-b1d9-d608208f872e"]'
    address: module.test_root_id_3
  - resources:
      - address: module.test_root_id_3_lz1.azurerm_management_group.level_1["/providers/Microsoft.Management/managementGroups/myorg-3-scoped-lz1"]
        mode: managed
        type: azurerm_management_group
        name: level_1
        index: /providers/Microsoft.Management/managementGroups/myorg-3-scoped-lz1
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          display_name: Scoped LZ1
          name: myorg-3-scoped-lz1
          parent_management_group_id: /providers/Microsoft.Management/managementGroups/myorg-3-landing-zones
          timeouts: null
      - address: module.test_root_id_3_lz1.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3-scoped-lz1/providers/Microsoft.Authorization/policyAssignments/Deny-RSG-Locations"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3-scoped-lz1/providers/Microsoft.Authorization/policyAssignments/Deny-RSG-Locations
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Specifies the allowed locations (regions) where Resource Groups can be deployed.
          display_name: Limit allowed locations for Resource Groups
          enforcement_mode: true
          identity:
            - type: None
          location: eastus
          name: Deny-RSG-Locations
          not_scopes: []
          parameters: '{"listOfAllowedLocations":{"value":["northcentralus","southcentralus"]}}'
          policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/e765b5de-1225-4ba3-bd56-1ac6695af988
          scope: /providers/Microsoft.Management/managementGroups/myorg-3-scoped-lz1
          timeouts: null
      - address: module.test_root_id_3_lz1.azurerm_policy_assignment.enterprise_scale["/providers/Microsoft.Management/managementGroups/myorg-3-scoped-lz1/providers/Microsoft.Authorization/policyAssignments/Deny-Resource-Locations"]
        mode: managed
        type: azurerm_policy_assignment
        name: enterprise_scale
        index: /providers/Microsoft.Management/managementGroups/myorg-3-scoped-lz1/providers/Microsoft.Authorization/policyAssignments/Deny-Resource-Locations
        provider_name: registry.terraform.io/hashicorp/azurerm
        schema_version: 0
        values:
          description: Specifies the allowed locations (regions) where Resources can be deployed.
          display_name: Limit allowed locations for Resources
          enforcement_mode: true
          identity:
            - type: None
          location: eastus
          name: Deny-Resource-Locations
          not_scopes: []
          parameters: '{"listOfAllowedLocations":{"value":["northcentralus","southcentralus"]}}'
          policy_definition_id: /providers/Microsoft.Authorization/policyDefinitions/e56962a6-4747-49cd-b67b-bf8b01975c4c
          scope: /providers/Microsoft.Management/managementGroups/myorg-3-scoped-lz1
          timeouts: null
      - address: module.test_root_id_3_lz1.time_sleep.after_azurerm_management_group
        mode: managed
        type: time_sleep
        name: after_azurerm_management_group
        provider_name: registry.terraform.io/hashicorp/time
        schema_version: 0
        values:
          create_duration: 30s
          destroy_duration: 0s
          triggers:
            azurerm_management_group_level_1: '["/providers/Microsoft.Management/managementGroups/myorg-3-scoped-lz1"]'
            azurerm_management_group_level_2: '[]'
            azurerm_management_group_level_3: '[]'
            azurerm_management_group_level_4: '[]'
            azurerm_management_group_level_5: '[]'
            azurerm_management_group_level_6: '[]'
      - address: module.test_root_id_3_lz1.time_sleep.after_azurerm_policy_assignment
        mode: managed
        type: time_sleep
        name: after_azurerm_policy_assignment
        provider_name: registry.terraform.io/hashicorp/time
        schema_version: 0
        values:
          create_duration: 30s
          destroy_duration: 0s
          triggers:
            azurerm_policy_assignment_enterprise_scale: '["/providers/Microsoft.Management/managementGroups/myorg-3-scoped-lz1/providers/Microsoft.Authorization/policyAssignments/Deny-RSG-Locations","/providers/Microsoft.Management/managementGroups/myorg-3-scoped-lz1/providers/Microsoft.Authorization/policyAssignments/Deny-Resource-Locations"]'
      - address: module.test_root_id_3_lz1.time_sleep.after_azurerm_policy_definition
        mode: managed
        type: time_sleep
        name: after_azurerm_policy_definition
        provider_name: registry.terraform.io/hashicorp/time
        schema_version: 0
        values:
          create_duration: 30s
          destroy_duration: 0s
          triggers:
            azurerm_policy_definition_enterprise_scale: '[]'
      - address: module.test_root_id_3_lz1.time_sleep.after_azurerm_policy_set_definition
        mode: managed
        type: time_sleep
        name: after_azurerm_policy_set_definition
        provider_name: registry.terraform.io/hashicorp/time
        schema_version: 0
        values:
          create_duration: 30s
          destroy_duration: 0s
          triggers:
            azurerm_policy_set_definition_enterprise_scale: '[]'
      - address: module.test_root_id_3_lz1.time_sleep.after_azurerm_role_assignment
        mode: managed
        type: time_sleep
        name: after_azurerm_role_assignment
        provider_name: registry.terraform.io/hashicorp/time
        schema_version: 0
        values:
          create_duration: 0s
          destroy_duration: 0s
          triggers:
            azurerm_policy_assignment_enterprise_scale: '[]'
      - address: module.test_root_id_3_lz1.time_sleep.after_azurerm_role_definition
        mode: managed
        type: time_sleep
        name: after_azurerm_role_definition
        provider_name: registry.terraform.io/hashicorp/time
        schema_version: 0
        values:
          create_duration: 60s
          destroy_duration: 0s
          triggers:
            azurerm_role_definition_enterprise_scale: '[]'
    address: module.test_root_id_3_lz1
